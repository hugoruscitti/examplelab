<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on Examplelab</title>
    <link>/tags/windows/</link>
    <description>Recent content in windows on Examplelab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Aug 2012 15:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Haciendo un cargador de juegos python</title>
      <link>/posts/2012-08-18-haciendo-un-cargador-de-juegos-python/</link>
      <pubDate>Sat, 18 Aug 2012 15:00:00 +0000</pubDate>
      
      <guid>/posts/2012-08-18-haciendo-un-cargador-de-juegos-python/</guid>
      <description>Si escribes juegos usando python, seguramente te has encontrado en problemas al distribuir juegos sobre windows.
Python es un gran lenguaje, pero cuando se utiliza con varias bibliotecas sobre Windows termina siendo algo difícil de transportar de un equipo a otro, y si quieres presentar tus juegos a muchas personas eso termina convirtiendose en un problema.
En este artículo veremos una alternativa para empaquetar y distribuir nuestros juegos sobre windows de manera bastante sencilla, crearemos varios cargadores de juegos para bibliotecas como pygame, cocos2d y pilas-engine.</description>
    </item>
    
  </channel>
</rss>