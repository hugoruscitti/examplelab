<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Examplelab</title>
    <link>https://www.examplelab.com.ar/</link>
    <description>Recent content on Examplelab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.examplelab.com.ar/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sobre las redes sociales</title>
      <link>https://www.examplelab.com.ar/posts/2021-04-29-sobre-las-redes-sociales/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-04-29-sobre-las-redes-sociales/</guid>
      <description>&lt;p&gt;Hace unos días vi un documental llamado &lt;em&gt;El Dilema de las Redes Sociales&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Comencé a ver el documental con muchas expectativas, porque trataba
de un tema que me parece importante, donde había mucho espacio
para analizar, hacer recomendaciones para mejorar la relación con la tecnología
y aprender algunos trucos.&lt;/p&gt;
&lt;p&gt;Imaginé que el documental iba en la misma dirección que mis expectativas.&lt;/p&gt;
&lt;p&gt;Sin embargo, el documental nos muestra una serie de problemas a tal velocidad
que se vuelve abrumador. Incluso problemas que tienen soluciones
simples y son fácilmente abordables parecen imposibles de resolver cuando
se describen a tal velocidad.&lt;/p&gt;
&lt;p&gt;Además, los efectos de iluminación y música tenebrosa nos aleja de
las soluciones y se vuelve por demás dramático:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/sobre-las-redes-sociales/drama.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Supongo que para una persona muy inocente puede ser revelador en algún punto,
pero incluso en esos casos creo que lo más conveniente es informar, orientar y
sugerir en lugar de alarmar y atemorizar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/sobre-las-redes-sociales/panel.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;A la larga, atemorizar no conduce a resolver problemas ni a involucrarse, todo
lo contrario.&lt;/p&gt;
&lt;h1 id=&#34;el-problema-de-sentirnos-víctimas&#34;&gt;El problema de sentirnos víctimas&lt;/h1&gt;
&lt;p&gt;Uno de los puntos más flojos para mí fue la manera en la que simplifica las cosas. Nos
muestra a las redes como un ser maligno, descontrolado, muy poderoso, y al mismo tiempo
pone a las personas en un rol de víctimas indefensas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/sobre-las-redes-sociales/titeres.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Creo que esa premisa no ayuda a resolver problemas, porque quien sienta que es
indefenso ante las redes sociales no va a hacer mucho para cambiar su
condición. Sentirse incapaz de hacer algo al respecto es demasiado fácil, es
como librarse de cualquier tipo de responsabilidad.&lt;/p&gt;
&lt;p&gt;Y la realidad es completamente diferente, las personas sí
podemos involucrarnos y lograr resultados si nos los proponemos, no somos víctimas
de las situaciones ni estamos bajo un engaño o hechizo por culpa de los &amp;ldquo;malos&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Cuando se mira a un problema con responsabilidad, las cosas se vuelven mucho
más fáciles, podemos hacernos preguntas, reconocer dónde tomamos malas decisiones
y superar adversidades.&lt;/p&gt;
&lt;h1 id=&#34;faltaron-otros-puntos-de-vista&#34;&gt;Faltaron otros puntos de vista&lt;/h1&gt;
&lt;p&gt;Muchos documentales suele incluir casos de personas que pasan por problemas
similares a los que podría experimentar el público, de modo que se puede producir
una identificación y pensar algunas estrategias para superar el drama.&lt;/p&gt;
&lt;p&gt;Pero en este documental omiten por completo otros puntos de vista menos dramáticos.&lt;/p&gt;
&lt;p&gt;Mi suposición es que muchas personas usan redes porque les resulta entretenido
y conveniente al mismo tiempo, algo así como un pasatiempo similar a jugar
juegos o hacer zapping en la TV.&lt;/p&gt;
&lt;p&gt;Pero varias de estas personas saben (intuitivamente) que pasan demasiado
tiempo frente al teléfono, incluso los sistemas operativos vienen con
aplicaciones preinstaladas para saber cuanto tiempo pasamos en cada aplicación.
Mirar esas estadísticas y compararla con nuestra percepción es una de las cosas
más importantes que podemos hacer para tomar conciencia, sin alarmarse.&lt;/p&gt;
&lt;p&gt;Me llamó la atención no ver ninguna orientación al respecto en el documental. Tal vez
hubiera alcanzado con mencionar que el aburrimiento es un gran incentivo para hacer
cosas útiles o disfrutar lo que pasa al rededor nuestro.&lt;/p&gt;
&lt;p&gt;El aburrimiento pierde toda su utilidad cuando usamos el teléfono y pasamos el rato viendo
qué hacen otras personas en las redes.&lt;/p&gt;
&lt;p&gt;Así, una buena forma de resolver todo esto es encontrar cosas útiles para
invertir nuestro tiempo libre, encontrar algo de equilibrio y no abusar de las redes
sociales, pasar tiempo de calidad con personas cercanas y poner algunos
límites.&lt;/p&gt;
&lt;p&gt;Es decir, poner nuestras intenciones en primer lugar para usar las herramientas
con un propósito claro.&lt;/p&gt;
&lt;h1 id=&#34;y-qué-conviene-explorar-si-me-preocupa-todo-esto&#34;&gt;¿Y qué conviene explorar si me preocupa todo esto?&lt;/h1&gt;
&lt;p&gt;Creo que hay dos buenas fuentes de información que vale la pena mencionar:&lt;/p&gt;
&lt;p&gt;Por un lado, &lt;a href=&#34;https://www.calnewport.com/&#34;&gt;Cal NewPort&lt;/a&gt; publicó dos libros muy
buenos que tratan sobre el tema: Uno de sus libros de llama &lt;em&gt;Deep Work&lt;/em&gt; y el
otro es &lt;em&gt;Digital Minimalist&lt;/em&gt;. Incluso dio varias charlas y entrevistas que se
pueden encontrar fácilmente en video, así que hay montón de material para
enriquecerse con su punto de vista sobre estos problemas.&lt;/p&gt;
&lt;p&gt;Otro autor interesante es &lt;a href=&#34;https://www.nirandfar.com/&#34;&gt;Niel Eyal&lt;/a&gt; y su
libro &lt;em&gt;Indistractable&lt;/em&gt;. Bah, todo su blog está repleto de artículos interesantes
para mejorar comportamientos, adquirir hábitos y resolver problemas como
los que menciona el documental.&lt;/p&gt;
&lt;p&gt;Voy a escribir algo sobre estos libros en el futuro.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Verbalizar para clarificar</title>
      <link>https://www.examplelab.com.ar/posts/2021-04-23-verbalizar-para-clarificar/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-04-23-verbalizar-para-clarificar/</guid>
      <description>&lt;p&gt;Hoy pude terminar de resolver un problema que tenía
en un proyecto hace días.&lt;/p&gt;
&lt;p&gt;Básicamente tenía que lograr que dos sistemas se hablen
entré si, a través de una &lt;em&gt;api&lt;/em&gt;, pero la única forma que tenía
de hacer pruebas era mediante una interfaz web que no me
daba mucha información:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/verbalizar-para-clarificar/webapi.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;No veía si efectivamente se llamaba a la &lt;em&gt;api&lt;/em&gt;, si se estaban
enviando los parámetros correctamente, si había algún tipo
conversión de datos en el medio, o si la respuesta tenía algún
tipo de incongruencia.&lt;/p&gt;
&lt;p&gt;Cuando me encuentro haciendo cosas de esta manera me cuesta
tener claridad, puedo pasar un buen rato  peleando conmigo mismo
haciendo pruebas tras pruebas sin dar con la solución como en esta
imagen (pero con menos pelo):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/verbalizar-para-clarificar/meme.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El punto es que todo se vuelve peor cuando no tengo claridad, sigo abriendo
pestañas en el navegador intentando dar con la respuesta a algo que ni
siquiera comprendo.&lt;/p&gt;
&lt;h1 id=&#34;cambiando-de-enfoque&#34;&gt;Cambiando de enfoque&lt;/h1&gt;
&lt;p&gt;Lo que me ayudó a resolver el problema fue cambiar de enfoque, en lugar de
seguir probando cosas comencé a verbalizar:&lt;/p&gt;
&lt;p&gt;Verbalizar consiste en hacerse
preguntas tontas como las siguientes: ¿Qué problema tengo?, ¿cómo
se lo explicaría a alguien desde el principio? o ¿qué pruebas estoy haciendo y
qué conclusiones puedo sacar de ellas?.&lt;/p&gt;
&lt;p&gt;Insisto en que son preguntas tontas, porque obviamente sé qué problema tengo: ¡la cosa no
funciona y no veo el error!. Sin embargo, cuando me pongo a verbalizar empiezo
a construir un modo de pensar distinto; si tuviera que explicarle a alguien el
problema en voz alta no le diría &amp;ldquo;es que no anda, y no sé por qué&amp;rdquo;. Me esfuerzo
por ser más claro y detallado.&lt;/p&gt;
&lt;p&gt;Cuando verbalizo un problema me resulta natural empezar por el principio, separo las
cosas importantes de las que no lo son, me doy cuenta de que mis ideas y las frustraciones
son cosas distintas y busco ser objetivo sobre las cosas que estoy probando.&lt;/p&gt;
&lt;p&gt;Así que hoy hice ese ejercicio, comencé a escribir un documento con el detalle del
problema, algunas capturas de pantalla para describir las pruebas que estaba haciendo y
mientras escribía logré darme cuenta de dónde estaba el problema.&lt;/p&gt;
&lt;p&gt;Esto no es nuevo, de hecho hace un tiempo escuché que algunas personas usan
un método llamado &lt;a href=&#34;https://en.wikipedia.org/wiki/Rubber_duck_debugging&#34;&gt;Rubber Duck Debugging&lt;/a&gt; que
simplemente consiste en tratar de explicar el problema en voz alta para clarificar ideas.&lt;/p&gt;
&lt;p&gt;Claro, el truco no está en el patito de goma o el documento que escribís, sino en el ejercicio
de sacar cosas de la cabeza, ordenarlas y poder clarificarlas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Todo está bien</title>
      <link>https://www.examplelab.com.ar/posts/2021-04-18-todo-esta-bien/</link>
      <pubDate>Sun, 18 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-04-18-todo-esta-bien/</guid>
      <description>&lt;p&gt;Sé que el título del post puede sonar incorrecto en estas épocas de pandemia e
incertidumbre económica, pero siento que son estos momentos tan adversos los
que nos hacen valorar muchas cosas que dábamos por sentado.&lt;/p&gt;
&lt;p&gt;Para mí, quejarme es una suerte de desahogo, me acostumbré a hacerlo de tal
forma que hoy me cuesta cambiarlo. Ahora pienso: ¿cuántas veces me quejé por
boludeces como hacer fila en un cajero automático?, ¿por esperar en un restaurant
a que traigan la comida?, ¿y las veces que me quejé porque internet funcionaba lento?.&lt;/p&gt;
&lt;p&gt;Louis C.K. &lt;a href=&#34;https://www.youtube.com/watch?v=q8LaT5Iiwo4&#34;&gt;hizo esta observación&lt;/a&gt;
hace unos años y creo que vale la pena recordarlo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Todo es maravilloso, pero nadie está feliz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Creo que en cierta forma, al igual que le pasa a muchas personas, yo me
acostumbré a la comodidad de la vida moderna: donde puedo pulsar un botón en la
computadora y ver comedia gratis, girar una perilla y tener agua caliente e instantánea
para tomar una ducha, pulsar un botón para encender el aire acondicionado y regular
la temperatura de la habitación como en una película de ciencia ficción, o
incluso hacer compras desde la computadora, ¡y recibir el producto en la puerta
de mi casa!.&lt;/p&gt;
&lt;p&gt;Sin embargo, suelo quejarme porque las cosas siempre podrían ser mejor y me
olvido de las cosas que podrían ir peor.&lt;/p&gt;
&lt;p&gt;Siempre supe que el mundo no me debe nada, pero recién este año empecé a darme
cuenta de que tengo que intentar ser más consciente de lo afortunados que somos
antes de empezar a quejarme de algo.&lt;/p&gt;
&lt;p&gt;Tengo salud, un laburo que me gusta y hasta la compañía de personas buenas e
inteligentes de las que puedo aprender un montón. No tengo derecho a quejarme
y desatender estos privilegios.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mis juegos favoritos 2</title>
      <link>https://www.examplelab.com.ar/posts/2021-04-13-mis-juegos-favoritos-2/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-04-13-mis-juegos-favoritos-2/</guid>
      <description>&lt;p&gt;El mes pasado &lt;a href=&#34;https://www.examplelab.com.ar/posts/2021-03-09-mis-juegos-favoritos-1/&#34;&gt;listé algunos de mis juegos favoritos&lt;/a&gt;, pero me faltó
mencionar algunos muy buenos, así que hoy agrego otros tres
juegos que disfruté y recomiendo jugar.&lt;/p&gt;
&lt;h1 id=&#34;the-talos-principle&#34;&gt;The Talos Principle&lt;/h1&gt;
&lt;p&gt;El juego te propone una serie de puzzles bastante desafiantes, añadiendo nuevos
elementos y mecánicas en cada habitación:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-2/nivel1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Además, el juego está ambientado es una especie de mundo creado especialmente
para nosotros, con elementos modernos como robots, sensores y portales, pero
mezclando algunas construcciones antiguas.&lt;/p&gt;
&lt;p&gt;Una vuelta de tuerca interesante para mí es que el juego está repleto de mensajes
que nos hacen enganchar con la trama inicial del juego. Incluso hay una serie
de terminales similares a BBS con reflexiones y publicaciones de otros seres que
habitaron el mismo mundo antes que nosotros:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-2/mensajes.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Parece algo menor, pero a mí el juego me entretuvo mucho leyendo estos textos
y buscando desbloquear mapas para acceder a más terminales y explorar más textos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-2/noche.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;ori-and-the-will-of-the-wisps&#34;&gt;Ori and the Will of the Wisps&lt;/h1&gt;
&lt;p&gt;Ori es una especie de espíritu del bosque que podemos controlar y hacer
evolucionar para avanzar en el escenario. El mapa del juego es enorme, y podemos
ir accediendo a él en la medida que hacemos que el personaje se vuelva cada vez
más poderoso:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-2/bosque.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Algo que me gustó mucho del juego es que los escenarios son espectaculares, dan
ganas de recorrer y descubrir cada rincón. Tanto esta versión del juego, como la
anterior que se llamaba &lt;em&gt;Ori and the blind forest&lt;/em&gt; tienen unos escenarios
espectaculares:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-2/verde.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;portal-2&#34;&gt;Portal 2&lt;/h1&gt;
&lt;p&gt;Este es sin duda uno de los mejores juegos que jugué, el juego te propone
desafíos dentro de una serie de instalaciones en ruinas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-2/comienzo.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La historia del juego es una continuación del juego anterior, Portal, sin embargo
se puede jugar y entender por completo sin haber jugado a la versión anterior.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-2/puentes.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Las mecánicas del juego y la historia están espectaculares. No sé cuanto tiempo
estuve jugando desde que comencé hasta que pude terminarlo, pero es bastante
largo y no dan ganas de que termine.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Una cosa a la vez</title>
      <link>https://www.examplelab.com.ar/posts/2021-04-09-una-cosa-a-la-vez/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-04-09-una-cosa-a-la-vez/</guid>
      <description>&lt;p&gt;En las computadoras es muy fácil abrir varias aplicaciones, tener
muchas pestañas del navegador abiertas e ir &lt;em&gt;saltando&lt;/em&gt; de una aplicación
a otra.&lt;/p&gt;
&lt;p&gt;Sin embargo, al menos para mí, es muy tedioso trabajar
sin mantener el foco en algo específico, puedo estar horas saltando de un tema
a otro, haciendo varias cosas y aun así sentir que no logré completar nada útil
al finalizar el día.&lt;/p&gt;
&lt;p&gt;Necesito concentrarme en algo específico, dedicarle esfuerzo y terminarlo.&lt;/p&gt;
&lt;p&gt;Suena muy sencillo cuando lo escribo de esa forma, pero lo cierto es que para mí
concentrarme en una sola cosa y no dispersarme me resulta desafiante, y no puedo
hacerlo sin algo de esfuerzo.&lt;/p&gt;
&lt;p&gt;Con el tiempo, me di cuenta de que me resulta difícil mantener el foco porque eso
significa que tengo que decirle que &lt;em&gt;no&lt;/em&gt; a muchas cosas. Cosas que generalmente
no son importantes, pero que parecen más interesantes y divertidas de hacer. Así
que cuando salto de una aplicación a otra por lo general lo hago porque me
quiero escapar o estoy frente a una tarea que no está muy bien definida y parece
imposible.&lt;/p&gt;
&lt;p&gt;La buena noticia es que muchos libros de productividad atacan este
problema y te recomiendan cosas para resolverlo.&lt;/p&gt;
&lt;p&gt;En mi caso, para no caer en distracciones y poder dedicarme a realizar
tareas útiles me sirve hacer lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tomar notas de las tareas que quiero hacer en el día, antes de ponerme a trabajar.&lt;/li&gt;
&lt;li&gt;dedicarle tiempo sin distracciones a cada tarea, una a la vez.&lt;/li&gt;
&lt;li&gt;descansar cada tanto (cada hora o cada 30 minutos).&lt;/li&gt;
&lt;li&gt;quitar y poner tareas nuevas si surge alguna urgencia o cambio de plan.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es decir, al comenzar el día sé en qué me gustaría invertir mi tiempo. Si surge
cambios me adapto, pero quitando tareas si es necesario, mis listas no &lt;em&gt;crecen&lt;/em&gt;
durante el día: si entra una tarea, tengo que quitar otra.&lt;/p&gt;
&lt;p&gt;Esta tarea de describir qué quiero hacer lo hago directamente en papel, porque
el papel tiene algunas limitaciones que me ayudan a ser expeditivo: el papel
me impide reordenar, acumular, reescribir, taggear etc&amp;hellip; esas restricciones también
me sirven para saber que no puedo hacer
muchas tareas por día, apenas las que caben cómodas en una hojita de papel tipo A5.&lt;/p&gt;
&lt;p&gt;Y el hecho de que no estén en la pantalla también me ayuda a distinguir con
claridad en qué momento estoy &amp;ldquo;planificando&amp;rdquo; y cuando &amp;ldquo;realizando&amp;rdquo; tareas.&lt;/p&gt;
&lt;p&gt;Luego, al momento de hacer tareas, comienzo por la primera que aparece en la lista y busco completarla
en 30 minutos. Trato de no dar vueltas con esto, ni elijo demasiado, la motivación
para hacer cosas la encuentro cuando estoy avanzando.&lt;/p&gt;
&lt;p&gt;Con respecto al tiempo, hice un temporizador externo para ser consciente del tiempo
que quiero estar sin distraerme a mí mismo y evitar escaparme de la tarea.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/una-cosa-a-la-vez/timer.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En algún momento voy a escribir sobre cómo lo armé, pero la idea es simple: tiene un
botón que comienza a contar 25 minutos y luego hace un ruido cuando finaliza.&lt;/p&gt;
&lt;p&gt;Con los años, aprendí a describir las tareas de forma tal que las pueda hacer en ese
tiempo. Las tareas que me propongo son específicas y suelen ser sub-tareas de un
objetivo más grande, sin embargo nunca me pongo a trabajar en algo sin antes haberlo
dividido en tareas más pequeñas.&lt;/p&gt;
&lt;p&gt;Y claro, como anuncia el título de este post, las tareas las hago siempre de a una a la
vez.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Devolviendo el control a tu navegador</title>
      <link>https://www.examplelab.com.ar/posts/2021-04-05-devolviendo-el-control-a-tu-navegador/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-04-05-devolviendo-el-control-a-tu-navegador/</guid>
      <description>&lt;p&gt;Algo que me gusta mucho de la web es que está diseñada para ser interpretada
por un navegador:&lt;/p&gt;
&lt;p&gt;Tomemos como ejemplo alguna de las extensiones para bloquear contenido
tipo &lt;a href=&#34;https://es.wikipedia.org/wiki/AdBlock&#34;&gt;AdBlock&lt;/a&gt;, ¿acaso no es una
genialidad poder bloquear
publicidades usando JavaScript?. ¿Y qué tal poder aumentar el tamaño de los textos pulsando
&lt;code&gt;CTRL +&lt;/code&gt;?, ¿y ver la actividad de red y bloquear dominios?.&lt;/p&gt;
&lt;p&gt;Es fácil habituarse a un navegador, dar por sentado que todo lo que hace es algo común, pero lo cierto
es que casi ningún otro medio nos permite tener tanto control sobre el contenido como hace
un navegador. Con un navegador podemos inspeccionar y ver cómo están hechas las cosas, incluso modificarlas.&lt;/p&gt;
&lt;p&gt;Y de esto último me gustaría escribir hoy: el navegador nos permite modificar cosas de
las web que visitamos.&lt;/p&gt;
&lt;p&gt;Por ejemplo, una vez al mes suelo ingresar al sitio de &lt;em&gt;visa&lt;/em&gt; para consultar
mis gastos de la tarjeta de crédito y tomar notas en mi presupuesto.&lt;/p&gt;
&lt;p&gt;Una de las primeras pantallas que visito siempre tiene una imagen ofreciendo ayuda para obtener
una clave que tengo hace más de 10 años, lo que hace que el mensaje esté de más
para mí:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/devolviendo-el-control-a-tu-navegador/login.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y luego, cuando ingreso al sitio hay un panel de chat que se mueve llamando la atención
cada 5 segundos y un carrusel de publicidades, ¡sí, un carrusel de publicidades que
se mueve todo el tiempo!:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/devolviendo-el-control-a-tu-navegador/home.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ahora bien, como el navegador es un intérprete, hay ciertas cosas que se pueden inspeccionar
y cambiar.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el logo de la pantalla inicial se puedo ocultar usando este &lt;em&gt;css&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;imagen-login&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mientras que el molesto carrusel de publicidades y el chat se pueden ocultar así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;banner&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;container-12&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;
}

#AgentAppContainer {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora, para que este estilo se aplique automáticamente cada vez que ingresamos
a esta web se puede instalar algo como
&lt;a href=&#34;https://github.com/luciopaiva/witchcraft&#34;&gt;witchcraft&lt;/a&gt; y guardar nuestros estilos
css en archivos, así quedan privados en nuestro disco.&lt;/p&gt;
&lt;p&gt;Además, &lt;em&gt;witchcraft&lt;/em&gt; también nos permite inyectar archivos JavaScript, para añadir
algo de personalización más avanzada.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cambiar palabras en VIM</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-30-cambiar-palabras-en-vim/</link>
      <pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-30-cambiar-palabras-en-vim/</guid>
      <description>&lt;p&gt;Uno de los comandos que uso mucho en &lt;em&gt;vim&lt;/em&gt; es &lt;code&gt;change&lt;/code&gt;. Este comando
que se puede combinar con un movimiento para cambiar párrafos, palabras, texto
delimitado entre comillas y más.&lt;/p&gt;
&lt;p&gt;Una vez que te acostumbras a los comandos de &lt;em&gt;vim&lt;/em&gt; ya ni pensás en ellos, &lt;code&gt;cw&lt;/code&gt; cambia
una palabra, &lt;code&gt;cap&lt;/code&gt; un párrafo y &lt;code&gt;ci&amp;quot;&lt;/code&gt; el contenido entre comillas etc..&lt;/p&gt;
&lt;p&gt;Poder navegar entre palabras y hacer cambios rápidos está muy
bueno cuando tenés código como este, donde hay delimitadores como
las comillas, espacios y tags:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/cambiar-palabras-en-vim/texto.png&#34; alt=&#34;texto&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sin embargo, hay algo que hace tiempo que me resultó sorpresivo y
luego de investigar me di cuenta que se puede configurar: para &lt;em&gt;vim&lt;/em&gt;, el
guion medio es un separador de palabras.&lt;/p&gt;
&lt;p&gt;Por ejemplo, aquí &lt;em&gt;vim&lt;/em&gt; identificará 7 palabras dentro de las comillas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/cambiar-palabras-en-vim/palabras.png&#34; alt=&#34;palabras&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero si estamos editando clases en un elemento, el guion del medio no es
un separador, el guion es parte del nombre de la clase.&lt;/p&gt;
&lt;p&gt;Si pulsamos &lt;code&gt;cw&lt;/code&gt; sobre la clase &lt;code&gt;bg-light-gray&lt;/code&gt; &lt;em&gt;vim&lt;/em&gt; pensará que queremos
cambiar la palabra &lt;code&gt;bg&lt;/code&gt; en lugar del nombre completo de la clase.&lt;/p&gt;
&lt;p&gt;Por suerte &lt;em&gt;vim&lt;/em&gt; tiene un parámetro para cambiar este comportamiento:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set iskeyword+=-
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Colocando esta configuración en el archivo &lt;code&gt;.vimrc&lt;/code&gt; ahora los nombres de
clases se pueden cambiar como si fueran solo 3 palabras:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/cambiar-palabras-en-vim/palabras2.png&#34; alt=&#34;palabras conciderando guiones&#34;&gt;&lt;/p&gt;
&lt;p&gt;Obviamente &lt;em&gt;vim&lt;/em&gt; está repleto de estos detalles configurables, pero este es uno de
los que quería mencionar hoy porque estuve editando clases css como un loco :P&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cómo crear apuntes de referencia</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-29-como-crear-apuntes-de-referencia/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-29-como-crear-apuntes-de-referencia/</guid>
      <description>&lt;p&gt;Algo que me sirve mucho a la hora de programar es ir tomando
notas de aquellos nombres de funciones, módulos o ejemplos que
me resultan útiles.&lt;/p&gt;
&lt;p&gt;A estas notas las suelo compactar y reducir para que me sirvan
de apunte. Solo recolecto aquello que uso con frecuencia.&lt;/p&gt;
&lt;p&gt;Después de todo, programar está lleno de símbolos a los que
tenemos que recurrir una y otra vez.&lt;/p&gt;
&lt;p&gt;Si no tomo nota de estas cosas, me veo obligado a abrir un
navegador, ingresar a google y realizar búsquedas para encontrar
la respuesta a algo que ya hice con anterioridad.&lt;/p&gt;
&lt;p&gt;Por ejemplo, al usar ember hay una serie de cosas a las que
suelo recurrir: de dónde se importan las funciones &lt;code&gt;tracked&lt;/code&gt;, cómo
inyectar un servicio, cómo se llama a una acción desde una plantilla
etc..&lt;/p&gt;
&lt;p&gt;Así que mi apunte se ve como este:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/como-crear-apuntes-de-referencia/apunte1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sí, es un apunte en papel, porque prefiero que esté afuera de
la computadora y me sirva de referencia, algo que puedo poner en
el escritorio, mirar rápido y hacer anotaciones cuando encuentro
algo para añadir o corregir:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/como-crear-apuntes-de-referencia/apunte2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Otra ventaja de hacer los apuntes en papel es que tengo la
limitación física de hacerlos breves, dejando solo la información
indispensable, sin funciones raras ni largas explicaciones.&lt;/p&gt;
&lt;p&gt;El apunte es muy personal, lo escribo para mí, evito colocar
cosas que ya sé de memoria y pongo ejemplos sabiendo que me
van a servir.&lt;/p&gt;
&lt;h2 id=&#34;pasos-para-crear-un-apunte&#34;&gt;Pasos para crear un apunte&lt;/h2&gt;
&lt;p&gt;Lo primero que hago para crear un apunte como estos es crear un
archivo de textos en vim e ir colocando las porciones de la API que
quiero incluir:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/como-crear-apuntes-de-referencia/vim.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La razón por la que uso vim es porque me gusta imprimir el
apunte a color, con resaltado de sintaxis y formato.&lt;/p&gt;
&lt;p&gt;Una vez que tengo una primera versión del apunte, suelo quitar
la numeración de líneas, poner un esquema de colores claro y exportar
todo como HTML así:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:set nonumber norelativenumber
:coloscheme xcodelight
:TOhtml
:!open %
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/como-crear-apuntes-de-referencia/exportado1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Con el comando &lt;code&gt;TOhtml&lt;/code&gt; vim genera un &lt;em&gt;split&lt;/em&gt; con el código HTML
de nuestra nota. Este código html se puede guardar y abrir en
un navegador:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/como-crear-apuntes-de-referencia/exportado2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En este punto, lo que suelo hacer es copiar y pegar el contenido
del navegador en un procesador de textos, en donde puedo ajustar
la cantidad de columnas, márgenes, tamaño de textos y hasta agregar
imágenes:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/como-crear-apuntes-de-referencia/final.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Obviamente se pueden saltar algunos pasos, pero por el momento
me siento cómodo usando las tres herramientas y asegurándome que
todo quede bien antes de imprimir.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Planificar y hacer</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-24-planificar-y-hacer/</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-24-planificar-y-hacer/</guid>
      <description>&lt;p&gt;Esta semana empecé a leer
&lt;a href=&#34;https://www.amazon.com/Time-Management-Procrastination-Increase-Productivity-ebook/dp/B07HL9LPP9&#34;&gt;un libro&lt;/a&gt;
sobre productividad que comienza con una idea muy simple:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;El problema de la productividad es que muchas personas tratamos
de hacer dos cosas al mismo tiempo: Un minuto estamos &amp;ldquo;planificando&amp;rdquo;, luego
nos ponemos a &amp;ldquo;hacer&amp;rdquo;, en unos instantes volvemos a &amp;ldquo;planificar&amp;rdquo; y así
continuamos durante todo el día.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Creo que es fácil advertir donde está el problema, cambiar de contexto
durante el transcurso día es muy abrumador. Si mantenemos entrelazados
estos dos modos de trabajo es difícil advertir cuánta energía nos insume
trabajar así.&lt;/p&gt;
&lt;p&gt;Esta idea no es nada nueva, de hecho el libro entero no tiene ninguna novedad, sin
embargo estoy disfrutando la lectura porque siento que pone en palabras ideas
que muchas veces se me pasan por alto.&lt;/p&gt;
&lt;p&gt;Incluso menciona cosas que me funcionan muy bien a la hora de trabajar, pero
que no sabría explicarlas con tanta claridad.&lt;/p&gt;
&lt;p&gt;A veces, es más fácil dejar que el día decida por nosotros, ir haciendo cosas
mientras van apareciendo, como descubrir un problema mientras estamos
programando.&lt;/p&gt;
&lt;p&gt;Pero es mucho más efectivo desenredar estos dos modos de trabajo para hacer la planificación
al principio del día. Sobre todo al principio del día, cuando tenemos la energía
suficiente para pensar con claridad. Y una vez que tenemos esa planificación, ponernos
en otra mentalidad para completar las tareas que nos propusimos.&lt;/p&gt;
&lt;p&gt;Obviamente habrá días en los que nuestros planes se van a ver afectados, pero
creo que aun así vale la pena separar las cosas. Después de todo, la mayor parte
del tiempo sí tenemos control sobre nuestros planes y sistemas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aprendiendo Ember, otra vez</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-19-aprendiendo-ember-otra-vez/</link>
      <pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-19-aprendiendo-ember-otra-vez/</guid>
      <description>&lt;p&gt;Hace más o menos 7 años mi biblioteca favorita para programar
en JavaScript era &lt;a href=&#34;https://angularjs.org/&#34;&gt;AngularJS&lt;/a&gt;. Usaba la biblioteca en todos
los proyectos que podía y me leía cada post que aparecía para
aprender más. Quería hacer aplicaciones web
conociendo la herramienta de principio a fin.&lt;/p&gt;
&lt;p&gt;Aprendí mucho, y al tiempo noté que trabajaba
bastante bien con &lt;em&gt;AngularJS&lt;/em&gt;, conocía algunos trucos para hacer
las cosas de manera modular, comunicar componentes sin que la
cosa se volviera inmanejable y escribir tests, que era algo que
ni sabía como hacer al principio.&lt;/p&gt;
&lt;p&gt;Pero en 2014, la gente de &lt;em&gt;AngularJS&lt;/em&gt; anunció una nueva versión
de su framework donde cambiaban prácticamente todo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/aprendiendo-ember-otra-vez/rip.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y como yo venía usando &lt;em&gt;AngularJS&lt;/em&gt; hace tiempo, estos cambios
hicieron que me dieran ganas de tirar todo al demonio. El equipo
de desarrollo anunciaba que eliminaban un montón de piezas
esenciales del framework, cambiaban la sintaxis, el lenguaje,
las herramientas, los patrones, ¡todo!.&lt;/p&gt;
&lt;p&gt;Lo que sabía de &lt;em&gt;AngularJS&lt;/em&gt; ya no me servía, tenía que empezar
de cero si quería seguir usando la herramienta sin quedar atrás.&lt;/p&gt;
&lt;h1 id=&#34;cambiando-de-herramienta&#34;&gt;Cambiando de herramienta&lt;/h1&gt;
&lt;p&gt;En ese momento recuerdo que el anuncio me generó mucha frustración, y
por lo que entiendo a muchos programadores les pasó lo mismo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/aprendiendo-ember-otra-vez/comentarios.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Así que en lugar de seguir por ese camino, me puse a investigar
otras herramientas y di con &lt;a href=&#34;https://emberjs.com/&#34;&gt;Ember&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¡Estaba con bronca en serio!&lt;/p&gt;
&lt;h1 id=&#34;pero-ember-también-cambia-&#34;&gt;Pero Ember también cambia &amp;hellip;&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Ember&lt;/em&gt; tiene muchas cosas buenas, no solo como herramienta
sino como proyecto y comunidad. Sin embargo también realiza
cambios que pueden afectar tu trabajo.&lt;/p&gt;
&lt;p&gt;Te aburriría enumerando todas las cosas que aprendí a usar dentro
de &lt;em&gt;Ember&lt;/em&gt; que ya no existen. Uso &lt;em&gt;Ember&lt;/em&gt; hace 6 o 7 años, y en ese
tiempo he visto montón de cosas que dejaron de funcionar, conceptos que
se fueron agregando, bibliotecas que quedaron en el camino, montones de problemas
al llevar el código de los proyectos de una versión a otra.&lt;/p&gt;
&lt;p&gt;No sé por qué los frameworks JavaScript tiene que estar en
constante cambio, supongo que la gente que hace estas herramientas
se aburre rápido, están completamente dementes, o solo quieren que
la herramienta siga siendo relevante, que no se quede en el tiempo
acumulando polvo.&lt;/p&gt;
&lt;p&gt;Supongo que las cosas cambian por una combinación de todo eso junto.&lt;/p&gt;
&lt;p&gt;Pero de cualquier forma, hace tiempo empecé a usar otra estrategia, me hice a la
idea de aceptar que cada tanto hay que volver a aprender cosas.&lt;/p&gt;
&lt;p&gt;Y eso es lo que me tocó vivir esta semana, tuve que volver a aprender
a usar &lt;em&gt;Ember&lt;/em&gt; casi desde cero.&lt;/p&gt;
&lt;p&gt;Los proyectos en los que estoy trabajando actualmente en &lt;em&gt;Ember&lt;/em&gt; no los actualizo
hace tiempo, así que muchas cosas nuevas del Framework me resultan muy ajenas.&lt;/p&gt;
&lt;h1 id=&#34;cómo-volver-a-aprender&#34;&gt;¿Cómo volver a aprender?&lt;/h1&gt;
&lt;p&gt;Mi primer reacción al ver los cambios en &lt;em&gt;Ember&lt;/em&gt; fue incómoda, al principio
tenía la sensación de que los cambios no estaban buenos, que la forma vieja
de hacer las cosas era mejor.&lt;/p&gt;
&lt;p&gt;Pero decidí hacer una pausa, y mentalizarme en aceptar los cambios. Si me pongo
en una actitud negativa sé con seguridad que no voy a aprender nada&amp;hellip; así que acepté
la idea de seguir aprendiendo desde cero, sin juzgar mucho y ver que sucedía.&lt;/p&gt;
&lt;p&gt;También hice un pequeño apunte de la sintaxis nueva, algunos ejemplos y nombres
de funciones:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/aprendiendo-ember-otra-vez/apunte.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto me ayudó mucho, porque me evita hacer búsquedas en Google todo el tiempo, algo
que me desanima un montón.&lt;/p&gt;
&lt;p&gt;Pero teniendo un apunte sobre la mesa, donde puedo consultar rápido, cambia por completo
la experiencia de aprendizaje. ¡Aparte puedo escribir con una lapicera si me doy cuenta
de que faltó algo!.&lt;/p&gt;
&lt;p&gt;Otra cosa que me sirvió es ponerme a hacer un mini proyecto, siento que es mucho más
entretenido aprender mientras estoy construyendo algo, por más que sea un prototipo que
después voy a borrar, saber que estoy haciendo algo me ayuda a aprender.&lt;/p&gt;
&lt;p&gt;En resumen, noté que para volver a aprender me sirvieron estas ideas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Aceptar que estoy aprendiendo desde cero, va a ser incómodo y está bien.&lt;/li&gt;
&lt;li&gt;Tener un apunte en papel y hacerle anotaciones.&lt;/li&gt;
&lt;li&gt;Hacer un proyecto pequeño para que sea más entretenido.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creo que estas ideas son muy básicas, pero aun así son bastante difíciles de seguir. Tal
vez porque van en contra del ego y esa sensación de seguridad que tenemos al conocer
una herramienta por completo.&lt;/p&gt;
&lt;p&gt;Voy a tratar de tener estas ideas en mente cuando se presente otro desafío que me
exija volver a aprender desde cero.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hay que reinventar esta rueda</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-16-hay-que-reinventar-esta-rueda/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-16-hay-que-reinventar-esta-rueda/</guid>
      <description>&lt;p&gt;A veces es gracioso como algunas recomendaciones se vuelven
dogmas que repetimos una y otra vez.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;No reinventes la rueda&amp;rdquo;&lt;/em&gt; es una
de esas frases que los programadores pronunciamos
como una verdad absoluta, pero que a veces es una pésima
recomendación.&lt;/p&gt;
&lt;p&gt;El problema no está en el consejo en sí, porque casi siempre
se hace con buenas intenciones. El problema está en perder
de vista que esta recomendación tienen sentido en algunos contextos
pero no en otros.&lt;/p&gt;
&lt;p&gt;A veces, &lt;em&gt;reinventar la rueda&lt;/em&gt; es una buena idea porque permite
comenzar un negocio nuevo, mejorar partes de un sistema que
dan problemas o simplemente sentirse &lt;em&gt;dueño&lt;/em&gt; de nuestro futuro, involucrarse
con un proyecto y hacer mejor nuestro trabajo.&lt;/p&gt;
&lt;p&gt;Saber programar es una habilidad muy valiosa, te permite construir, darle
vida a las ideas y ganar experiencia construyendo
soluciones. Te permite crecer y entender cómo funcionan las cosas.&lt;/p&gt;
&lt;p&gt;Pero cuando no &lt;em&gt;reinventamos&lt;/em&gt;, el trabajo se puede convertir en una serie
de configuraciones y elución de problemas; en lugar de ganar confianza y
entendimiento buscamos sacar provecho lo antes posible; como si quisiéramos
ganar mucho invirtiendo muy poquito: instalando la biblioteca &lt;em&gt;X1&lt;/em&gt;, añadiendo
la configuración &lt;em&gt;X2&lt;/em&gt; o poniendo un parche que encontramos en Internet.&lt;/p&gt;
&lt;h2 id=&#34;la-metáfora-de-las-ruedas-tiene-sentido&#34;&gt;La metáfora de las &amp;ldquo;ruedas&amp;rdquo;, ¿Tiene sentido?&lt;/h2&gt;
&lt;p&gt;Creo que la frase &lt;em&gt;&amp;ldquo;No hay que reinventar la rueda&amp;rdquo;&lt;/em&gt; tiene sentido si
hablamos de la &lt;em&gt;rueda&lt;/em&gt; como una idea, un concepto que vive en la
imaginación de las personas.&lt;/p&gt;
&lt;p&gt;En cierto punto concuerdo, la &lt;strong&gt;idea&lt;/strong&gt; de la rueda es &lt;em&gt;perfecta en sí misma&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Pero cuando hablamos de herramientas siempre nos estamos refiriendo
a las implementaciones. Lo que se reinventa no es la idea, sino
como esta idea se lleva a la realidad.&lt;/p&gt;
&lt;p&gt;Y las ruedas, curiosamente, se reinventan todo el tiempo.&lt;/p&gt;
&lt;p&gt;¿Viste alguna vez un catálogo de ruedas para bicicletas?, ¡Hay
más variedades que &lt;em&gt;frameworks&lt;/em&gt; JavaScript!, y todo hace parecer
que van a seguir habiendo reinvenciones:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/hay-que-reinventar-esta-rueda/nueva-rueda.jpg&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;¿Ruedas sin aire?&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;h2 id=&#34;otra-forma-de-aconsejar-sobre-reutilización&#34;&gt;Otra forma de aconsejar sobre reutilización&lt;/h2&gt;
&lt;p&gt;Desalentar que las personas reinventen cosas es algo
delicado, conviene hacerlo sin apresurarse y con mentalidad abierta
para descubrir otras posibilidades.&lt;/p&gt;
&lt;p&gt;No ayuda decir &lt;em&gt;&amp;ldquo;no reinventemos&amp;rdquo;&lt;/em&gt; como si fuera un dogma. Conviene
profundizar, preguntar e investigar más allá de la premisa inicial.&lt;/p&gt;
&lt;p&gt;A veces, querer &lt;em&gt;reinventar&lt;/em&gt; algo es una oportunidad para aprender
y crecer, es útil desde un aspecto técnico y humano. No lo desalentemos
de ante mano.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Provisorio hasta que haga falta</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-10-provisorio-hasta-que-haga-falta/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-10-provisorio-hasta-que-haga-falta/</guid>
      <description>&lt;p&gt;Hace más de dos años hice una &lt;em&gt;API&lt;/em&gt; para que los usuarios de
&lt;a href=&#34;https://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; puedan guardar
y compartir sus juegos a través de una &lt;em&gt;url&lt;/em&gt; pública.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/provisorio-hasta-que-haga-falta/exportar.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto funcionó a la perfección por más de dos años&amp;hellip; pero ayer empezó
a dar problemas: El equipo en donde estaba corriendo esta aplicación se quedó sin
espacio disponible y cuando me puse a investigar encontré que una de
las bases de datos había crecido un montón.&lt;/p&gt;
&lt;p&gt;Mirando por arriba, noté que algo andaba mal, porque para mí una base de
datos que solamente tiene que guardar juegos hechos con &lt;em&gt;pilas-engine&lt;/em&gt; no
podía ser demasiado grande.&lt;/p&gt;
&lt;p&gt;Lo peor de todo es que yo sabía que iba a dar problemas, cuando hice esa
&lt;em&gt;api&lt;/em&gt; hace unos años pensé que sería buena idea guardar el juego serializado, en
&lt;a href=&#34;https://en.wikipedia.org/wiki/Base64&#34;&gt;base64&lt;/a&gt;, de modo que sea sencillo guardar y leer los juegos.&lt;/p&gt;
&lt;p&gt;Es decir, sin compresión, sin archivos, todo en la base de datos para que
sea rápido de implementar.&lt;/p&gt;
&lt;p&gt;Ahora, después de dos años, estoy un poco arrepentido de no haberlo hecho mejor
al principio. Me hubiera ahorrado un par de horas y algo de incertidumbre por
la falta de espacio en el disco, investigar y tener que &lt;em&gt;ponerme a arreglar las cosas&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo, este problema me dio la posibilidad de descubrir algunas
cosas que no sabía:&lt;/p&gt;
&lt;p&gt;Cuando noté que el problema podía ser a causa de la base de datos, me puse
a mirar algunos registros, y me sorprendió
ver que el problema de espacio no era tanto un problema de programación, sino
que ¡La &lt;em&gt;api&lt;/em&gt; de &lt;em&gt;pilas&lt;/em&gt; realmente está siendo utilizada!.&lt;/p&gt;
&lt;p&gt;Al principio no creía que hacer un mini servicio para guardar y compartir juegos
podría ser útil, pero hoy me
doy cuenta de que sí. Me resulta más gratificante hacerle mejoras al código sabiendo
que se utiliza, y que cualquier mejora que le haga va a servirle a los usuarios.&lt;/p&gt;
&lt;p&gt;Esta es una captura de varios de los juegos que me encontré:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/provisorio-hasta-que-haga-falta/capturas.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;arreglando-el-problema&#34;&gt;Arreglando el problema&lt;/h2&gt;
&lt;p&gt;Mejorar la &lt;em&gt;api&lt;/em&gt; para que no ocupe tanto espacio me llevó varias horas, el primer
paso fue bajar la base de datos a mi equipo y modificar el esquema para que los datos del
proyecto se guarden como archivos &lt;code&gt;.zip&lt;/code&gt;. Luego tuve que migrar todos los registros
con un script, para generar un &lt;code&gt;.zip&lt;/code&gt; con cada proyecto y luego eliminar los campos
que ya no se utilizarán.&lt;/p&gt;
&lt;p&gt;Ah, y en el camino aprendí que &lt;em&gt;PostgreSQL&lt;/em&gt; te permite listar el tamaño de las
tablas más grandes ejecutando este &lt;em&gt;query&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT relname AS &amp;quot;Table&amp;quot;,
       Pg_size_pretty(Pg_total_relation_size(relid)) AS &amp;quot;Size&amp;quot;,
       Pg_size_pretty(Pg_total_relation_size(relid) - Pg_relation_size(relid)) AS &amp;quot;External Size&amp;quot;
FROM   pg_catalog.pg_statio_user_tables
ORDER  BY Pg_total_relation_size(relid) DESC;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Además, existe un comando llamado &lt;code&gt;VACUUM FULL&lt;/code&gt; que libera espacio luego
de que cambiamos el esquema o reducimos la cantidad de datos.&lt;/p&gt;
&lt;p&gt;En fin, lo que para mí empezó como una clásica historia de deuda técnica y código
provisorio, resultó ser algo más que eso&amp;hellip; me quedé pensando que tal vez no
me hubiera dado cuenta de lo útil que es esa &lt;em&gt;api&lt;/em&gt; si la cosa no hubiera fallado.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mis juegos favoritos</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-09-mis-juegos-favoritos-1/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-09-mis-juegos-favoritos-1/</guid>
      <description>&lt;p&gt;Hay un montón de videojuegos que me gustaría recomendar a
otras personas, así
que se me ocurrió hacer un listado de los juegos que más
me gustaron y publicarlos en el blog.&lt;/p&gt;
&lt;p&gt;El listado no tiene ningún orden en particular y está incompleto, estimo
que dentro de unos días haré otro post para incluir más juegos.&lt;/p&gt;
&lt;h1 id=&#34;the-beginners-guide&#34;&gt;The Beginner&amp;rsquo;s Guide&lt;/h1&gt;
&lt;p&gt;Este juego entra en un género llamado &lt;em&gt;Walking simulator&lt;/em&gt;, una clase de juegos
que se disfrutan recorriendo escenas, leyendo textos y disfrutando de narraciones
de una voz en &lt;em&gt;off&lt;/em&gt; que nos va contando una historia.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-1/beginners-guide-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El juego nos invita a conocer a una persona a través de los juegos que desarrolló, seguimos
su evolución técnica y expresiva a través de cada uno de sus juegos. La narración nos
invita a imaginar qué pensó y sintió el creador de estos juegos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-1/beginners-guide-2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es un viaje de inmersión muy interesante:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-1/beginners-guide-3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;zelda-breath-of-the-wild&#34;&gt;Zelda Breath of the Wild&lt;/h1&gt;
&lt;p&gt;Este es el primer juegos de mundo abierto que realmente disfruté, la
libertad y variedad del escenario hacen que el juego sea toda una aventura.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-1/zelda-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Creo que una de las cosas que más me gustaron fue recorrer los escenarios e
ir desbloqueando zonas del mapa. Si bien el juego tiene una historia impresionante, creo
que lo que más disfruté es la sensación de aventura y libertad que te propone el mapa:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-1/zelda-2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;braid&#34;&gt;Braid&lt;/h1&gt;
&lt;p&gt;A simple vista parece un juego de plataformas, pero lo que más me gustó
es que el juego propone &lt;em&gt;puzzles&lt;/em&gt; que involucran manipular el tiempo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-1/braid-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Algunos desafíos son simples, pero otros parecen imposibles a los
primeros intentos. Disfruté mucho encontrarme con &lt;em&gt;puzzles&lt;/em&gt; que me hicieron
dejar de jugar para pensar y elaborar estrategias nuevas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mis-juegos-favoritos-1/braid-2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mejoras en el corrector ortográfico de VIM</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-08-mejoras-en-el-corrector-ortografico-de-vim/</link>
      <pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-08-mejoras-en-el-corrector-ortografico-de-vim/</guid>
      <description>&lt;p&gt;VIM incluye un corrector ortográfico que se puede activar con estos comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set spell
set spelllang=es
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Sin embargo, este corrector solamente puede ayudarnos a detectar &lt;em&gt;typos&lt;/em&gt; y
algunas faltas de ortografía simples.&lt;/p&gt;
&lt;p&gt;Lo bueno es que VIM puede usar un corrector más
completo llamado &lt;a href=&#34;https://languagetool.org/es&#34;&gt;LanguageTool&lt;/a&gt;, que además de detectar errores ortográficos
también detecta otros tipos de errores, como usos incorrectos de artículos, frases
complejas y más.&lt;/p&gt;
&lt;h2 id=&#34;qué-es-languagetool&#34;&gt;¿Qué es LanguageTool?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://languagetool.org/es&#34;&gt;LanguageTool&lt;/a&gt; es una herramienta que puede analizar textos
y realizar sugerencias para mejorar ortografía, gramática y estilo. La herramienta tiene
un modelo de negocio y planes, pero también está disponible para descargar y utilizar
bajo la licencia LGPL como indican en el repositorio de &lt;a href=&#34;https://github.com/languagetool-org/languagetool&#34;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Una forma de verificar lo que puede hacer esta herramienta es visitar su sitio
web y jugar con el editor de texto que aparece en la pantalla:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mejoras-en-el-corrector-ortografico-de-vim/pagina.png&#34; alt=&#34;pagina&#34;&gt;&lt;/p&gt;
&lt;p&gt;Una de las correcciones que me sorprendió es cómo reconoce el uso incorrecto de
preposiciones y concordancia.&lt;/p&gt;
&lt;h2 id=&#34;cómo-se-integra-a-vim&#34;&gt;¿Cómo se integra a VIM?&lt;/h2&gt;
&lt;p&gt;Para usar esta herramienta lo primero que tenemos que hacer es instalar
un &lt;em&gt;plugin&lt;/em&gt; llamado &lt;a href=&#34;https://github.com/rhysd/vim-grammarous&#34;&gt;vim-grammarous&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En mi caso, como uso un gestor de paquetes llamado &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt; lo
que tuve que hacer es agregar esta línea dentro de mi archivo &lt;code&gt;vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Plug &#39;rhysd/vim-grammarous&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y luego ejecutar el comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:PlugInstall
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Luego de ejecutar esos comandos, necesitamos activar el análisis de un
texto por primera vez para se descarguen algunos archivos más:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:GrammarousCheck --lang=es
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Resulta que &lt;em&gt;LanguageTool&lt;/em&gt; funciona como una herramienta externa que incluye
diccionarios y varios componentes internos, así que en la primera invocación
va a necesitar instalar todo esto para continuar. En mi caso, la instalación
consumió unos 300 MB.&lt;/p&gt;
&lt;h2 id=&#34;unas-pruebas&#34;&gt;Unas pruebas&lt;/h2&gt;
&lt;p&gt;Cuando activamos la corrección la pantalla de VIM se divide en dos partes, por
un lado nuestro texto y por el otro un detalle de cada error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/mejoras-en-el-corrector-ortografico-de-vim/fecha.png&#34; alt=&#34;fecha&#34;&gt;&lt;/p&gt;
&lt;p&gt;En la captura de arriba se vé que la herramienta incluso interpreta fechas, y
describe con claridad por qué considera que hay algo mal.&lt;/p&gt;
&lt;h2 id=&#34;configuraciones-adicionales&#34;&gt;Configuraciones adicionales&lt;/h2&gt;
&lt;p&gt;Al igual que sucede con otros complementos, podemos configurar algunos atajos
para activar esta extensión fácilmente.&lt;/p&gt;
&lt;p&gt;En mi caso, hice que el editor active la corrección pulsando &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt;
y luego &lt;code&gt;s&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;noremap &amp;lt;leader&amp;gt;s :GrammarousCheck --lang=es&amp;lt;CR&amp;gt;
noremap &amp;lt;leader&amp;gt;a :GrammarousReset
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Abrazar a Sumo</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-05-abrazar-a-sumo/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-05-abrazar-a-sumo/</guid>
      <description>&lt;p&gt;No me da pena reconocer que que miro dibujos animados.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;El 90% de todo es mierda&amp;rdquo; como dice la &lt;a href=&#34;https://es.wikipedia.org/wiki/Ley_de_Sturgeon&#34;&gt;Revelación de Sturgeon&lt;/a&gt;,
incluidos los dibujos animados, sin embargo cuando
miramos de cerca y buscamos ese 10% restante podemos encontrar cosas
que vale la pena rescatar, historias que pueden transmitirnos sentimientos y
miradas del mundo que ningún otro medio puede hacer.&lt;/p&gt;
&lt;p&gt;Este es el caso de algunos de los episodios de &lt;a href=&#34;https://es.wikipedia.org/wiki/Clarence_(serie_animada)&#34;&gt;Clarence&lt;/a&gt;, una
serie de &lt;em&gt;Cartoon Network&lt;/em&gt; que me parece diferente a todas las demás.&lt;/p&gt;
&lt;p&gt;Para empezar, los personajes de Clarece son muy honestos, viven
en un mundo que se parece al que vivimos cuando
crecimos: historias llenas de imaginación, con amigos, juegos y diversión, pero también
con frustraciones, relaciones imperfectas, problemas del colegio y sentimientos
encontrados en muchos rincones:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/abrazar-a-sumo/casa.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;el-bote-soñado&#34;&gt;El bote soñado&lt;/h2&gt;
&lt;p&gt;Hay un episodio en particular llamado &amp;ldquo;El bote soñado&amp;rdquo; que me gustaría mencionar.&lt;/p&gt;
&lt;p&gt;En este episodio, conocemos de cerca a Sumo, uno de los personajes principales.&lt;/p&gt;
&lt;p&gt;Cuando el episodio comienza, Sumo está en una clase especial para chicos con
problemas de conducta, donde le piden responder preguntas como &amp;ldquo;¿Te arrepientes de lo
que hiciste?&amp;rdquo;, &amp;ldquo;¿Lo volverías a hacer?&amp;rdquo;. Se nota que algo le come la cabeza, pero
responde con rebeldía. La siguiente pregunta es &amp;ldquo;¿Qué es lo que más quieres en la vida
y cómo vas a lograrlo?&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/abrazar-a-sumo/tarea.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cuando vemos la vida de Sumo de cerca es imposible no querer darle un abrazo, Sumo es casi
invisible entre todos sus hermanos, no es el más pequeño ni el más grande.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/abrazar-a-sumo/mesa.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y creo que lo más interesante es cómo esta historia se va transformando en
un proyecto para Sumo: &amp;ldquo;¡Construir un bote!&amp;rdquo;. Una idea que le sale impulsivamente
al tratar de captar la atención de su papá.&lt;/p&gt;
&lt;h2 id=&#34;una-segunda-oportunidad-para-sumo&#34;&gt;Una segunda oportunidad para Sumo&lt;/h2&gt;
&lt;p&gt;Entre chistes y aventuras, el capítulo avanza hacia un desenlace hermoso. La historia
es graciosa para chicos, con algún que otro chiste que solo los adultos podemos entender, pero
lo más importante se cuenta con gestos e imágenes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/abrazar-a-sumo/bote.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;No quiero contar el episodio entero porque rompería en encanto, pero si fuera
fácil colgar el video del capítulo entero aquí en el blog lo haría, así puedo
recomendarlo a todo el mundo.&lt;/p&gt;
&lt;p&gt;Muy pocos dibujos animados son capaces de contar historias tan bonitas como
esta, estaré atento a ver si puedo encontrar más en el futuro.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Replanteando la Programación Funcional</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-03-replanteando-la-programacion-funcional/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-03-replanteando-la-programacion-funcional/</guid>
      <description>&lt;p&gt;Esta semana escuché una &lt;a href=&#34;https://changelog.com/jsparty/163&#34;&gt;entrevista a Eric Normand&lt;/a&gt;
en donde describía la programación funcional de una manera completamente
diferente para mí.&lt;/p&gt;
&lt;p&gt;Resulta que mis nociones de programación funcional vienen de mi paso por la facultad
de ingeniería, donde descubrí la programación funcional en una materia llamada Paradigmas
de Programación.&lt;/p&gt;
&lt;p&gt;En esa materia abordamos la programación funcional desde sus fundamentos, usando
&lt;a href=&#34;https://www.haskell.com/&#34;&gt;haskell&lt;/a&gt; y resolviendo ejercicios para familiarizarnos con el enfoque
del paradigma. Estos ejercicios consistían en cálculos matemáticos, operaciones con listas
de números, algoritmos recursivos y esas cosas&amp;hellip;&lt;/p&gt;
&lt;p&gt;Y por lo que mencionan en la entrevista, en otras partes del mundo también se aborda la
programación funcional desde ese enfoque:&lt;/p&gt;
&lt;audio controls&gt;
  &lt;source src=&#34;../2021-03-03-replanteando-la-programacion-funcional/audios/programacion-funcional-se-complica-demasiado.ogg&#34; type=&#34;audio/ogg&#34;&gt;
  &lt;source src=&#34;../2021-03-03-replanteando-la-programacion-funcional/audios/programacion-funcional-se-complica-demasiado.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
&lt;/audio&gt;
&lt;p&gt;Sin embargo, mientras escuchaba la entrevista, noté que muchas de mis ideas
sobre programación funcional se podrían abordar de otra manera. Existe un enfoque más
práctico sobre programación funcional que puedo empezar a aplicar desde hoy, incluso
usando un lenguaje como JavaScript o Python, que nos son lenguajes puros del paradigma
funcional.&lt;/p&gt;
&lt;h2 id=&#34;revalorizando-ideas-de-la-programación-funcional&#34;&gt;Revalorizando ideas de la Programación Funcional&lt;/h2&gt;
&lt;p&gt;Eric Normand describe la programación funcional así:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Es una serie de skills, ideas que nos permiten pensar en la programación
de manera más simple y accesible.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Y creo que su enfoque está bueno, porque no traza una linea para decir &amp;ldquo;esto es funcional&amp;rdquo; y &amp;ldquo;esto
no es funcional&amp;rdquo;, no introduce temas como fundamentos matemáticos, funciones puras, efecto colateral, etc&amp;hellip; Tampoco
entra en el debate de &lt;em&gt;pureza&lt;/em&gt; del paradigma o sus ideas.&lt;/p&gt;
&lt;p&gt;Con su definición, tranquilamente se puede introducir programación funcional dentro de
un sistema en desarrollo. La clave está en definirlo como una serie de &amp;ldquo;habilidades&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;La definición formal de programación funcional no es práctica.&lt;/p&gt;
&lt;p&gt;Si le decís a alguien que buscas introducir programación funcional en un sistema podría
hacerse una idea diferente de lo que tenes en mente, esa persona podría
pensar que buscas eliminar cualquier &amp;ldquo;efecto colateral&amp;rdquo; o re-escribir la arquitectura
por completo.&lt;/p&gt;
&lt;p&gt;¿Evitar efectos colaterales?, ¿y cómo vamos a guardar cosas en una base de
datos?, ¡Si ese es el motivo por el que estamos escribiendo este software!&lt;/p&gt;
&lt;p&gt;Creo que esta ilustración del libro &lt;a href=&#34;https://www.manning.com/books/grokking-simplicity&#34;&gt;Grokking Simplicity&lt;/a&gt;
lo resume muy bien:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/replanteando-la-programacion-funcional/toon.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;otra-forma-de-ver-a-la-programación-funcional&#34;&gt;Otra forma de ver a la programación funcional&lt;/h2&gt;
&lt;p&gt;Una de las habilidades que menciona Eric consiste en comenzar
a distinguir estas tres cosas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Actions&lt;/li&gt;
&lt;li&gt;Calculations&lt;/li&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Actions&lt;/strong&gt; son aquellas partes del sistema que producen un impacto
externo, como guardar un registro en una base de datos, enviar un
email o alterar una estructura de datos. Estas partes del sistema son las más
complejas, porque para probarlas necesitamos &amp;ldquo;que el entorno esté ahí&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Calculations&lt;/strong&gt; son funciones puras, que producen un valor a partir
de una serie de parámetros. Se las puede llamar muchas veces y es fácil
replicar su funcionamiento cuando escribimos un test.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; son datos inertes, que fácilmente podemos guardar, graficar o
analizar de distintas formas. Son hechos, o resultados que se generaron
a partir de una operación.&lt;/p&gt;
&lt;p&gt;Esta distinción es muy práctica, porque las &lt;strong&gt;actions&lt;/strong&gt; suelen ser
problemáticas, pero son indispensables, no podemos quitarlas del sistema. Lo
más valioso del software son estas acciones.&lt;/p&gt;
&lt;p&gt;En cambio, las &lt;strong&gt;calculations&lt;/strong&gt; son más fáciles, y nos pueden servir para
quitarles &lt;em&gt;responsabilidad&lt;/em&gt; a la &lt;strong&gt;actions&lt;/strong&gt; del sistema.&lt;/p&gt;
&lt;p&gt;Y esta es una de las cosas que sostiene Eric: si tratamos de mover la mayor
parte del código a &lt;strong&gt;calculations&lt;/strong&gt;, podemos reducir la cantidad de cosas
&lt;em&gt;difíciles&lt;/em&gt; en nuestro código. Es inevitable tener &lt;strong&gt;actions&lt;/strong&gt;, pero sí
podemos evitar que hagan demasiadas cosas.&lt;/p&gt;
&lt;p&gt;En otras palabras, lo que podemos tomar de la programación funcional es
estas habilidades para hacer nuestro código &lt;em&gt;fácil&lt;/em&gt; de probar. Todo comienza
con esta distinción, análisis y disciplina.&lt;/p&gt;
&lt;p&gt;Este es un recorte que hice la entrevista donde Eric menciona cómo
poner en práctica estas ideas:&lt;/p&gt;
&lt;audio controls&gt;
  &lt;source src=&#34;../2021-03-03-replanteando-la-programacion-funcional/audios/el-objetivo-de-la-programacion-funcional-es-quitar-carga-sobre-las-acciones-y-simplificar-cosas.ogg&#34; type=&#34;audio/ogg&#34;&gt;
  &lt;source src=&#34;../2021-03-03-replanteando-la-programacion-funcional/audios/el-objetivo-de-la-programacion-funcional-es-quitar-carga-sobre-las-acciones-y-simplificar-cosas.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
&lt;/audio&gt;
&lt;p&gt;Creo que es muy interesante revisar estas ideas, por mi parte voy a tomarme el
tiempo y esfuerzo para maximizar la proporción de código dedicado a &lt;strong&gt;calculations&lt;/strong&gt;
y reducir la cantidad de &lt;strong&gt;actions&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Recortes y apuntes</title>
      <link>https://www.examplelab.com.ar/posts/2021-03-01-recortes-y-apuntes/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-03-01-recortes-y-apuntes/</guid>
      <description>&lt;p&gt;Tenemos mucha suerte de vivir en una época en donde existe acceso
a tantas formas de aprendizaje.&lt;/p&gt;
&lt;p&gt;Tenemos acceso a videos, blogs, conferencias y podcasts
de forma prácticamente gratuita, solo necesitas algo
de tiempo y una conexión a Internet.&lt;/p&gt;
&lt;p&gt;Sin embargo, si te pasa lo mismo que a mí, mucho de lo que
veas se te va a olvidar. Incluso aquellas cosas útiles
y valiosas.&lt;/p&gt;
&lt;p&gt;Aquí es donde entra en juego la idea de apuntes y recortes.&lt;/p&gt;
&lt;p&gt;La única forma en la que puedo recordar las cosas es si me pongo a
tomar notas. Tengo que escribir una especie de resumen sobre lo
que estoy viendo para retener ideas interesantes.&lt;/p&gt;
&lt;p&gt;Si no tomo notas, es muy probable que me olvide de todo.&lt;/p&gt;
&lt;p&gt;Algo similar me pasa con la lectura: Cuando me tomo el tiempo de
anotar ideas, e intentar describirlas con mis palabras, siento
que puedo retener conceptos con mayor claridad.&lt;/p&gt;
&lt;p&gt;Además, las notas son fáciles de guardar, podes hacer búsquedas
de vez en cuando y compartir con otras personas.&lt;/p&gt;
&lt;h2 id=&#34;y-qué-pasa-con-videos-y-podcast&#34;&gt;¿Y qué pasa con videos y podcast?&lt;/h2&gt;
&lt;p&gt;Un recorte es similar a subrayar un apunte o tomar nota
en un cuaderno; cumple la misma función, pero lo llamo
recorte porque trato de preservar el medio de captura.&lt;/p&gt;
&lt;p&gt;Cuando escucho algo que me gusta de un podcast, suelo tomar
nota del tiempo en que se dice lo que me interesa y luego hago
un audio cortito de uno o dos minutos con ese fragmento de
audio.&lt;/p&gt;
&lt;p&gt;Y con los videos hago lo mismo, me gusta capturar la porción de la
conferencia que me resulta sobresaliente y la guardo en
un directorio para preservarlos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/recortes-y-apuntes/videos.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es algo de trabajo extra, pero lo vale, porque queda grabado en la
computadora y mi memoria.&lt;/p&gt;
&lt;h2 id=&#34;ojo-no-confundir-con-bookmarks&#34;&gt;Ojo, no confundir con Bookmarks&lt;/h2&gt;
&lt;p&gt;También noté que no me sirve guardar artículos enteros, poner videos en playlist de
youtube, marcarlos como favoritos o añadir páginas a los bookmarks del navegador.&lt;/p&gt;
&lt;p&gt;Hace unos años hacía eso, pero me di cuenta que no me resultaba.&lt;/p&gt;
&lt;p&gt;Creo que recolectar material sin procesar no me sirve porque es fácil, no
tengo que hacer ningún esfuerzo ni reflexión.&lt;/p&gt;
&lt;p&gt;Tomar un apunte, en cambio, es un esfuerzo intencional: tengo
que elegir un minuto de un video de una hora, realmente tengo que asegurarme
de estar seleccionando una idea interesante para mí, y si no encuentro nada
me olvido del video o lo abandono antes.&lt;/p&gt;
&lt;p&gt;Esto se parece a algo que me dijeron una vez sobre tomar apuntes
para estudiar: subrayar el 80% de un libro no sirve, lo que sirve es describir
con tus palabras las ideas más importantes, extraer lo esencial y no quedarse
con los detalles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Escribiendo en el blog todos los días durante un mes</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-26-un-mes-escribiendo-todos-los-dias/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-26-un-mes-escribiendo-todos-los-dias/</guid>
      <description>&lt;p&gt;Hace un mes nos desafiamos con &lt;a href=&#34;https://osiux.com/&#34;&gt;OSiUX&lt;/a&gt; a escribir en
nuestros blogs durante un mes, y yo gané. Bueno, en realidad, los dos ganamos&amp;hellip;&lt;/p&gt;
&lt;p&gt;Resulta que hace un mes OSiUX me envió un artículo llamado
&lt;a href=&#34;https://critter.blog/2021/01/14/prove-you-can-write-regularly-before-you-think-about-the-tools/&#34;&gt;Prove you can write regularly before you think about the tools&lt;/a&gt;
donde el autor menciona una realidad: mucha personas se preocupan más por encontrar
la mejor herramienta para crear sus blogs que en escribir regularmente.&lt;/p&gt;
&lt;p&gt;Y tanto OSiUX como yo nos sentimos completamente identificados. Es como
si ese post estuviera dirigido a nosotros.&lt;/p&gt;
&lt;p&gt;Resulta que los dos tenemos blogs, escribimos de vez en cuando y pasamos por cerca
de 6 sistemas de blogs diferentes, ¡hasta habíamos &lt;a href=&#34;https://web.archive.org/web/20130107013308/http://www.frontweb.com.ar/about.rst&#34;&gt;armado uno propio&lt;/a&gt;!.&lt;/p&gt;
&lt;h2 id=&#34;el-desafío&#34;&gt;El desafío&lt;/h2&gt;
&lt;p&gt;Ese mismo día que charlamos sobre el artículo nos propusimos el
desafío: escribir en nuestros blogs una vez al día, durante un mes.&lt;/p&gt;
&lt;p&gt;¡Hasta pusimos una apuesta para hacerlo más interesante!, el que no cumplía
con el desafío o se daba por vencido antes de tiempo tenía que pagar las
cervezas cuando nos viéramos.&lt;/p&gt;
&lt;h2 id=&#34;y-arrancamos-&#34;&gt;Y arrancamos &amp;hellip;&lt;/h2&gt;
&lt;p&gt;En mi caso, publiqué todos los días hábiles. Algunos días publicaba un artículo
entero, y otros días medio artículo, que completaba al día siguiente.&lt;/p&gt;
&lt;p&gt;Acá debo reconocer que me achiqué un poquito porque pensaba escribir también
los fines de semana, pero en la práctica solo pude hacerlo de lunes a viernes, y tuve
un poco de miedo en quedarme sin ideas rápido, cosa que no pasó, ahora cuento por
qué.&lt;/p&gt;
&lt;p&gt;Así pude escribir unos 18 artículos, más artículos de los que escribí en todo
el año pasado, y OSiUX hizo lo suyo también publicando todos los días &lt;a href=&#34;https://osiux.com/&#34;&gt;en
su blog&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;y-las-ideas&#34;&gt;¿Y las ideas?&lt;/h2&gt;
&lt;p&gt;Una de las cosas que me sorprendió de este experimento, es que las ideas
para escribir post se me ocurrían al poco tiempo que me decía &amp;ldquo;hoy tengo
que escribir&amp;rdquo;, y no antes.&lt;/p&gt;
&lt;p&gt;Podía escribir sobre cualquier tema: programación, herramientas, libros, lo que
sea; pero tenía que pensar en alguna idea y ponerme a escribir.&lt;/p&gt;
&lt;p&gt;Esto me sorprendió porque noté que tenía que presionarme un poquito para
escribir, al menos un párrafo, y las ideas aparecían.&lt;/p&gt;
&lt;h2 id=&#34;cambiando-el-chip&#34;&gt;Cambiando el &amp;ldquo;chip&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Creo que las ideas aparecen siempre que lo estás buscando. Hoy hablé con
OSiUX sobre este tema y él llegó a la misma idea, tal vez el problema que
teníamos para escribir más seguido en el blog era nuestro &amp;ldquo;chip&amp;rdquo; a la hora
de escribir.&lt;/p&gt;
&lt;p&gt;¿A qué me refiero?, a que escribir en tu propio blog puede tener varios
significados diferentes, podes hacerlo para conseguir público, ayudar a otras
personas, mostrar tus habilidades, porque simplemente te gusta o mil razones más.&lt;/p&gt;
&lt;p&gt;Para mí, el objetivo de escribir en mi blog no estaba muy claro, y por eso antes
de este desafío me costaba ponerme a escribir. Pensaba demasiado en el
&amp;ldquo;¡qué dirán!&amp;rdquo; los que lean, o si realmente estaba aportando algo de valor
hablando sobre X o Y tecnología.&lt;/p&gt;
&lt;p&gt;Es fácil sentirse abrumado por la búsqueda de escribir el post &amp;ldquo;perfecto&amp;rdquo;,
libre de errores y muy completo cuando tu objetivo no está claro o simplemente
no se encuentra alineado con tus valores.&lt;/p&gt;
&lt;p&gt;Hoy tengo una idea más concreta al respecto: escribo porque me gusta el
desafío de pensar temas nuevos, quiero crear evidencia de que puedo lograr
mejorar mis habilidades para expresar ideas aunque sea un poquito cada día.&lt;/p&gt;
&lt;p&gt;Me gusta la idea de que otras personas lean, pero me siento más cómodo
pensando que escribir es un ejercicio que me puede ayudar a mejorar mis
habilidades.&lt;/p&gt;
&lt;h2 id=&#34;revitalizar-los-blogs-y-las-ideas&#34;&gt;Revitalizar los blogs y las ideas&lt;/h2&gt;
&lt;p&gt;Con &lt;a href=&#34;https://osiux.com/&#34;&gt;OSiUX&lt;/a&gt; siempre nos intercambiamos links de artículos que nos
gustan y tenemos conversaciones muy copadas sobre sistemas, productividad, frustraciones, éxitos
personales y laborales.&lt;/p&gt;
&lt;p&gt;Saber que hay alguien del otro lado está bueno, te hace más fácil mantener
el ritmo de escritura y mantenerte creativo para seguir ideando artículos nuevos.&lt;/p&gt;
&lt;p&gt;Esta es otra de las ideas que nos funcionó muy bien al hacer el desafío: yo leía
los post de OSiUX y OSiUX leía los mios.&lt;/p&gt;
&lt;p&gt;Así que la motivación no estaba en la apuesta en sí, sino en el compromiso
social de ir avanzando todos los días.&lt;/p&gt;
&lt;h2 id=&#34;time-out&#34;&gt;¡Time out!&lt;/h2&gt;
&lt;p&gt;Algo que también me ayudó a publicar los artículos es tener
un límite de tiempo.&lt;/p&gt;
&lt;p&gt;Resulta que si no tengo un límite de tiempo empiezo a pulir y a corregir
detalles minúsculos, reescribo párrafos enteros y quiero seguir agregando
detalles.&lt;/p&gt;
&lt;p&gt;En alguna época, cuando publicaba usando &lt;code&gt;ghost&lt;/code&gt;, solía tener dos o tres
artículos en estado &amp;ldquo;borrador&amp;rdquo;, sin publicar porque algo les faltaba&amp;hellip;&lt;/p&gt;
&lt;p&gt;Tener un límite de tiempo es liberador, aunque suene contradictorio, porque
tener que publicar te empuja a decir &amp;ldquo;uhh, no tengo mucho tiempo, voy a publicar
así que no llego&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Este límite incluso me llevó a borrar cosas, omitir ideas y
quitarme la presión de escribir lo más completo que pueda.&lt;/p&gt;
&lt;p&gt;Ahora se que los temas no se agotan, si una idea queda afuera de un
texto no pasa nada, puedo volver a escribir sobre ella en otro post.&lt;/p&gt;
&lt;p&gt;Y si un artículo no queda del todo bien, le puedo echar la culpa al
reloj y listo. Cosas que pasan&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Creo que tener la posibilidad de escribir en un blog es un privilegio, no solo
porque te aporta claridad a la hora de pensar y comunicar, sino que además
te permite mirar hacia atrás y ver el camino recorrido.&lt;/p&gt;
&lt;p&gt;Aprendemos un montón de cosas interesantes todos los días, pero hay que hacer
un esfuerzo consciente para tomarse el tiempo de ponerlo en palabras, reflexionar y
comunicarlo, sino pasa de largo y se olvida.&lt;/p&gt;
&lt;p&gt;Este desafío me dejó un montón de enseñanzas, quiero seguir publicando seguido, al
menos dos o tres veces por semana.&lt;/p&gt;
&lt;p&gt;Así que si OSiUX se anima a continuar el desafío, ¡voy a seguir publicando seguido!&lt;/p&gt;
&lt;p&gt;Por cierto, también podes leer lo que escribió OSiUX en su blog
&lt;a href=&#34;https://osiux.com/2021-02-26-30-dias-de-posts-por-la-birra.html&#34;&gt;sobre este desafío&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resaltando bloques en Pilas</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-24-resaltando-bloques-en-pilas/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-24-resaltando-bloques-en-pilas/</guid>
      <description>&lt;p&gt;Pilas permite visualizar el código que se está ejecutando en todo momento.&lt;/p&gt;
&lt;p&gt;La aplicación pinta con un color diferente las lineas de código que
efectivamente se ejecutaron:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/resaltando-bloques-en-pilas/resaltado-de-codigo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Este resaltado es útil incluso para los que programamos hace tiempo. Porque
sin esto te ves obligado a llenar el código de &lt;code&gt;console.log&lt;/code&gt; para asegurarte
de qué está haciendo el programa.&lt;/p&gt;
&lt;p&gt;Sin embargo, cuando empecé a jugar con la idea de &lt;a href=&#34;https://www.examplelab.com.ar/posts/2021-02-19-bloques-y-codigo&#34;&gt;añadir bloques a Pilas&lt;/a&gt;, noté
que el resaltado de código era algo que faltaba. Sin resaltado me veo obligado a tener
que imaginarme el programa ejecutando en mi cabeza, imaginando qué bloque se está ejecutando.&lt;/p&gt;
&lt;p&gt;Claramente necesitaba poder resaltar bloques en pilas.&lt;/p&gt;
&lt;h2 id=&#34;el-problema&#34;&gt;El problema&lt;/h2&gt;
&lt;p&gt;La &lt;a href=&#34;https://developers.google.com/blockly/&#34;&gt;biblioteca que estoy utilizando&lt;/a&gt; para incorporar bloques tiene
una función dedicada
a resaltar bloques llamada &lt;code&gt;highlightBlock&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/resaltando-bloques-en-pilas/bloque-resaltado.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El problema es que el editor de pilas está dividido en varios componentes independientes entre
sí. Por ejemplo el área que visualiza el juego es un componente que a su vez tiene
un &lt;code&gt;iframe&lt;/code&gt; dentro para independizar el &lt;code&gt;scope&lt;/code&gt; de ejecución. Y a su vez, el área de bloques
también está en su propio componente con un &lt;code&gt;iframe&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/resaltando-bloques-en-pilas/iframes.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Así que para resaltar bloque tuve que seguir varios pasos.&lt;/p&gt;
&lt;h2 id=&#34;instrumentando-código&#34;&gt;Instrumentando código&lt;/h2&gt;
&lt;p&gt;Al igual que como hice con el resaltado de código en el editor de texto, aquí tuve que
insertar automáticamente código de seguimiento para saber qué partes del
código resaltar.&lt;/p&gt;
&lt;p&gt;Por suerte &lt;a href=&#34;https://developers.google.com/blockly/&#34;&gt;Blockly&lt;/a&gt; ya incluye algo para hacer
esto muy fácilmente, solamente hay que escribir algo como esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Blockly&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;JavaScript&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;STATEMENT_PREFIX&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  this.pilas.notificar_ejecucion_del_bloque(%1, this.id);
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/blockly/&#34;&gt;Blockly&lt;/a&gt; se va a encargar de insertar
esta llamada a pilas antes de cada una de las sentencias, por ejemplo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/resaltando-bloques-en-pilas/comparativa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Quienes usen pilas no van a notar que este código se agrega automáticamente, ya que
esta versión modificada el código se genera en memoria y se procesa justo antes de
poner en ejecución el juego.&lt;/p&gt;
&lt;h2 id=&#34;almacenando-información-de-ejecución&#34;&gt;Almacenando información de ejecución&lt;/h2&gt;
&lt;p&gt;Para saber qué bloques ir resaltando hice que la función &lt;code&gt;notificar_ejecucion_del_bloque&lt;/code&gt;
simplemente almacene en un diccionario todos los bloques
a resaltar por actor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/resaltando-bloques-en-pilas/notificar.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Así, el diccionario &lt;code&gt;instrumentacion_de_bloques&lt;/code&gt; se va llenando con
todos los bloques que se ejecutan en un solo ciclo del pilas.&lt;/p&gt;
&lt;p&gt;Por ejemplo, en una escena donde hay dos actores con bloques
el diccionario puede quedar así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;{
  &lt;span style=&#34;color:#ae81ff&#34;&gt;1278&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M.ujdyfst~C9SNlx%%~W&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n#Df-%|n/TtB*Qc([e(d&amp;#34;&lt;/span&gt;
  ],
  &lt;span style=&#34;color:#ae81ff&#34;&gt;1585&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sux_IEGyGca,_Slu#R?!&amp;#34;&lt;/span&gt;
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Los números &lt;code&gt;1278&lt;/code&gt; y &lt;code&gt;1585&lt;/code&gt; son los identificadores de actores, mientras
que las cadenas de texto como &lt;code&gt;&amp;quot;M.ujdyfst...&lt;/code&gt; son los identificadores
de bloques.&lt;/p&gt;
&lt;h2 id=&#34;resaltando-bloques&#34;&gt;Resaltando bloques&lt;/h2&gt;
&lt;p&gt;Ahora, con este diccionario la tarea se volvió mucho más sencilla, porque
pude separar en dos lugares independientes &amp;ldquo;qué bloques colorear&amp;rdquo; vs &amp;ldquo;dónde colorearlos&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Pilas tiene un sistema de eventos similar al que comenté en
&lt;a href=&#34;https://www.examplelab.com.ar/posts/2021-02-09-sistema-de-eventos-tipados&#34;&gt;este otro post&lt;/a&gt;, así que pude enviar
el diccionario a través de un evento que puede capturar el componente de Blockly.&lt;/p&gt;
&lt;p&gt;Este es un ejemplo de cómo quedó la integración cuando se usa el modo
pausa:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/resaltando-bloques-en-pilas/animacion.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;
&lt;p&gt;Me quedé muy contento con la forma en la que se colorean los bloques. Pensé que iba
a ser mucho más sencillo de implementar, pero aún así creo que llegué a
una buena forma de resolverlo.&lt;/p&gt;
&lt;p&gt;Más adelante voy a poner a prueba el rendimiento a ver si no afecta mucho
la velocidad del motor.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tomar notas en VIM</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-23-tomar-notas-en-vim/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-23-tomar-notas-en-vim/</guid>
      <description>&lt;p&gt;Tomar notas está bueno, te da mucha claridad sobre lo que estás haciendo
día a día y es una buena oportunidad para hacer una pausa, reflexionar y
tomar alguna que otra decisión.&lt;/p&gt;
&lt;p&gt;Uso una aplicación llamada &lt;a href=&#34;https://bear.app/&#34;&gt;Bear&lt;/a&gt; para tomar todas
mis notas, algunas notas se convierten en bocetos de artículos que me
interesan, resúmenes
de libros e incluso algunas notas van dedicadas a una especie de diario
personal que uso para reflexionar.&lt;/p&gt;
&lt;p&gt;Sin embargo, una cosa que no me gusta de &lt;a href=&#34;https://bear.app/&#34;&gt;Bear&lt;/a&gt; es que
no es una herramienta que puedo tener en mi poder; Bear tiene su propio
modelo de negocio, sus &amp;ldquo;features&amp;rdquo; adicionales y un sistema de
suscripción que me gustaría abandonar.&lt;/p&gt;
&lt;p&gt;Al principio me resultaba atractivo usar la herramienta y ver cómo crecía, pero
desde hace un buen tiempo reconocí que uso una parte muy pequeña de su
funcionalidad, en particular estas tres:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Me permite colocar imágenes fácilmente, solo arrastrar y soltar.&lt;/li&gt;
&lt;li&gt;Tiene un motor de búsquedas.&lt;/li&gt;
&lt;li&gt;Me permite poner tags, para poder diferenciar los tipos de notas.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;y-markdown-no-hace-todo-eso&#34;&gt;¿Y Markdown no hace todo eso?&lt;/h1&gt;
&lt;p&gt;Bueno sí, en realidad si, pero aún así me faltaría alguna herramienta
para cargar imágenes en las notas y que sea sencillo exportar.&lt;/p&gt;
&lt;p&gt;Así que me puse a investigar si podía reemplazar Bear con VIM. Obviamente
no quiero el 100% de la funcionalidad de Bear, solamente las cosas que
uso a diario.&lt;/p&gt;
&lt;h1 id=&#34;cómo-visualizar-notas-en-vim&#34;&gt;Cómo visualizar notas en VIM&lt;/h1&gt;
&lt;p&gt;Una opción rápida es poner todas las notas en un directorio y generar
un sitio web usando algo como &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; o &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo noté que muy rara vez quiero ver las notas en HTML, me
alcanza con navegarlas directamente desde VIM y verlas en su
formato original, en markdown.&lt;/p&gt;
&lt;p&gt;En los únicos momentos que quiero ver la nota es formato HTML es
cuando tiene imágenes.&lt;/p&gt;
&lt;p&gt;Para esos casos, hice un atajo en VIM para generar una versión
&lt;code&gt;.html&lt;/code&gt; de la nota y verla en el navegador:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;leader&amp;gt;P :!pandoc % -o ./tmp.html --standalone --metadata title=&amp;quot;nota&amp;quot;; open tmp.html&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;El atajo es bastante rudimentario, pero es un buen comienzo, si veo que me resulta útil puedo
mejorarlo, y sino descartarlo por otra cosa.&lt;/p&gt;
&lt;h1 id=&#34;cómo-agregar-imágenes-a-las-notas&#34;&gt;Cómo agregar imágenes a las notas&lt;/h1&gt;
&lt;p&gt;Para incoporar imágenes lo más práctico que encontré es un plugin
llamado &lt;a href=&#34;https://github.com/ferrine/md-img-paste.vim&#34;&gt;md-img-paste&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este plugin permite &amp;ldquo;pegar&amp;rdquo; la imagen que tengamos en el portapapeles
del sistema directamente en el buffer de VIM.&lt;/p&gt;
&lt;p&gt;El plugin se encarga de generar un archivo .png con la imagen, nos
consulta qué nombre queremos ponerle al archivo y también nos genera
el código markdown dentro del buffer.&lt;/p&gt;
&lt;p&gt;Esto me resultó super útil, incluso noté &lt;a href=&#34;https://monosnap.com/&#34;&gt;que la aplicación que uso
para capturar imágenes&lt;/a&gt; automáticamente pone en el portapapeles del
sistema la imagen que captura. Así que para poner imágenes en un
documento simplemente: tomo la captura, activo la ventana de VIM y pulso
&lt;code&gt;&amp;lt;leader&amp;gt;i&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Por cierto, también agregué esta configuración a mi archivo &lt;code&gt;vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nmap &amp;lt;buffer&amp;gt;&amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;i :call mdip#MarkdownClipboardImage()&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ahora me queda pendiente la tarea de migrar todas mis notas a VIM
y dar de baja Bear :P&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Portapapeles en VIM</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-22-portapapeles-en-vim/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-22-portapapeles-en-vim/</guid>
      <description>&lt;p&gt;VIM tiene un sistema de portapapeles propio, independiente del sistema.&lt;/p&gt;
&lt;p&gt;Esto nos permite tener múltiples portapapeles dentro de VIM y algo de
independencia con el resto del sistema.&lt;/p&gt;
&lt;p&gt;Sin embargo, muchas veces me pasa que quiero copiar y pegar texto
entre distintas aplicaciones, y VIM es un poquito incómodo a la hora de hacer
estas cosas.&lt;/p&gt;
&lt;p&gt;Resulta que VIM gestiona todo lo que copiamos o pegamos en registros nombrados. Así
que para acceder al portapapeles del sistema tenemos que anteponer un nombre
de registro a cada operación de copiado y pegado.&lt;/p&gt;
&lt;p&gt;Siendo más específico, si queremos copiar algo al portapapeles del sistema tenemos que pulsar
&lt;code&gt;+&amp;quot;y&lt;/code&gt; en lugar de &lt;code&gt;y&lt;/code&gt; y para pegar &lt;code&gt;+&amp;quot;p&lt;/code&gt; en lugar de &lt;code&gt;p&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Por suerte VIM se puede configurar como queramos. A mí me resultaba muy incómodo
anteponer ese nombre a cada operación, así que añadí estas dos lineas de
configuración a mi archivo &lt;code&gt;.vimrc&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vnoremap &amp;lt;S-y&amp;gt; &amp;quot;+y
map &amp;lt;S-p&amp;gt; &amp;quot;+gP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Con esta configuración, se vuelve mucho más directo copiar y pegar al portapapeles del
sistema. Con &lt;code&gt;shift-y&lt;/code&gt; en modo visual &amp;ldquo;copiamos&amp;rdquo; el texto de VIM en
el portapapeles del sistema y con &lt;code&gt;shift-p&lt;/code&gt; en modo normal &amp;ldquo;pegamos&amp;rdquo; dentro de
VIM lo que tengamos en el portapapeles del sistema.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sobre Bloques vs Código</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-19-bloques-y-codigo/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-19-bloques-y-codigo/</guid>
      <description>&lt;p&gt;Hace unas semanas me propuse hacer un experimento dentro de
&lt;a href=&#34;https://pilas-engine.com.ar/&#34;&gt;pilas-engine&lt;/a&gt; para permitir que las personas
puedan programar usando bloques.&lt;/p&gt;
&lt;p&gt;Al principio imaginé que podría hacer dos versiones diferentes
de &lt;a href=&#34;https://pilas-engine.com.ar/&#34;&gt;pilas-engine&lt;/a&gt;, ya que
algunas personas podrían querer
programar en código, mientras que otras podrían preferir usar
bloques (como en &lt;a href=&#34;https://scratch.mit.edu/&#34;&gt;scratch&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Sin embargo noté que las dos cosas pueden funcionar juntas. Los
actores podría responder a las órdenes que les damos escribiendo código
o encastrando bloques.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/bloques-y-codigo/workspace.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto me animó a seguir experimentando y a pensar si realmente hay tal
cosa como una &amp;ldquo;lucha&amp;rdquo; entre código vs bloques. Tengo argumentos a favor
de un enfoque versus el otro, pero tal vez ni si quiera importe.&lt;/p&gt;
&lt;p&gt;Después de todo, quiero que &lt;a href=&#34;https://pilas-engine.com.ar/&#34;&gt;pilas-engine&lt;/a&gt; sea una
herramienta que permita aprender a programar creando videojuegos, y cuantas más
opciones de expresión ofrezca mejor.&lt;/p&gt;
&lt;p&gt;Hasta ahora el experimento va dando resultados, me ayuda a pensar en
estas cosas que me apasionan y también me desafía técnicamente a dar vuelta la herramienta
para incorporarle esta opción de programar con bloques.&lt;/p&gt;
&lt;p&gt;Voy a seguir por este camino a ver a dónde me conduce&amp;hellip; me queda mucho
trabajo por hacer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Controlando el navegador con el teclado</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-18-controlando-el-navegador-con-el-teclado/</link>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-18-controlando-el-navegador-con-el-teclado/</guid>
      <description>&lt;p&gt;Usar el teclado para navegar dentro de un editor se volvió un camino
de ida para mí, a tal punto que empecé a reemplazar el mouse por el teclado
en todo los lugares que pude, por ejemplo en el navegador:&lt;/p&gt;
&lt;p&gt;Hace unos años vengo utilizando una extensión llamada
&lt;a href=&#34;https://github.com/brookhong/Surfingkeys&#34;&gt;SurfingKeys&lt;/a&gt; que
está disponible para Brave, Firefox y Chrome.&lt;/p&gt;
&lt;p&gt;Esta extensión hace que usar el navegador se parezca un poquito más
a utilizar VIM, tiene modos, atajos de teclado y hasta un mini-editor
de textos para sentirse como en VIM.&lt;/p&gt;
&lt;p&gt;Ni bien instalas la extensión, lo primero que te permite hacer es
desplazar el scroll usando &lt;code&gt;j&lt;/code&gt; y &lt;code&gt;k&lt;/code&gt;, aunque yo generalmente uso
&lt;code&gt;d&lt;/code&gt; y &lt;code&gt;u&lt;/code&gt; que desplazan más rápido.&lt;/p&gt;
&lt;p&gt;También uso mucho los comandos &lt;code&gt;G&lt;/code&gt; y &lt;code&gt;gg&lt;/code&gt;, para ir al final o principio
del documento respectivamente.&lt;/p&gt;
&lt;h1 id=&#34;navegando-enlaces&#34;&gt;Navegando enlaces&lt;/h1&gt;
&lt;p&gt;Para pulsar enlaces hay dos opciones, una es usar &lt;code&gt;/&lt;/code&gt; seguido del
texto que nos interesa y la otra opción es pulsar &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si pulsas &lt;code&gt;f&lt;/code&gt; la extensión te va a resaltar todos los enlaces así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/controlando-el-navegador-con-el-teclado/links.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El resaltado te va a mostrar qué teclas pulsar para abrir cada enlace. Y
si mantienes la tecla &lt;code&gt;shift&lt;/code&gt; el enlace se va a abrir en una pestaña.&lt;/p&gt;
&lt;h1 id=&#34;seleccionando-texto&#34;&gt;Seleccionando texto&lt;/h1&gt;
&lt;p&gt;Para seleccionar texto, podes pulsar &lt;code&gt;v&lt;/code&gt; y luego desplazar el cursor
por el texto que quieras seleccionar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/controlando-el-navegador-con-el-teclado/seleccionar.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto funciona igual que el modo visual de VIM, así que podes pulsar &lt;code&gt;o&lt;/code&gt; para
ajustar los bordes de la selección, usar &lt;code&gt;w&lt;/code&gt; para saltar entre palabras etc&amp;hellip;&lt;/p&gt;
&lt;h1 id=&#34;editando-campos-de-texto&#34;&gt;Editando campos de texto&lt;/h1&gt;
&lt;p&gt;Otra cosa que me gusta mucho de esta extensión es que incluye un
pequeño editor de textos muy similar a VIM para poder escribir en campos
de texto. Me gusta esta funcionalidad porque puedo usar lo que conozco
de VIM pero también porque me muestra el texto que estoy escribiendo
en primer plano, con un buen tamaño de texto:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/controlando-el-navegador-con-el-teclado/editor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Para activar este editor hay que pulsar &lt;code&gt;ctrl-i&lt;/code&gt; estando dentro
de un campo de texto, y para confirmar nuestro cambio tenemos que
pulsar &lt;code&gt;enter&lt;/code&gt; en modo normal.&lt;/p&gt;
&lt;h1 id=&#34;más-opciones&#34;&gt;Más opciones&lt;/h1&gt;
&lt;p&gt;Para investigar más acerca de esta extensión podes pulsar la tecla
&lt;code&gt;?&lt;/code&gt; sobre cualquier página para ver la ayuda.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/controlando-el-navegador-con-el-teclado/ayuda.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esta ayuda te sirve incluso si venís usando esta extensión hace
tiempo. Por ejemplo yo descubrí el comando &lt;code&gt;go&lt;/code&gt; para abrir
urls más rápido y estoy usándolo siempre que lo necesito así voy adquiriendo
práctica.&lt;/p&gt;
&lt;p&gt;Es una buena idea mirar esta página de ayuda de vez en cuando, siempre
hay algún comando que podemos incorporar a nuestro día a día.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Personalizando el teclado</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-17-personalizando-el-teclado/</link>
      <pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-17-personalizando-el-teclado/</guid>
      <description>&lt;p&gt;Hace unos meses leí &lt;a href=&#34;https://www.examplelab.com.ar/links-files/programmings-dirtiest-little-secret/&#34;&gt;un artículo&lt;/a&gt; que me animó a practicar
mecanografía todos los días. No solo me dieron ganas de escribir
más rápido, sino que hizo re-diseñar la forma en la que uso el teclado.&lt;/p&gt;
&lt;p&gt;Y es que con los años fui desarrollando la costumbre de escribir muy
libremente y hoy estoy tratando de &amp;ldquo;volver a aprender&amp;rdquo; para mejorar varios
problemas: casi no uso los dedos meñiques, mis manos se desplazan un
montón mientras escribo porque al no usar los meñiques me cuesta alcanzar algunas teclas, y suelo
cometer varios errores al escribir. Casi no miro el teclado al escribir, lo que es bueno, pero
necesito buscar con la mirada algunas teclas que no uso muy seguido como los números o símbolos como | ^ &amp;amp;&amp;hellip;&lt;/p&gt;
&lt;h1 id=&#34;reposar-las-manos-en-la-fila-normal&#34;&gt;Reposar las manos en la fila normal&lt;/h1&gt;
&lt;p&gt;Una de las ideas principales de aprender mecanografía es mantener las manos en
una posición que nos permita alcanzar cualquier tecla fácilmente:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/personalizando-el-teclado/teclado.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Así que me puse a practicar con un software llamado
&lt;a href=&#34;https://github.com/alexei-matveev/gtypist&#34;&gt;gtypist&lt;/a&gt;, y a prestarle atención
a mis manos mientras trabajo. Comencé a usar más los dedos meñiques y a mantener
mis manos en la fila normal.&lt;/p&gt;
&lt;p&gt;Sin embargo, hay algunas teclas que son difíciles de alcanzar incluso prestando
mucha atención. Por ejemplo en VIM se pulsa mucho la tecla ESC, lo que te obliga a mover
la mano izquierda fuera de la fila principal. Lo mismo pasa en una consola cuando
necesitas recorrer el historial de comandos pulsando las flechitas ↑ o ↓.&lt;/p&gt;
&lt;p&gt;Así que me puse a buscar si algún otro loco en Internet tenía esta misma inquietud y llegué
a un software llamado &lt;a href=&#34;https://karabiner-elements.pqrs.org/&#34;&gt;Karabiner-Elements&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Este software te permite personalizar el mapa de teclado para ajustarlo
a tus preferencias.&lt;/p&gt;
&lt;p&gt;Por ejemplo, yo noté que puedo mantener mis manos en la fila principal si hago
que la tecla &lt;code&gt;Caps Lock&lt;/code&gt; en realidad sustituya a la tecla &lt;code&gt;ESC&lt;/code&gt; que uso un
motón en VIM:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/personalizando-el-teclado/karabiner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Otras de las configuraciones que añadí son la posibilidad de bloquear mayúsculas
pulsando las dos teclas &lt;code&gt;shift&lt;/code&gt; y sustituir las flechitas
del teclado por &lt;code&gt;hjkl&lt;/code&gt; mientras mantengo pulsado &lt;code&gt;Caps Lock&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Al principio me costó adoptar estos cambios, pero a los días noté que
puedo re-aprender y moldear mis costumbres dedicando algo de atención y práctica.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>La culpa no es del DOM</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-16-la-culpa-no-es-del-dom/</link>
      <pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-16-la-culpa-no-es-del-dom/</guid>
      <description>&lt;p&gt;Usar un Framework para escribir tu aplicación JavaScript tiene varias
ventajas, sin embargo, creo que hay que revisar una idea que vi en varias charlas
técnicas y algún que otro tutorial cuando se intenta justificar el
uso de un Framework que me parece incorrecta.&lt;/p&gt;
&lt;p&gt;Se suele decir que cambiar &lt;a href=&#34;https://www.reddit.com/r/javascript/comments/6115ay/why_do_developers_think_the_dom_is_slow/&#34;&gt;el DOM con las APIs nativas del navegador
es un proceso costoso&lt;/a&gt;
(computacionalmente hablando) y que por ese motivo conviene usar virtualDom o una abstracción similar.&lt;/p&gt;
&lt;p&gt;Lo cierto es que acceder al DOM no es lento, de hecho, la única forma
de hacer que ocurran cosas en la pantalla del navegador con JavaScript
es alterando el DOM, incluso si usas un Framework.&lt;/p&gt;
&lt;p&gt;Tal vez tu código de aplicación no esté accediendo directamente a los
nodos del DOM, sin embargo el Framework sí lo va a estar haciendo, ¡es la
única forma que existe de alterar la interfaz!&lt;/p&gt;
&lt;p&gt;Entonces, ¿de donde proviene esa idea de que el DOM es lento?&lt;/p&gt;
&lt;h1 id=&#34;es-fácil-escribir-código-ineficiente&#34;&gt;Es fácil escribir código ineficiente&lt;/h1&gt;
&lt;p&gt;Si escribimos código que accede al DOM directamente, sin saber
exactamente lo que estamos haciendo, podemos llegar a escribir
código ineficiente que va a poner a trabajar al navegador de más.&lt;/p&gt;
&lt;p&gt;Tomemos como ejemplo esta situación: tienes una lista de productos en un
array y quieres convertirlo en una tabla para mostrarlos en el DOM del navegador.&lt;/p&gt;
&lt;p&gt;Una forma sencilla de pensarlo es así:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Comienzo capturando un nodo del DOM, en donde quiero colocar el listado, y luego voy
insertando elementos al DOM a medida que leo el array de productos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Que en código podría ser algo así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tbody&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cuerpo&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;u&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;usuarios&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tr&amp;#34;&lt;/span&gt;);
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tdNombre&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;td&amp;#34;&lt;/span&gt;);
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tdEmail&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;td&amp;#34;&lt;/span&gt;);

  &lt;span style=&#34;color:#a6e22e&#34;&gt;tdNombre&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerText&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;u&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;tdEmail&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerText&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;u&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;email&lt;/span&gt;;

  &lt;span style=&#34;color:#a6e22e&#34;&gt;tr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tdNombre&lt;/span&gt;);
  &lt;span style=&#34;color:#a6e22e&#34;&gt;tr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tdEmail&lt;/span&gt;);

  &lt;span style=&#34;color:#a6e22e&#34;&gt;tbody&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tr&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora bien, el código va a funcionar bien, pero ese &lt;code&gt;tbody.appendChild(tr);&lt;/code&gt; que
aparece al final va a obligar al navegador a trabajar más de lo necesario.&lt;/p&gt;
&lt;p&gt;Resulta que cuando añadimos un elemento al DOM el navegador tiene que
recalcular el tamaño del documento, avisar a cualquier observador del cambio
del DOM, procesar nuevamente la disposición de los elementos, tal vez extender
la barra de desplazamiento vertical y algunas cosas más.&lt;/p&gt;
&lt;p&gt;El problema aquí no es el DOM en sí, sino que nuestro algoritmo no tiene en
cuenta que el navegador prefiere que hagamos las cosas en lote.&lt;/p&gt;
&lt;p&gt;Si queremos mostrar 100 elementos en una lista, ¿por qué no los mostramos todos juntos en lugar
de hacerlo uno a uno?.&lt;/p&gt;
&lt;p&gt;Esta optimización es muy fácil de hacer:&lt;/p&gt;
&lt;p&gt;Primero tenemos que crear un
&lt;a href=&#34;https://developer.mozilla.org/es/docs/Web/API/DocumentFragment&#34;&gt;DocumentFragment&lt;/a&gt;,
que es básicamente un nodo que no forma parte del documento:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;df&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createDocumentFragment&lt;/span&gt;();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego podemos añadir ahí todos los elementos de la tabla, uno a uno, en lugar
de añadirlos a la tabla.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;df&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tr&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y por último, podemos agregar todos los elementos juntos a la tabla, produciendo
un solo cambio en el dom del documento:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tbody&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;df&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tomando el algoritmo original, estos son todos los cambios que tendríamos
que hacer:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/la-culpa-no-es-del-dom/diff.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;La versión anterior y la optimizada&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;
&lt;p&gt;Si tenemos en cuenta cómo trabaja el navegador hay un montón de oportunidades
para optimizar cosas.&lt;/p&gt;
&lt;p&gt;Creo que las críticas que se hacen al DOM, y su rendimiento, muchas veces
están alentadas por desconocer alguno de estos detalles; o por escribir código
a la ligera. Después de todo, es mucho más fácil culpar a la herramienta, ¡todos hacemos eso de vez en cuando!.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducción a presupuestos</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-12-introduccion-a-presupuestos/</link>
      <pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-12-introduccion-a-presupuestos/</guid>
      <description>&lt;p&gt;La plata se puede volver un tema de estrés y mucha incertidumbre, incluso si
tenes el privilegio de contar con un trabajo que te permite llegar a fin de mes
sin sobresaltos. Cuanto más ganas, más gastas, nos pasa a todos.&lt;/p&gt;
&lt;p&gt;El estrés está en cada momento en que me pregunto: ¿podré
afrontar este gasto?, ¿estaré hipotecando mi futuro si
hago este pago en cuotas?, ¿será que voy a poder tomarme
vacaciones?, ¿tengo reservas ante una eventualidad?.&lt;/p&gt;
&lt;p&gt;Y es razonable tener esas inquietudes, si me guío por lo
que tengo en la billetera en ese momento puedo meter la pata, porque
a futuro tengo obligaciones que cumplir, gastos que ni me acuerdo
que voy a tener que hacer: navidad, vacaciones, luz, impuestos.&lt;/p&gt;
&lt;p&gt;Solía registrar los gastos y cada tanto mirar para saber en qué
había gastado, como si esa conducta pudiera servirme para predecir
cuanto iba a gastar en el futuro. Pero nunca saqué nada útil de esos
registros de gastos pasados.&lt;/p&gt;
&lt;h1 id=&#34;un-sistema-para-sacar-la-plata-de-la-cabeza&#34;&gt;Un sistema para sacar la plata de la cabeza&lt;/h1&gt;
&lt;p&gt;Más o menos en el 2016 encontré una forma sacarme esos problemas
de la cabeza y volcar mis finanzas personales en un sistema que
me da control y seguridad.&lt;/p&gt;
&lt;p&gt;El cerebro no sirve para recordarnos cuentas y tomar buenas decisiones
de compra cuando está bajo estrés. Necesita de un sistema donde
se pueda reflexionar, en un momento y lugar definido, un sistema
en donde se vuelque toda nuestra información financiera para que
el cerebro se libere y pueda gastar recursos en ideas y no en preocupaciones.&lt;/p&gt;
&lt;p&gt;El sistema que empecé a usar aquella vez fue &lt;a href=&#34;https://www.youneedabudget.com/&#34;&gt;YNAB&lt;/a&gt;, y hasta hoy lo sigo usando; pero
creo que las ideas más importantes no dependen del software en sí, sino
del método que enseñan y cómo se puede cambiar la &amp;ldquo;sensación&amp;rdquo; que te
produce la plata cuando encontrás el método para gestionarla.&lt;/p&gt;
&lt;p&gt;Mi idea es resumir alguna de las ideas que aprendí estos años
mientras tomaba el control de mis finanzas.&lt;/p&gt;
&lt;h1 id=&#34;la-idea-central-de-ynab-necesitas-un-presupuesto&#34;&gt;La idea central de YNAB: Necesitas un presupuesto&lt;/h1&gt;
&lt;p&gt;Tener un presupuesto puede significar diferentes cosas para cada persona, sin
embargo en &lt;a href=&#34;https://www.youneedabudget.com/&#34;&gt;YNAB&lt;/a&gt; la idea comienza con esta idea:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;¿Qué trabajo quieres asignarle a tu plata?, ¿Qué tiene que hacer por vos?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tu presupuesto tiene que responder esa pregunta, básicamente tu presupuesto
es una lista de categorías y montos que estás dispuesto a preservar. Cada
categoría simboliza un &amp;ldquo;trabajo&amp;rdquo; a donde vas a destinar esa plata.&lt;/p&gt;
&lt;p&gt;No solo productos y servicios. Si en tu vida es importante comprar juegos o
salir con amigos vas a tener que armar un presupuesto para esas dos cosas. La
idea es que el presupuesto permita que le asignes un objetivo a tu plata. Y
este presupuesto tiene que reflejar las cosas que son importantes en tu vida
y nadie puede armarlo por vos.&lt;/p&gt;
&lt;p&gt;Aquí hay una captura de pantalla de la documentación de &lt;a href=&#34;https://www.youneedabudget.com/&#34;&gt;YNAB&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/introduccion-a-presupuestos/presupuestos.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La primer columna tiene los nombres de categorías en el mes actual, la segunda
tiene el monto que manualmente le asignamos, la siguiente columna es cuanto se
gastó hasta ahora , y la última columna señala el balance de ese presupuesto
(monto asignado - monto gastado) en el mes.&lt;/p&gt;
&lt;p&gt;Si te pasa lo mismo que a mí, vas a notar que la cantidad de categorías se va a
expandir. Primero vas a volcar las obligaciones que tengas en mente, los gastos
de supermercado van a ser aproximados y te vas a olvidar de algunas cosas, pero
con la práctica vas a reconocer que las vacaciones, los regalos y el fondo de
emergencia tienen que ir en el presupuesto también.&lt;/p&gt;
&lt;p&gt;Incluso en este punto, se siente genial hacer un presupuesto, porque te sacas
cosas de la cabeza, igual que cuando haces una lista de tareas, las cosas
dejan de estar dando vuelta en tu cabeza.&lt;/p&gt;
&lt;h1 id=&#34;planificar-con-lo-que-tenes-ahora&#34;&gt;Planificar con lo que tenes ahora&lt;/h1&gt;
&lt;p&gt;Otra idea interesante es que el presupuesto se tiene que hacer con
la plata que tenes ahora, no a futuro. Si una categoría como vacaciones
te permite mirar a futuro, la idea es que trates de reservar algo de plata
hoy para ese presupuesto e ir haciendo un fondo, de modo que ese dinero
quede resguardado para ese trabajo: &amp;ldquo;reservo esta plata porque es importante
para mí tener vacaciones&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Y lo mismo es cierto para cualquier otro proyecto que sea importante para
vos.&lt;/p&gt;
&lt;p&gt;No es bueno que los gastos te agarren por sorpresa. Es cierto que a veces no
sabemos cuando se va a romper la estufa o un caño del baño, pero sí sabemos que algo
se va a romper; así que también es bueno hacer un presupuesto &amp;ldquo;para arreglos de la casa&amp;rdquo;
e ir reservando un poquito de plata todos los meses.&lt;/p&gt;
&lt;p&gt;Así, cuando llegue ese gasto inesperado la sorpresa no te va a estresar, porque
sabés que hay un dinero &amp;ldquo;reservado para ese trabajo&amp;rdquo;, y juntar un poquito todos
los meses hace que el problema no sea tán grande.&lt;/p&gt;
&lt;h1 id=&#34;ganándole-a-la-ley-de-parkinson&#34;&gt;Ganándole a la ley de Parkinson&lt;/h1&gt;
&lt;p&gt;La ley de Parkinson señala, medio en broma, medio en serio, que nuestros gastos
se van a equiparar a nuestros ingresos. ¡Y tiene sentido suponer esto!.&lt;/p&gt;
&lt;p&gt;Imaginá que logras un aumento de sueldo, ese dinero extra va a invitarnos a hacer
algún gasto más. Si tenes unos pesos extra, ¿cómo no vas a salir cenar afuera?!.&lt;/p&gt;
&lt;p&gt;Para mí, tener un presupuesto no supone restricciones, al contrario, me deja
comprar cosas y darme lujos sin culpa; pero tengo que priorizar. El presupuesto
te hacer &amp;ldquo;dividir&amp;rdquo; la plata que tenes en categorías, así que no hay lugar
a dudas, si planificas gastar plata saliendo a cenar afuera entonces no vas a poder reservar
dinero para comprar ese teclado mecánico que te gusta. ¿Qué vas a priorizar?.&lt;/p&gt;
&lt;p&gt;De alguna forma, es como si el presupuesto te estuviera ayudando a generar
ese rigor de la escasez. Cosa que suena horrible, pero es así como funciona
la plata, y el presupuesto te permite verlo con claridad y decidir mejor.&lt;/p&gt;
&lt;h1 id=&#34;romper-el-ciclo-de-vivir-al-día&#34;&gt;Romper el ciclo de vivir al día&lt;/h1&gt;
&lt;p&gt;Otra de las ideas que comencé a valorar es lo que en &lt;a href=&#34;https://www.youneedabudget.com/&#34;&gt;YNAB&lt;/a&gt; llaman &amp;ldquo;madurar el dinero&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;La idea es sencilla: gran parte de las preocupaciones se originan porque
llegamos a fin de mes con lo justo, y tenemos que esperar a cobrar para
pagar servicios y sentirnos de nuevo sobre ruedas.&lt;/p&gt;
&lt;p&gt;Si logramos presupuestar, ajustar gradualmente algunos gastos, y vivir con
menos de lo que ganamos, vamos a ir generando una reserva, de modo
que nuestros gastos del mes vamos a poder afrontarlos con lo que cobramos
el mes anterior.&lt;/p&gt;
&lt;p&gt;Si bien lleva unos meses lograr ese balance favorable, incluso en los primeros
meses es muy gratificante cuando logras pagar algunos servicios con lo que
&amp;ldquo;te sobró&amp;rdquo; del mes anterior.&lt;/p&gt;
&lt;p&gt;Técnicamente hablando no hay mucha ciencia ahí, pero la sensación de libertad
y despreocupación que eso te genera es muy tranquilizadora.&lt;/p&gt;
&lt;h1 id=&#34;la-parte-mala&#34;&gt;La parte mala&lt;/h1&gt;
&lt;p&gt;Si bien escribo muy entusiasmado por estas ideas que vengo probando hace
varios años, entiendo que tener un sistema de presupuestos no es algo
que todas las personas van a querer hacer.&lt;/p&gt;
&lt;p&gt;Llevar un presupuesto y registrar gastos a diario requiere de motivación, algo
de persistencia y paciencia.&lt;/p&gt;
&lt;p&gt;Recuerdo que la primera vez que hice un presupuesto lo abandoné a los días, y
me imagino que a muchas personas les va a pasar lo mismo; los beneficios
de tener el control de tus finanzas no son inmediatos, lleva varias semanas
empezar a reconocer qué funciona y qué no.&lt;/p&gt;
&lt;p&gt;Llevar un presupuesto es una habilidad que se tiene que entrenar todos los
días, nadie nace sabiendo cómo hacerlo bien, y lo que funciona para mí puede
ser diferente a lo funcione para vos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Abandonar libros está bien</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-10-abandonar-libros-esta-bien/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-10-abandonar-libros-esta-bien/</guid>
      <description>&lt;p&gt;Leer libros es algo que parece natural y que nadie nos
tiene que decir cómo hacerlo. Sin embargo, creo que
durante muchos años estuve leyendo con algunas ideas
incorrectas sobre la lectura en general.&lt;/p&gt;
&lt;p&gt;Alguna de las ideas que tenía en mente sobre la lectura
creo que las aprendí en la escuela, pero nunca reflexioné
sobre ellas como para darme cuenta que no funcionan bien
en mi vida.&lt;/p&gt;
&lt;p&gt;Una de esas ideas era que los libros había que
leerlos completos; comenzar por el principio, leerlos en
orden y llegar a la conclusión para dar el libro por finalizado.&lt;/p&gt;
&lt;p&gt;Resulta que algunos libros se ponen aburridos, o son simplemente
muy malos, pero no te das cuenta hasta que estás en la mitad; creo
que lo mismo pasa con algunas películas que prometen mucho al
principio pero luego se van desinflando&amp;hellip; mirarlas hasta
el final no te van a devolver el tiempo invertido.&lt;/p&gt;
&lt;h1 id=&#34;sobre-cómo-leer-más&#34;&gt;Sobre cómo leer más&lt;/h1&gt;
&lt;p&gt;Nunca pensé realmente sobre mis ideas sobre la lectura, hasta
que escuché &lt;a href=&#34;https://tim.blog/2015/08/18/the-evolutionary-angel-naval-ravikant/&#34;&gt;una entrevista&lt;/a&gt;
a Naval Ravikant donde dijo:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nos enseñaron desde muy chicos que los
libros son algo que tienes que leer hasta el final. Los
libros son sagrados. Así, llegamos a esta situación donde todas
las personas que conozco están &amp;ldquo;estancadas&amp;rdquo; en algún libro. Y en
ese caso, ¿Qué haces?, te das por vencido en leer libros por un tiempo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Este razonamiento me dejó pensando, porque es una de las cosas que me suele
pasar con la lectura. En lugar de abandonar el libro, abandono la lectura.&lt;/p&gt;
&lt;p&gt;Tal vez le doy demasiadas oportunidades a libros que prometen, como
si guardara algo de esperanza a que se ponga bueno; cosa que nunca me
pasó.&lt;/p&gt;
&lt;p&gt;Hoy uso una mentalidad muy diferente a la hora de leer libros: tengo varios
libros empezados y muy distintos. A veces quiero leer sobre cosas que me
sirven para trabajar, sobre metodologías y esas cosas&amp;hellip; pero también tengo
libros ajenos a todo eso, como &amp;ldquo;Yo soy el Diego&amp;rdquo; o &amp;ldquo;Una borrachera cósmica&amp;rdquo;. Y es
que muchas veces simplemente quiero mantenerme leyendo, reforzando el hábito
de leer un poquito todos los días.&lt;/p&gt;
&lt;p&gt;También estoy siguiendo otra recomendación de Naval que es saltear
cosas si se ponen aburridas. Muchos de los libros que leo tienen buenas ideas, pero
dan varias vueltas usando metáforas o anécdotas que ahora simplemente &amp;ldquo;escaneo&amp;rdquo; para
llegar a las partes que me interesan.&lt;/p&gt;
&lt;p&gt;En definitiva, ya no dejo que las partes aburridas me arruinen las ganas de leer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Haciendo un sistema de eventos tipado</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-09-sistema-de-eventos-tipados/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-09-sistema-de-eventos-tipados/</guid>
      <description>&lt;p&gt;Cuando empecé a investigar acerca de TypeScript no le vi
mucha utilidad. Declarar tipos de datos para
variables simples como number o string no me parecía nada
valioso.&lt;/p&gt;
&lt;p&gt;Sin embargo, cuando se trata de estructuras de datos la cosa
se pone interesante. TypeScript nos permite describir la &amp;ldquo;forma&amp;rdquo;
que deberán tener ciertas estructuras de datos y eso hace
que nuestro código gane algo de consistencia adicional.&lt;/p&gt;
&lt;p&gt;Después de todo, la pieza más importante de un programa son
sus estructuras de datos y ayuda mucho poder detectar inconsistencias
mientras estamos escribiendo el código.&lt;/p&gt;
&lt;h1 id=&#34;un-ejemplo-para-ilustrar-todo-esto&#34;&gt;Un ejemplo para ilustrar todo esto&lt;/h1&gt;
&lt;p&gt;Me encontré con la necesidad de tener una forma de comunicar dos partes de una
aplicación; necesitaba tener un sistema de eventos, poder enviar
en mensaje de una sección de la aplicación a otra.&lt;/p&gt;
&lt;p&gt;Esto es fácil de hacer dentro de un navegador, podemos crear un evento
personalizado, &amp;ldquo;conectarnos&amp;rdquo; a ese evento, y luego lanzarlo desde otra
parte de la aplicación.&lt;/p&gt;
&lt;p&gt;Por ejemplo de esta forma:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Para disparar el evento
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;window.&lt;span style=&#34;color:#a6e22e&#34;&gt;dispatchEvent&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CustomEvent&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cambia-balance&amp;#34;&lt;/span&gt;, { 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;detail&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;nuevoBalance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4000&lt;/span&gt;, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cuentaID&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;
  }
})); 


&lt;span style=&#34;color:#75715e&#34;&gt;// Para conectarnos al evento (desde otro componente)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;window.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cambia-balance&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;evento&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;cuentaID&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;nuevoBalance&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;evento&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;detail&lt;/span&gt;;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`Ha cambiado la cuenta &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cuentaID&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, el balance es &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nuevoBalance&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;);
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aquí tenemos que identificar que las dos piezas tienen que tener algunas
cosas en común.&lt;/p&gt;
&lt;p&gt;El evento &lt;code&gt;cambia-balance&lt;/code&gt; se tiene que lanzar especificando el &lt;code&gt;nuevoBalance&lt;/code&gt; y
la &lt;code&gt;cuentaID&lt;/code&gt;, porque si se llama olvidando alguno de estos parámetros el sistema
puede llegar a comportarse raro en tiempo de ejecución:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/sistema-de-eventos-tipados/bug.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es decir, no va a fallar, pero ese &lt;code&gt;undefined&lt;/code&gt; nos señala que algo no anda bien. ¿Será
que falta un argumento en el evento?, ¿En qué parte del sistema se lanza el evento?, ¿Me
quedó un renombrado de atributos por la mitad?.&lt;/p&gt;
&lt;p&gt;A mí me produce mucha incertidumbre hacerme todas esas preguntas. ¡Ni hablar cuando
el código se vuelve complejo!. Ese &lt;code&gt;undefined&lt;/code&gt; me molesta principalmente porque casi
siempre el motivo del error es muy tonto pero aún así me lleva mucho tiempo encontrarlo.&lt;/p&gt;
&lt;h1 id=&#34;eventos-bajo-tipos&#34;&gt;Eventos bajo tipos&lt;/h1&gt;
&lt;p&gt;Otra forma de crear el sistema de eventos es comenzar definiendo
qué estructura deberán tener los eventos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Eventos&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cambia-balance&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;cuentaID&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;nuevoBalance&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;number&lt;/span&gt;},
  &lt;span style=&#34;color:#75715e&#34;&gt;// otros eventos
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}

&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Evento&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;keyof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Eventos&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Con esto, TypeScript sabrá que cuando mencionemos el tipo
de dato &lt;code&gt;Evento&lt;/code&gt;, en realidad nos estamos refiriendo a un &lt;code&gt;string&lt;/code&gt;
que también tiene que ser una clave del diccionario Eventos.&lt;/p&gt;
&lt;p&gt;Ahora, para asegurarnos de que el código que envía eventos
use el sistema de tipos hice esta función:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;enviar&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;keyof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Eventos&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nombre&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;datos&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Eventos&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;T&lt;/span&gt;]) {
  window.&lt;span style=&#34;color:#a6e22e&#34;&gt;dispatchEvent&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CustomEvent&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nombre&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;detail&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;datos&lt;/span&gt; }));
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Así, cuando queremos usar esta función para enviar un
evento el propio editor VIM nos ayuda reconociendo qué
datos necesitamos especificar en cada evento:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/sistema-de-eventos-tipados/autocompletado.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Incluso, si cometemos un error, como el que mencioné más arriba, no hace falta
ejecutar el programa para darnos cuenta de que algo anda mal:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/sistema-de-eventos-tipados/tip.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego, la función para conectar mensajes podría tener esta forma:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;conectar&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;keyof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Eventos&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nombre&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;datos&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;Eventos&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;T&lt;/span&gt;], &lt;span style=&#34;color:#a6e22e&#34;&gt;evento&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;CustomEvent&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;) {
  window.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;nombre&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;CustomEvent&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;detail&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;);
  });
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esta función se puede mejorar para facilitar la desconexión de eventos, pero
preferí dejarla así solo para ilustrar cómo describir los tipos
de datos.&lt;/p&gt;
&lt;p&gt;Y finalmente, así lo interpreta el editor, ayudándonos a detectar
inconsistencias en los eventos que recibimos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/sistema-de-eventos-tipados/conectar.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Una estructura de proyecto minimalista en TypeScript</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-08-estructura-de-proyecto-minimalista/</link>
      <pubDate>Mon, 08 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-08-estructura-de-proyecto-minimalista/</guid>
      <description>&lt;p&gt;Hace algunos meses me empecé a interesar en formas simples
en hacer proyectos en JavaScript, leí el libro &lt;a href=&#34;https://modestjs.works/book/part-1/intro/&#34;&gt;Modest JS Works&lt;/a&gt;
y también empecé a usar algunas ideas de &lt;a href=&#34;https://vanillajstoolkit.com/&#34;&gt;The VanillaJS Toolkit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Realmente extraño la sensación de hacer aplicaciones completas por mi mismo,
sin depender de cientos de megabytes en dependencias, frameworks
sofisticados y un ecosistema de herramientas que están cambiando
todo el tiempo.&lt;/p&gt;
&lt;h1 id=&#34;por-qué&#34;&gt;¿Por qué?&lt;/h1&gt;
&lt;p&gt;Hace unos años, podías escribir un sistema completo por tu propia cuenta,
necesitabas Apache, PHP, un editor de textos y ganas de programar.&lt;/p&gt;
&lt;p&gt;Incluso si recién estabas aprendiendo a programar, las herramientas hacían
muy poquito por vos, pero aún así podías concentrarte en tu aplicación y no tanto
por todo lo demás.&lt;/p&gt;
&lt;p&gt;Hoy la historia es un poco diferente, hubo un cambio de cultura muy grande
entre los desarrolladores web; no se muy bien por qué, pero ahora parece
que la forma más aceptada de iniciar un proyecto web es elegir un framework, instalar
dependencias con npm, configurar tu IDE y algunas cosas más.&lt;/p&gt;
&lt;p&gt;Pienso que la forma en la que trabajan las empresas grandes y los equipos altamente
capacitados lograron influenciar a todo el mundo. Como si sus ideas se hubieran vuelto
el &amp;ldquo;nuevo estándar&amp;rdquo; a la hora de hacer software.&lt;/p&gt;
&lt;h1 id=&#34;un-enfoque-simple&#34;&gt;Un enfoque simple&lt;/h1&gt;
&lt;p&gt;Estrictamente hablando, al navegador no le importa cómo vas a construir tu aplicación
web, el navegador interpreta HTML, CSS y JavaScript, independientemente de cómo
lo escribas.&lt;/p&gt;
&lt;p&gt;A mí me gusta la idea de no tener demasiadas dependencias, sobre
todo si soy el único desarrollador y cada actualización o problema de configuración
lo tengo que arreglar por mí mismo.&lt;/p&gt;
&lt;p&gt;De hecho, me parece razonable que mi equipo tenga ciertas herramientas
instaladas de forma global: typescript, python, make, vim, uglify-js etc&amp;hellip; asumir
que un proyecto tiene que poder &amp;ldquo;auto-instalarse&amp;rdquo; en cualquier equipo usando &lt;code&gt;npm install&lt;/code&gt;
desde cero no me gusta sinceramente.&lt;/p&gt;
&lt;p&gt;Entonces, un proyecto se puede iniciar con 3 archivos, &amp;ldquo;index.html&amp;rdquo;, &amp;ldquo;app.js&amp;rdquo; y &amp;ldquo;app.css&amp;rdquo;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;→ ls 
app.css     app.js      index.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Y conforme necesite más, puedo ser consciente de qué piezas me conviene
agregar y si realmente me benefician a no.&lt;/p&gt;
&lt;h1 id=&#34;un-webserver-en-modo-desarrollo&#34;&gt;Un webserver en modo desarrollo&lt;/h1&gt;
&lt;p&gt;Una de las piezas que me gusta tener a la hora de programar es un servidor
web que actualice el navegador cada vez que realizo cambios en los archivos
del proyecto.&lt;/p&gt;
&lt;p&gt;Para eso utilizo &lt;a href=&#34;https://www.npmjs.com/package/live-server&#34;&gt;este comando&lt;/a&gt; que
instalé de forma global en mi sistema:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;live-server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Esto es un &amp;ldquo;chiche&amp;rdquo; en realidad, porque solamente me ahorra cambiar
de ventana y pulsar &lt;code&gt;cmd+r&lt;/code&gt; para recargar la página.&lt;/p&gt;
&lt;p&gt;Sin embargo para mí esto añade algo de diversión y comodidad, porque puedo
permanecer en el editor y asegurarme que el navegador siempre me muestra
la versión más reciente de la aplicación.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/estructura-de-proyecto-minimalista/split.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;typescript&#34;&gt;TypeScript&lt;/h1&gt;
&lt;p&gt;Obviamente se puede escribir el proyecto directamente en JavaScript
para que lo interprete el navegador, sería más sencillo hacerlo así. Sin
embargo aquí es donde se puede dar un pequeño paso hacia la
complejidad sin comprometer demasiadas cosas.&lt;/p&gt;
&lt;p&gt;TypeScript es un lenguaje que añade tipos de datos a JavaScript y
una serie de herramientas para análisis de código estático que
ayudan un montón.&lt;/p&gt;
&lt;p&gt;Además, usando TypeScript tenemos la facilidad de poder separar
el proyecto en diferentes archivos y tener un solo comando
para empaquetar todo y llevarlo al navegador.&lt;/p&gt;
&lt;p&gt;Por ejemplo, los archivos de código los suelo guardar en un directorio
como &lt;code&gt;src&lt;/code&gt; así:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;→ ls src/
app.ts  tsconfig.json  utils.ts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;El archivo &lt;code&gt;tsconfig.json&lt;/code&gt; simplemente describe que queremos convertir
todos esos archivos &lt;code&gt;.ts&lt;/code&gt; en un único archivo &lt;code&gt;app&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;compilerOptions&amp;quot;: {
    &amp;quot;outFile&amp;quot;: &amp;quot;../dist/app.js&amp;quot;,
    &amp;quot;sourceMap&amp;quot;: true,
    &amp;quot;target&amp;quot;: &amp;quot;es6&amp;quot;,
    &amp;quot;module&amp;quot;: &amp;quot;amd&amp;quot;,
    &amp;quot;paths&amp;quot;: {
      &amp;quot;~*&amp;quot;: [&amp;quot;./*&amp;quot;]
    }
  },
  &amp;quot;include&amp;quot;: [&amp;quot;**/*.ts&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Luego, para compilar todo, uso este comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tsc -b src
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;o si quiero compilar automáticamente ante un cambio
en alguno de los archivos de código fuente:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tsc -b src -w
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ok, igual&amp;hellip; se que suena complejo, mi idea de minimalismo en un proyecto
no consiste en deshacerse de la estructura y rechazar todas las herramientas.&lt;/p&gt;
&lt;p&gt;Mi idea de un entorno minimalista es &amp;ldquo;volar liviano&amp;rdquo;, quitando las cosas
que no aportan tanto valor y preservar aquellas que son realmente valiosas, esenciales
para trabajar en la forma que me gusta; y eso es muy subjetivo.&lt;/p&gt;
&lt;p&gt;Para mí TypeScript aporta valor, el suficiente valor para tener instalado el comando
&lt;code&gt;tsc&lt;/code&gt; de forma global (&lt;code&gt;npm install -g typescript&lt;/code&gt;) en mi equipo, y usarlo como
una herramienta más dentro de este proyecto y otros.&lt;/p&gt;
&lt;h1 id=&#34;autocompletado-con-vim&#34;&gt;Autocompletado con vim&lt;/h1&gt;
&lt;p&gt;Otra ventaja de usar TypeScript es que el propio editor de textos
puede autocompletar y detectar inconsistencias en nuestro código.&lt;/p&gt;
&lt;p&gt;No hace falta configurar algo adicional dentro del proyecto, tener
dependencias locales en un archivo &lt;code&gt;package.json&lt;/code&gt; o configurar un entorno
virtual:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/estructura-de-proyecto-minimalista/autocompletado.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Para tener este autocompletado en vim estoy utilizando una extensión
llamada &lt;a href=&#34;https://github.com/dense-analysis/ale&#34;&gt;ale&lt;/a&gt;, pero
creo que también hay otras alternativas.&lt;/p&gt;
&lt;h1 id=&#34;pero-necesito-componentes-web&#34;&gt;¡Pero necesito componentes web!&lt;/h1&gt;
&lt;p&gt;Si hay algo que adopté de usar frameworks es el concepto de componentes
web. Creo que poder construir aplicaciones pensando en pequeños componentes que
se pueden combinar entre sí es una muy buena idea.&lt;/p&gt;
&lt;p&gt;Por suerte hoy se pueden utilizar
&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&#34;&gt;componentes web&lt;/a&gt; de
forma nativa en cualquiera de los navegadores web modernos, no hace falta
usar una herramienta adicional. Incluso existen
&lt;a href=&#34;https://www.webcomponents.org/polyfills/&#34;&gt;pollyfills&lt;/a&gt; por si quieres dar
soporte a navegadores antiguos.&lt;/p&gt;
&lt;p&gt;El único desafío que encontré en usar &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&#34;&gt;web components&lt;/a&gt;
es que necesitamos escribir más código, hay menos magia, pero
aún así creo que es fácilmente abordable.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¿Y si programamos en castellano?</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-05-programar-en-castellano/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-05-programar-en-castellano/</guid>
      <description>&lt;p&gt;Tomar decisiones todo el día demanda mucha energía, incluso
cosas simples como: qué vas a almorzar, o qué nombre le vas
a poner a esa función en el código.&lt;/p&gt;
&lt;p&gt;Cada pequeña decisión te consume un poco de tiempo y energía.&lt;/p&gt;
&lt;p&gt;Por eso creo que vamos desarrollando la tendencia a responder en modo
automático, como si nos dijéramos a nosotros mismos:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Esto se hace así, siempre lo hicimos así, ni nos preguntemos por qué&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Sin embargo, creo que hay decisiones que no conviene tomarlas por
omisión, porque el resultado nos puede acompañar un par de años.&lt;/p&gt;
&lt;p&gt;Una de estas decisiones es el idioma que elegimos para escribir
código.&lt;/p&gt;
&lt;h1 id=&#34;en-qué-idioma-programamos&#34;&gt;¿En qué idioma programamos?&lt;/h1&gt;
&lt;p&gt;Cuando empezamos a programar, al menos los que hablamos castellano, tenemos
la inclinación inmediata a escribir el código en inglés, pese a que
este no es nuestro idioma nativo.&lt;/p&gt;
&lt;p&gt;Nombramos en inglés a las clases, las funciones e incluso, en algunos casos, los
archivos README y comentarios.&lt;/p&gt;
&lt;p&gt;¿Tiene algún beneficio real para nuestro proyecto programar en inglés?&lt;/p&gt;
&lt;p&gt;Hoy trabajé en un proyecto en base a especificaciones en castellano, donde
tenemos reuniones con los clientes en castellano, pero el código está
totalmente en inglés.&lt;/p&gt;
&lt;p&gt;¿Acaso el código no debería ser un reflejo de nuestra solución al dominio
del problema?&lt;/p&gt;
&lt;p&gt;Cuando se programa en inglés se añade una pequeña capa de dificultad a toda
la comunicación entre las personas del equipo. De pronto el cliente habla
del &amp;ldquo;usuario&amp;rdquo;, el programador lo llama &amp;ldquo;Profile&amp;rdquo;, y alguien
termina cargando un &lt;em&gt;Ticket&lt;/em&gt; mencionando al módulo como &amp;ldquo;perfil de usuario&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;¿Acaso no podemos tener un vocabulario en común?&lt;/p&gt;
&lt;p&gt;Cuando le mencioné esta inquietud a Ricardo, uno de los chicos que programa
con nosotros, él resumió toda la confusión de nombres con una frase
muy acertada:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nos termina pasando lo mismo que al chavo del
8 &lt;a href=&#34;https://www.youtube.com/watch?v=xUsQzKUb9rY&#34;&gt;cuando quiere vender aguas frescas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Todo se vuelve una gran confusión.&lt;/p&gt;
&lt;/blockquote&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/programar-en-castellano/aguas-frescas.jpg&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;La que parece limón, es de jamaica, pero sabe a tamarindo.&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Para mí, vale la pena conversar sobe el idioma en que elegimos escribir
software, y no decidir en modo automático.&lt;/p&gt;
&lt;p&gt;Escribir el código en español ayuda a tener un vocabulario en común, hace
más sencillo escribir documentación y hasta reduce la carga mental de trabajar
con el código.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mejorar 1% cada día</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-04-mejorar-1-por-ciento/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-04-mejorar-1-por-ciento/</guid>
      <description>&lt;p&gt;Siempre que termino de trabajar me pongo a pensar
si el día me sirvió o no. Me gusta sentir
que aprendí algo nuevo, que pude resolver un problema
o simplemente saber que no estuve perdiendo el tiempo frente
a la computadora.&lt;/p&gt;
&lt;p&gt;Sin embargo hay días donde es difícil hacer esa lectura, ya
sea porque me quedó una tarea muy aburrida por hacer o porque
algún detalle me hizo retroceder y pelear con la herramienta
en lugar de avanzar.&lt;/p&gt;
&lt;p&gt;Por ejemplo, hoy tuve que crear un script
para importar datos desde un archivo Excel y creo que
casi me duermo de aburrimiento, hice como 30 pruebas y con
cada cambio saltaba un error nuevo.&lt;/p&gt;
&lt;p&gt;Sentí que avanzaba dos pasos y luego retrocedía uno.&lt;/p&gt;
&lt;h1 id=&#34;mejorar-un-1&#34;&gt;Mejorar un 1%&lt;/h1&gt;
&lt;p&gt;Hay una consigna en el libro
&lt;a href=&#34;https://www.amazon.com/-/es/James-Clear/dp/8418118032&#34;&gt;Hábitos atómicos, de James Clear&lt;/a&gt; que
me gustó mucho. El autor sostiene que para poder lograr cambios
importantes se puede comenzar con hábitos pequeños, que
incrementen un 1% lo que haces todos los días y construir
una identidad a partir de esa práctica.&lt;/p&gt;
&lt;p&gt;Parece poco mejorar en un 1%, sin embargo la mayoría de
los logros importantes llevan varios años y lo útil de mejorar
cada día, aunque sea un 1%, es que esa mejora se acumula
día tras día.&lt;/p&gt;
&lt;p&gt;Pienso que a la hora de trabajar en sistemas esto puede
ayudar. Escribir un test, corregir documentación u ordenar
las cosas no cambia al mundo, pero el habito sistemático
de poder hacer estas pequeñas mejoras todos los días te
pueden convertir en una de esas personas que mejoran
las cosas sistemáticamente.&lt;/p&gt;
&lt;h1 id=&#34;entropía-y-deuda-técnica&#34;&gt;Entropía y deuda técnica&lt;/h1&gt;
&lt;p&gt;Creo que mejorar 1% puede ser una buena estrategia para combatir
el hecho de que muchas de nuestras herramientas y proyectos se
van desgastando con el tiempo: gradualmente los sistemas empiezan
a ser más difíciles de entender, comienzan a faltar tests, la documentación
queda obsoleta, las dependencias van envejeciendo y más.&lt;/p&gt;
&lt;p&gt;Estos pequeños detalles son invisibles, hasta que un día empezamos a llamar
al sistema &amp;ldquo;legacy&amp;rdquo;, por no decir algo peor. Sin embargo este deterioro
no ocurre de la noche a la mañana y tiene sentido pensar que la mejora
tampoco se puede lograr de la noche a la mañana.&lt;/p&gt;
&lt;p&gt;Mejorar 1% cada día parece poco, pero hoy sentí que me salvó el
día: Terminé haciendo algunas mejoras mejoras que me parecían
importantes: agregué validaciones en los scripts de importación, agregué
dos tests pequeños que faltaban, describí todas las pruebas que hice en
la importación para visibilizar mi trabajo y mejoré la descripción de varias tareas
que teníamos relevadas pobremente para encarar dentro de unos días.&lt;/p&gt;
&lt;p&gt;Si bien no parece mucho, estas pequeñas mejoras se suman a otras que hice
hace unos días y con suerte en unos meses den resultados visibles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>El regocijo de usar VIM</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-03-el-regocijo-de-usar-vim/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-03-el-regocijo-de-usar-vim/</guid>
      <description>&lt;p&gt;VIM es un editor de texto muy particular, para empezar: está
ligeramente orientado a facilitar operaciones como navegar y editar
texto en lugar de ser un editor principalmente para escribir. Esto
hace que toda la experiencia de usar la herramienta esté mediada
por este enfoque inicial.&lt;/p&gt;
&lt;p&gt;Por ejemplo, cuando ingresas en VIM, el editor espera que ingreses
comandos pulsando teclas, en lugar de trasladar esas teclas en caracteres
y colocarlas en el archivo de texto como hacen la mayoría de los
editores de texto.&lt;/p&gt;
&lt;p&gt;Esto tiene algo bueno y algo malo:&lt;/p&gt;
&lt;p&gt;Lo bueno es que tu teclado se transforma en una especie de tablero
de control que te permite hacer casi cualquier cosa de manera
muy rápida y eficiente.&lt;/p&gt;
&lt;p&gt;Lo malo es que todas esas perillas y comandos están ocultas, invisibles
hasta que sabes cómo usarlas.&lt;/p&gt;
&lt;h1 id=&#34;comandos-de-alto-nivel&#34;&gt;Comandos de alto nivel&lt;/h1&gt;
&lt;p&gt;Gran parte de las operaciones y cambios que hago en el código o
en los textos es de la forma &amp;ldquo;Quiero cambiar el contenido de este
string&amp;rdquo;, &amp;ldquo;quiero mover este tag html a un template diferente&amp;rdquo;, &amp;ldquo;Necesito
agregar otro parámetro a esta función&amp;rdquo; etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Vim tiene un lenguaje para hacer todas estas cosas, nunca te ves
obligado a hacer desplazamientos hacia arriba y abajo buscando cosas
o pulsando 20 veces &lt;code&gt;backspace&lt;/code&gt; para sustituir una cosa por otra.&lt;/p&gt;
&lt;p&gt;Por ejemplo, para cambiar el contenido de un string basta con
escribir &lt;code&gt;ci&amp;quot;&lt;/code&gt; (que se puede interpretar como &lt;strong&gt;c&lt;/strong&gt;hange &lt;strong&gt;i&lt;/strong&gt;nner &lt;strong&gt;&amp;quot;&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Algo similar ocurre con los tags html, si queremos seleccionar una
región de etiquetas podemos invocar &lt;code&gt;vit&lt;/code&gt; (&lt;strong&gt;v&lt;/strong&gt;isual select &lt;strong&gt;i&lt;/strong&gt;n &lt;strong&gt;t&lt;/strong&gt;ag)
o &lt;code&gt;vat&lt;/code&gt; (para seleccionar el tag completo, y no solo su contenido).&lt;/p&gt;
&lt;p&gt;Y esta regla básica del lenguaje sirve para construir varias combinaciones
diferentes:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/el-regocijo-de-usar-vim/lenguaje.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Descomposición de una operación de selección en vim&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Y lo más interesante, es que en el momento en que tomas práctica te
das cuenta que ni siquiera necesitas seleccionar el texto antes de hacer
algo con él.&lt;/p&gt;
&lt;p&gt;VIM me permite evitar las ceremonias antes de hacer cambios, si quiero
borrar algo no necesito seleccionarlo previamente. Por ejemplo &lt;code&gt;dap&lt;/code&gt; sirve
para borrar un párrafo entero.&lt;/p&gt;
&lt;h1 id=&#34;movimientos-rápidos&#34;&gt;Movimientos rápidos&lt;/h1&gt;
&lt;p&gt;Los movimiento del cursor también son importantes, no solo para navegar
el código, sino también para hacer ajustes rápidos.&lt;/p&gt;
&lt;p&gt;Yo uso un montón el comando &lt;code&gt;/&lt;/code&gt; y &lt;code&gt;?&lt;/code&gt; que sirven para iniciar una búsqueda
rápida y mover el cursor. Además, uso mucho &lt;code&gt;c-o&lt;/code&gt; para volver a la posición
anterior del cursor.&lt;/p&gt;
&lt;p&gt;Es muy práctico moverse así, el editor recuerda todos nuestros movimientos.&lt;/p&gt;
&lt;p&gt;Otro ejemplo, si estoy editando código Python es probable que ejecute
el comando &lt;code&gt;/def&lt;/code&gt; para ir al primer método o función de un archivo, ahí puedo
pulsar &lt;code&gt;n&lt;/code&gt; para ir al siguiente método e ir saltando entre funciones.&lt;/p&gt;
&lt;p&gt;En otros editores que no tienen un lenguaje como este lo más fácil termina
siendo usar el mouse para seleccionar zonas particulares, o pulsar muchas
veces las flechas del teclado para movernos por el código.&lt;/p&gt;
&lt;h1 id=&#34;sin-distracciones&#34;&gt;Sin distracciones&lt;/h1&gt;
&lt;p&gt;Otra cosa curiosa del editor es que su interfaz es mínima, casi todo
está disponible a unas pulsaciones de teclas y no necesita de iconos, menúes
o ventanas.&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/el-regocijo-de-usar-vim/goyo.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Vim con el plugin Goyo activo para escribir&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;A mí me resulta estéticamente atractivo, la pantalla está disponible al 100%
para lo que estoy haciendo, los caracteres se ven grandes, sin distracciones
y ninguna interrupción.&lt;/p&gt;
&lt;h1 id=&#34;vine-por-la-eficiencia-pero-me-quedé-por-la-diversión&#34;&gt;Vine por la eficiencia pero me quedé por la diversión&lt;/h1&gt;
&lt;p&gt;El momento más importante para mí al usar Vim fue cuando comprendí las
reglas básicas del lenguaje y cómo se podían componer comandos. Antes
de ese momento, me movía como loco y pulsaba muchas veces la mismas
teclas para borrar o recorrer el texto, letra por letra.&lt;/p&gt;
&lt;p&gt;Y aquí es donde creo que experimenté un &amp;ldquo;click&amp;rdquo; al momento de usar el
editor. No se si fue un &amp;ldquo;click&amp;rdquo; saludable, tal vez el &amp;ldquo;click&amp;rdquo; es el
sonido de un tornillo que se cayó o algo así&amp;hellip; pero lo cierto es
que desde ese momento comencé a disfrutar mucho de este editor.&lt;/p&gt;
&lt;p&gt;La sensación de poder expresar con pocas teclas operaciones casi a la
velocidad del pensamiento es muy atractiva, operar usando comandos
de bloques o crear macros es casi como armar rompecabezas en el aire
y verlos funcionar en la pantalla.&lt;/p&gt;
&lt;p&gt;Es cierto que este enfoque hace que seas más rápido a la hora de hacer
cambios, aunque para mí es más importante sentir que el proceso de usar
la herramienta es desafiante y se aprende algo nuevo cada tanto.&lt;/p&gt;
&lt;p&gt;Me sigue sorprendiendo que después de tantos años siga
siendo divertido usar este editor para trabajar todos los días.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acerca de ser intencional</title>
      <link>https://www.examplelab.com.ar/posts/2021-02-02-acerca-de-ser-intencional/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-02-02-acerca-de-ser-intencional/</guid>
      <description>&lt;p&gt;Algo valioso de tener la oportunidad de leer libros e indagar en
las ideas de otras personas es poder encontrarse con palabras que
describen exactamente lo que que antes era invisible.&lt;/p&gt;
&lt;p&gt;Este es el caso de la palabra &amp;ldquo;intención&amp;rdquo; para mí.&lt;/p&gt;
&lt;p&gt;Al principio del año pasado pude leer el libro
&lt;a href=&#34;https://www.calnewport.com/books/digital-minimalism/&#34;&gt;Digital Minimalism&lt;/a&gt;
en donde
se menciona este concepto de &amp;ldquo;intención&amp;rdquo; como uno de los pilares a la hora de
pensar en Internet como una herramienta a nuestro servicio y todo lo
que trae aparejado para nuestra dieta de información.&lt;/p&gt;
&lt;p&gt;Resulta que desde hace unos años Internet se empezó a transformar
en un mercado de atención, en donde es tan conveniente dejarse llevar
de la mano por las recomendaciones que es fácil
dejar de poner atención en lo que realmente queremos hacer.&lt;/p&gt;
&lt;p&gt;Para mí un buen ejemplo es Youtube: Cuando abro este sitio no suelo
tener en claro qué quiero ver, me resulta más fácil entrar y explorar, en
lugar de ponerme a pensar dos minutos: &amp;ldquo;qué me interesa realmente aprender acá&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Para darte un ejemplo, así es como se ve Youtube si ingreso con mi
perfil de usuario:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/intencion/youtube.jpg&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;¡Tantas opciones!&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Y aquí es donde creo que hay un problema. Bueno, en realidad dos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Por un lado, la interfaz me guía en cualquier
dirección, puedo terminar viendo horas de opiniones sobre teclados mecánicos
que son imposibles de comprar para mí o incluso cómo un artista pixelart me da
miles de consejos sobre iluminación que no me sirven para nada porque yo ni siquiera
me dedico a dibujar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Otro problema es que cualquier tema parece atractivo con tan solo
ver las miniaturas, casi que dan ganas de hacer click se pura curiosidad en videos
que a los dos minutos voy a dejar de ver&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¿Notaste la cara de asombro que tiene este muchacho?!&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/intencion/cara.jpg&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;¿Será que es tan fabuloso ese teclado?!! click!!&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Mucho del contenido de Youtube es completamente irrelevante, pero está tan
bien diseñado que ataca nuestra curiosidad, genera ansiedad y montones de clicks.&lt;/p&gt;
&lt;p&gt;Creo que este tipo de plataformas es tan conveniente que se parece a tener una
bolsa de caramelos dulces sobre la mesa, es imposible resistirse.&lt;/p&gt;
&lt;h1 id=&#34;sobre-ser-intencional&#34;&gt;Sobre ser intencional&lt;/h1&gt;
&lt;p&gt;Ser &amp;ldquo;intencional&amp;rdquo; sobre aquello que queremos hacer es muy valioso, te
permite hacer foco en las cosas importantes y no pasar horas en piloto automático
desperdiciando el tiempo.&lt;/p&gt;
&lt;p&gt;También es una habilidad que se puede desarrollar, no alcanza con saber que está ahí,
hay que ejercitarla y volverse bueno practicándola todos los días.&lt;/p&gt;
&lt;p&gt;Creo que es una de las cosas más interesantes que tomé de
&lt;a href=&#34;https://www.calnewport.com/books/digital-minimalism/&#34;&gt;Digital Minimalism&lt;/a&gt; es que
casi todas las personas tomamos decisiones bastante buenas cuando ponemos nuestras
intenciones en primer lugar a la hora de usar herramientas de información.&lt;/p&gt;
&lt;p&gt;Las recomendaciones automáticas de Youtube, Netflix, Spotify o incluso los portales
de noticias no ayudan, van en el sentido opuesto a nuestra intencionalidad.&lt;/p&gt;
&lt;h1 id=&#34;volviendo-a-youtube&#34;&gt;Volviendo a Youtube&lt;/h1&gt;
&lt;p&gt;Un truco interesante que encontré para que Youtube respete mi intencionalidad
es un pequeño Addon llamado
&lt;a href=&#34;https://chrome.google.com/webstore/detail/remove-youtube-recommende/khncfooichmfjbepaaaebmommgaepoid&#34;&gt;remove recomendations&lt;/a&gt;
(que también está disponible para &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/youtube-recommended-videos/&#34;&gt;firefox&lt;/a&gt;)&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/intencion/sin-recomendaciones.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Sin recomendaciones&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;De esta forma, ya no me invade la curiosidad ni la novedad de los contenidos, youtube
ya no me invita a dar un recorrido de la mano por la plataforma, mi intencionalidad está en
primer lugar.&lt;/p&gt;
&lt;p&gt;Así, me veo obligado a preguntar: &amp;ldquo;¿qué quiero hacer?&amp;quot;; y si no tengo una respuesta interesante
que me motive a hacer una búsqueda me voy a hacer algo más productivo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coleccionado artículos web</title>
      <link>https://www.examplelab.com.ar/posts/2021-01-29-coleccionando-articulos/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-01-29-coleccionando-articulos/</guid>
      <description>&lt;p&gt;Hace unos meses vi un artículo llamado &lt;a href=&#34;https://jeffhuang.com/designed_to_last/&#34;&gt;This Page is Designed to Last&lt;/a&gt;
que me hizo pensar en lo efímera que es la web.&lt;/p&gt;
&lt;p&gt;El artículo describe cómo va cambiando la web con los años: y como los
artículos, foros, tutoriales y recursos dejan de existir de un día para otro.&lt;/p&gt;
&lt;p&gt;Y esto no es algo que solo afecta a quienes publican contenido en la web, también afecta
a quienes leemos, aprendemos y queremos compartir lo que nos gusta de la web con otras
personas:&lt;/p&gt;
&lt;p&gt;Imagina que tenes un link a un artículo que te impactó, mejoró tu vida profesional y
expresa algo tan valioso para vos que quisieras preservar y recomendar a tus amigos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://steve-yegge.blogspot.com/2008/09/programmings-dirtiest-little-secret.html&#34;&gt;https://steve-yegge.blogspot.com/2008/09/programmings-dirtiest-little-secret.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¿Cuántos años seguirá funcionando ese link?, ¿qué tal si el dueño de ese blog pierde el interés en
su blog?, ¿qué pasará si la plataforma blogspot.com deja de existir como ocurrió con &lt;a href=&#34;https://es.wikipedia.org/wiki/GeoCities&#34;&gt;geocities&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Lo más probable es que pase esto:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/coleccionando-articulos/404.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Lo que antes era un baúl de sabiduría&amp;hellip;&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;De hecho, esa captura de pantalla no es casual, el link que intenté abrir corresponde
a un proyecto de traducción enorme en donde había mucho conocimiento y textos
que fueron muy importantes para mí. &lt;sup&gt;1&lt;/sup&gt;&lt;/p&gt;
&lt;h1 id=&#34;una-solución-descargar-y-guardar&#34;&gt;Una solución: Descargar y guardar&lt;/h1&gt;
&lt;p&gt;Creo que una forma de cuidar y preservar estos recursos es descargar y guardar, tan simple como eso&amp;hellip; los dominios pueden vencer, los servidores se pueden apagar o cambiar de lugar, sin embargo una copia del contenido en nuestro poder está&amp;hellip; bueno.. en nuestro poder.&lt;/p&gt;
&lt;p&gt;La copia que podemos hacer de un artículo no tiene por qué tener imágenes, cabeceras
o el estilo del sitio original; se puede tener un buen archivo de materiales
descargando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 - El texto del artículo, con títulos y párrafos.&lt;/li&gt;
&lt;li&gt;2 - El nombre del artículo&lt;/li&gt;
&lt;li&gt;3 - (opcional) Un detalle con la fecha en que se hizo el archivo.&lt;/li&gt;
&lt;li&gt;4 - (opcional) La url original para consultar la versión original, si es que aún existe.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por ejemplo, el artículo que cité antes se podría descargar y conservar para que
se vea así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/coleccionando-articulos/comparativa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Para mí es mucho más fácil preservar un histórico de esta forma, además me da
la opción de quitar comentarios o secciones extra, solo guardo el texto que realmente
me interesa conservar.&lt;/p&gt;
&lt;h1 id=&#34;automatizando-el-proceso&#34;&gt;Automatizando el proceso&lt;/h1&gt;
&lt;p&gt;Descargar un artículo directamente con el navegador es fácil, sin embargo mi intención
no es solo descar sino almacenar, clasificar y crear una buena colección
de artículos que luego pueda compartir directamente desde mi blog.&lt;/p&gt;
&lt;p&gt;Para eso hice una nueva página en mi blog llamada &lt;a href=&#34;https://www.examplelab.com.ar/links&#34;&gt;&amp;ldquo;links&amp;rdquo;&lt;/a&gt;, similar a como
hace &lt;a href=&#34;https://osiux.com/index.html&#34;&gt;Osiux en su blog&lt;/a&gt;, en donde voy a colocar todos
los artículos descargados.&lt;/p&gt;
&lt;p&gt;Además, para hacer más sencillo el proceso armé un script en python
que me permite agregar páginas en ese archivo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hugoruscitti/dotfiles/blob/master/bin/descargar&#34;&gt;código del script descargar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para usar este script simplemente hay que ejecutar el siguiente comando
en una consola:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./descargar URL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;El script se encarga de descargar el artículo, lo convierte en markdown, agrega
un link dentro de &lt;a href=&#34;https://www.examplelab.com.ar/links&#34;&gt;&amp;ldquo;links.md&amp;rdquo;&lt;/a&gt; y deja todo listo para que puedas revisar los
archivos y volver a subir el blog.&lt;/p&gt;
&lt;h3 id=&#34;notas&#34;&gt;Notas&lt;/h3&gt;
&lt;p&gt;1 - Puede muy sonar dramático, sin embargo en este caso puntual los artículos de Joel siguen existiendo &lt;a href=&#34;https://web.archive.org/web/20170505143403/http://local.joelonsoftware.com/mediawiki/index.php/Espa%C3%B1ol&#34;&gt;gracias a una copia&lt;/a&gt; que
realizó el proyecto &lt;a href=&#34;https://archive.org/&#34;&gt;Internet Archive&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Falacias, falacias por todos lados</title>
      <link>https://www.examplelab.com.ar/posts/2021-01-27-falacias/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-01-27-falacias/</guid>
      <description>&lt;p&gt;No soy bueno argumentando, de hecho, en muchas discusiones
me siento frustrado al sentir que no puedo dar a entender mi punto
de vista &amp;hellip; Y alguna vez, incluso sin darme cuenta, me han hecho notar
que malinterpreté argumentos de otras personas y caí en alguna de las
falacias más conocidas.&lt;/p&gt;
&lt;p&gt;Hoy recordé una de esas conversaciones, una especie de discusión sobre
tests y calidad de software que terminaron en nada.&lt;/p&gt;
&lt;p&gt;En aquella conversación, yo sentía que tenía la razón, mientras que la otra
persona imaginó que él tenía razón también; y como te podrás imaginar el resultado
de todo eso es fue que ninguno de los dos aprendió nada&amp;hellip; es una lástima que
algunas conversaciones técnicas terminen en la nada&amp;hellip;&lt;/p&gt;
&lt;p&gt;Recordar aquella conversación me hizo pensar en algo que no conocía en
aquel momento: Existen una serie de errores de razonamiento llamados
&amp;ldquo;falacias lógicas&amp;rdquo;, razonamientos que a simple
vista parecen ciertos, lógicos y razonables, pero que esconden un error
profundo o son simplemente falsos.&lt;/p&gt;
&lt;p&gt;Estas falacias están en todas partes, ya sea que nos demos cuenta o no, es
común caer en una de estas &amp;ldquo;trampas&amp;rdquo; lógicas cuando estamos conversando o intentando
argumentar algún punto.&lt;/p&gt;
&lt;p&gt;Lo malo de desconocer las falacias es que podés quedar como un tonto si caes
en una de ellas en medio de un argumento, o lo que es peor, la conversación
podría terminar en nada porque el tema se vuelve confuso o los puntos
de vista se polarizan.&lt;/p&gt;
&lt;h2 id=&#34;dos-falacias-que-veo-en-tecnología&#34;&gt;Dos falacias que veo en tecnología&lt;/h2&gt;
&lt;p&gt;No me siento muy capacitado para profundizar sobre falacias en general, apenas
estoy investigando y aprendiendo sobre ellas. Incluso vi que hay
&lt;a href=&#34;https://bookofbadarguments.com/es/?view=allpages&#34;&gt;un libro hermoso&lt;/a&gt; acerca de
falacias ilustradas y con ejemplos muy claros.&lt;/p&gt;
&lt;p&gt;Sin embargo me gustaría mencionar alguna las falacias más comunes que veo
en nuestro oficio, y reflexionar sobre cómo generar mejores argumentos y
conversaciones libres de falacias.&lt;/p&gt;
&lt;h1 id=&#34;falacia-del-falso-dilema&#34;&gt;Falacia del falso dilema&lt;/h1&gt;
&lt;p&gt;Una falacia muy común a la hora de hablar de tecnología consiste en
limitar las opciones disponibles, sin considerar otras. Quien comete esta
falacia suele presentar dos opciones y si rechazamos una de ellas, casi da por
sentado que estamos eligiendo la otra.&lt;/p&gt;
&lt;p&gt;Por ejemplo, evaluemos estos razonamientos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Usemos un framework de terceros, si no vamos a terminar escribiendo nuestro propio framework.&lt;/li&gt;
&lt;li&gt;O usamos React o vamos directamente con Angular.&lt;/li&gt;
&lt;li&gt;Tenemos que usar programación funcional y estado inmutable, si no el código que maneja estado va a ser muy complejo e inmanejable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Claro, en cualquiera de estos ejemplos se presentan dos opciones como las únicas
a considerar cuando en realidad podríamos considerar otras completamente válidas.&lt;/p&gt;
&lt;p&gt;Un ejemplo que me llama la atención se ve en el sitio web de EmberJS:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/falacias/baterias.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Baterias incluidas o lo vas a tener que armar vos mismo&amp;hellip;&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Me gusta este ejemplo porque va en la línea del razonamiento &amp;ldquo;o usamos este framework o vamos a tener
que armarlo todo nosotros mismos&amp;rdquo;. Cuando en realidad, no usar un framework no necesariamente
te obliga a escribir uno propio, ¡no todas las personas viven de hacer frameworks!, hay otras
opciones válidas como usar bibliotecas o encarar una arquitectura modesta, sin necesidad de
generalizarla ni pretender reutilizarla en otros proyectos.&lt;/p&gt;
&lt;p&gt;Creo que esto sucede muchas veces de forma involuntaria, como programadores casi
siempre intentamos limitar las opciones y tomar conclusiones rápidas; es mucho
más sencillo elegir así.&lt;/p&gt;
&lt;h1 id=&#34;falacia-strawman&#34;&gt;Falacia &amp;ldquo;Strawman&amp;rdquo;&lt;/h1&gt;
&lt;p&gt;Esta falacia se suele ver cuando los debates &amp;ldquo;se calientan&amp;rdquo; o alguna persona
se siente emocionalmente afectada&amp;hellip; todo esto lo digo en tercera persona jeje, pero
es lo que suele pasarme a mí cuando se habla de algo que me apasiona.&lt;/p&gt;
&lt;p&gt;Alguien podría argumentar: &amp;ldquo;Necesitamos reducir el número de dependencias que estamos
usando en este proyecto, se está volviendo tedioso mantener actualizado el entorno a
la última versión&amp;rdquo; mientras que otra persona podría usar la falacia y argumentar
&amp;ldquo;¡Ah, pero sería una locura reinventar la rueda y escribir todo ese código nosotros
mismos como estás proponiendo!&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;El problema en este ejemplo es que la persona no está proponiendo reescribir
todo desde cero ni reinventar nada&amp;hellip; solo está proponiendo reducir la cantidad
de dependencias.&lt;/p&gt;
&lt;p&gt;Esta falacia me parece una de las más importantes, porque hace que algunas
conversaciones se vuelvan completamente inservibles. Imagina cuantas
cosas interesantes se podrían hacer si evitamos caer en esa falacia. ¿Qué tal
si atacamos el problema de &amp;ldquo;actualizar&amp;rdquo; nuestro software de otra forma?, ¿El
problema realmente son las dependencias?, ¿Qué otras estrategias podemos
utilizar para resolver este problema?, ¿Hay algo que podamos aprender
para encarar este tipo de problemas?&lt;/p&gt;
&lt;h1 id=&#34;apelar-a-la-autoridad-o-popularidad&#34;&gt;Apelar a la autoridad o popularidad&lt;/h1&gt;
&lt;p&gt;La falacia de apelar a la autoridad o popularidad suele aparecer
cuando se intenta justificar que una tecnología es &amp;ldquo;la ideal&amp;rdquo; mediante
argumentos como este:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Personas más inteligentes que nosotros lo diseñaron así, deben estar en lo cierto.&lt;/li&gt;
&lt;li&gt;Esta biblioteca tiene 2000 estrellas en github, deberíamos usarla en lugar de la otra.&lt;/li&gt;
&lt;li&gt;Si Facebook y Google promueven microservicios nosotros deberíamos alinearnos con eso también.&lt;/li&gt;
&lt;li&gt;Tenemos que diseñar pensando en escalar, es indispensable en nuestra industria porque las startups líderes lo hacen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Las herramientas que promueven las empresas más grandes o innovadoras
pueden ser muy interesantes, pero no por eso van a ser las mejores
herramientas para nosotros.&lt;/p&gt;
&lt;p&gt;Algo similar ocurre con la popularidad, no siempre alcanza para decir
que alguna decisión es la correcta.&lt;/p&gt;
&lt;h1 id=&#34;qué-podemos-aprender-de-estas-falacias&#34;&gt;¿Qué podemos aprender de estas falacias?&lt;/h1&gt;
&lt;p&gt;Conocer estas falacias y poder quitarlas de nuestro razonamiento hace que las
conversaciones se vuelvan mucho más enriquecedoras, creo que aprender acerca de
ellas nos ayuda a detectarlas en nuestros argumentos y a comprender el punto de los
demás.&lt;/p&gt;
&lt;p&gt;Incluso un argumento válido queda entorpecido si se intenta defender con
una falacia cometida por accidente. En la mayoría de las conversaciones
técnicas que terminaron en la nada me pasó algo como eso.&lt;/p&gt;
&lt;p&gt;El falso dilema más grande de todos es que &amp;ldquo;las discusiones se ganan o se pierden&amp;rdquo;, ¿no?.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Haciendo un Remix del juego Ceferino</title>
      <link>https://www.examplelab.com.ar/posts/2021-01-25-remix-de-ceferino/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2021-01-25-remix-de-ceferino/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://losersjuegos.com.ar/juegos/ceferino&#34;&gt;Don Ceferino Hazaña&lt;/a&gt; es uno de los
primeros juegos que hicimos con Walter Velazquez allá por el año 2004:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/capturas.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Creo que fue uno de los juegos a los que más tiempo y ganas le dedicamos, yo
apenas estaba aprendiendo a programar así que me costó el triple de lo que
esperaba al principio. Fue una de las primeras estimaciones &amp;ldquo;fallidas&amp;rdquo; de mi
vida, imaginé que el juego completo se podría hacer en &amp;ldquo;un par de semanas&amp;rdquo;, y
casi estuvimos un año entero haciéndolo :P&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/piezas.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Wally armaba los sprites separados por piezas en Animator Pro&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;También fue uno de los primeros proyectos que pudimos empezar
y terminar completos; no es fácil conservar el entusiasmo cuando
el desarrollo de un proyecto se extiende por tanto tiempo.&lt;/p&gt;
&lt;p&gt;Sin embargo, al juego le guardo muchísimo cariño, y cuando lo recordé
y quise jugarlo, ya no era nada fácil recompilarlo y jugar.&lt;/p&gt;
&lt;p&gt;Así que se me
ocurrió traerlo al futuro, crear una versión renovada del juego lo más
parecida a la original pero que funcione directamente en el navegador.&lt;/p&gt;
&lt;p&gt;Además, me pareció un buen experimento hacerlo completamente en
&lt;a href=&#34;https://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;, así podría poner a prueba la
herramienta y ver qué mejoras surgían en el camino.&lt;/p&gt;
&lt;h1 id=&#34;primeras-pruebas&#34;&gt;Primeras pruebas&lt;/h1&gt;
&lt;p&gt;Los movimientos básicos del personaje fueron la parte más fácil de hacer,
pilas tiene un editor de animaciones que es muy práctico, no hace falta
que las imágenes de los personajes estén en una grilla sino que se pueden
incorporar por separado:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/animacion.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Editor de animaciones de Pilas&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Además, hay algunos conceptos que aprendí desde que empecé a hacer
pilas que en su momento no conocía. Ahora casi siempre que hago
que los personajes puedan detectar suelos o colisiones suelo usar
lasers (o raycasts):&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/lasers.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Ceferino tiene dos lasers para detectar colisiones con el suelo&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Estos lasers los incorporé a pilas hace unos meses, pero los venía
usando en otro motor de juegos llamado Unity hace algunos años. Hacer
juegos sin estos lasers era mucho más difícil cuando hicimos el Ceferino
original.&lt;/p&gt;
&lt;h1 id=&#34;armando-todo-por-separado&#34;&gt;Armando todo por separado&lt;/h1&gt;
&lt;p&gt;Otra cosa que me ayudó un montón al momento de hacer
esta nueva versión fue poder trabajar en los actores
del juego por separado.&lt;/p&gt;
&lt;p&gt;El protagonista lo compuse en una escena, los enemigos
del nivel en otra y así.&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/escena-de-enemigos.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Los enemigos en su propia escena&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Y como estas escenas nunca la ve el jugador, funcionan como una paleta de
actores personalizados.&lt;/p&gt;
&lt;p&gt;Este es otro ejemplo, para armar el escenario hice pequeños actores que representan todos
los elementos que se pueden ver en la pantalla. Pude trabajar sobre cada uno de estos
actores y despreocuparme por los enemigos o el protagonista, cada vez que quería mejorar
alguno de estos bloques abría la escena en donde estaban estos y simplemente mejoraba
su código o alguna propiedad:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/bloques.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Todos los actores que se utilizan para crear mapas&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;h1 id=&#34;adaptando-los-niveles&#34;&gt;Adaptando los niveles&lt;/h1&gt;
&lt;p&gt;El juego original tenía 30 niveles, y como mi intención era hacer una versión
lo más fiel a la original, me propuse adaptar cada uno de los niveles originales.&lt;/p&gt;
&lt;p&gt;Al principio imaginé copiarlos uno a uno, ya que el formato era muy diferente. Los
niveles originales estaban en formato binario, que eran mucho más fáciles de crear y
cargar en la versión original, mientras que los niveles para
la versión nueva de pilas tenían que estar en formato texto (&lt;a href=&#34;https://app.pilas-engine.com.ar/#/manual?seccion=mapas&#34;&gt;como se
describe en el manual&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Luego, probando el juego original y revisando los niveles me dí cuenta que 30
niveles no es poco, ¡y qué aburrido se veía copiar uno a uno los niveles!.&lt;/p&gt;
&lt;p&gt;Así que me propuse editar el código del juego original para que me convirtiera los
niveles a texto. Lo hice de esta forma: tomé una virtual de linux, bajé
el código fuente del juego original, edité el código y lo volví a compilar.&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/linux.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;El editor de niveles de ceferino corriendo en una máquina virtual&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Me llevó como 2 horas encontrar en el código dónde se cargaban los niveles, pero una
vez que lo encontré esto lo demás fue muy fácil. Terminé cambiando el código del editor de
niveles que había hecho para la versión original e imprimiendo todo el mapa en consola
así:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/niveles.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Nivel pasado a texto&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;El texto de cada nivel no era exactamente lo que podía cargar dentro de la versión
nueva de pilas, pero por lo menos era texto, así que lo podía leer con algún script
y convertir a lo que quisiera.&lt;/p&gt;
&lt;p&gt;Así que armé un script en python que convertía esos números en identificadores de bloques
y los copié en el editor de pilas:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/nivel.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Nivel como mapa dentro de pilas&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;El formato de niveles de la versión nueva de pilas es un poco raro a simple
vista, pero es super útil. Cada letra que aparece en el mapa
representa un actor.&lt;/p&gt;
&lt;p&gt;Pilas sabe a qué actor corresponde cada letra mediante este diccionario:&lt;/p&gt;

  &lt;figure class=&#34;flex flex-column items-center&#34;&gt;
    &lt;img src=&#34;https://www.examplelab.com.ar/images/2021/ceferino/mapa.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Diccionario para componer el nivel&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;y como ese diccionario es configurable, resulta muy flexible, se pueden agregar
tipos de actores fácilmente y realizar ajustes rápidos.&lt;/p&gt;
&lt;h1 id=&#34;ideas-a-futuro&#34;&gt;Ideas a futuro&lt;/h1&gt;
&lt;p&gt;Me quedé con ganas de recuperar varios juegos de aquellos años, incluso
habíamos hecho &lt;a href=&#34;http://losersjuegos.com.ar/juegos&#34;&gt;juegos con DIV&lt;/a&gt; y que
ahora son casi imposibles de ejecutar en una computadora nueva sin usar
un emulador de ms-dos.&lt;/p&gt;
&lt;p&gt;Me parece una buena idea recuperar esos juegos, no solo por los juegos
en sí, sino porque me despiertan muchos recuerdos y ganas de seguir
aprendiendo sobre videojuegos.&lt;/p&gt;
&lt;p&gt;¡Hasta el próximo post!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Volviendo a jugar Doom</title>
      <link>https://www.examplelab.com.ar/posts/2020-08-25-doom/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2020-08-25-doom/</guid>
      <description>&lt;p&gt;Volví a jugar al juego Doom después de casi 25 años y la experiencia fue fenomenal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/doom/title.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;No solo pude experimentar la nostalgia de volver disfrutar un videojuego que me
encantaba de chico, volver a escuchar los mismos sonidos, los gráficos
pixelados y recordar niveles; también me volví a encontrar con un gran juego
perfectamente diseñado.&lt;/p&gt;
&lt;p&gt;¿Qué lo hace un gran juego? ¿Por qué vale la pena volver a jugarlo en 2020?&lt;/p&gt;
&lt;h2 id=&#34;el-doom-clásico&#34;&gt;El Doom clásico&lt;/h2&gt;
&lt;p&gt;Doom era espectacular a primera vista porque no había nada igual en aquellos
años… el juego combinaba muy bien los gráficos en 2D y 3D: los enemigos
tenían rostro, jadeaban indicando que estaban al asecho y te permitía usar
distintas técnicas para combatirlos, y si el juego te resultaba muy difícil
podías ir guardando la partida poco a poco.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/doom/url.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Los enemigos tenían la resistencia justa, con un poco de práctica los podías
eliminar con unos pocos disparos sin sufrir demasiado y evitando contacto con
ellos.&lt;/p&gt;
&lt;p&gt;A cada enemigo se lo combatía de manera diferente, pero en general los
comportamientos se parecían entre sí. Los enemigos estaban esperando, y cuando
se percataban que estabas ahí se acercaban a vos disparando, lanzando bolas de
fuego o intentando morderte. Una estrategia muy útil cuando estabas al borde de
morir era alejarse y esperarlos en un lugar seguro.&lt;/p&gt;
&lt;p&gt;Creo que a los enemigos que más veía en el juego era a los Imp, estos
personajes marrones que lanzaban bolas de fuegos que podías esquivar hacia los
costados.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/doom/imp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Estos no eran los enemigos más difíciles, sin embargo cuando estos enemigos
aparecían en manada junto a otros enemigos con armas de fuego la cosa
se ponía complicada…&lt;/p&gt;
&lt;p&gt;Otra cosa alucinante del juego, era que los enemigos se podían disparar entre
ellos, y a veces en medio de una escena de acción podías verlos luchando entre
sí, como si estuvieran en una riña interna porque alguien disparó
accidentalmente.&lt;/p&gt;
&lt;p&gt;Algo que también añadía variedad y diversión eran los barriles explosivos. El
juego tenía varios barriles distribuidos en los escenarios, así que en plena
batalla contra los enemigos tal vez tenías la suerte de poder dispararle a un
barril para que explote y esa explosión reviente a todos los enemigos cercanos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/doom/barriles.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero lo que sin dudas hacía a Doom especial eran sus MODS. Algo que alargaba la
vida del juego, tanto para quienes jugábamos como para quienes querían
construir sus propios niveles.&lt;/p&gt;
&lt;h2 id=&#34;doom-en-la-actualidad&#34;&gt;Doom en la actualidad&lt;/h2&gt;
&lt;p&gt;Para mi sorpresa, el hecho de que doom se pueda expandir mediante mods y
motores mejorados, hizo que el juego se mantenga vigente todos
estos años.&lt;/p&gt;
&lt;p&gt;Por ejemplo, esta semana estuve jugando un montón a un mod llamado “Brutal
Doom”:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iPyq0jFgVjI&#34;&gt;Brutal Doom v21 Gold Release Trailer - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En este mod las armas son más rápidas, los enemigos tienen habilidades nuevas
como saltar o esconderse, y hay montones de efectos agregados como humo,
sangre, partículas etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/doom/deathmatch.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Además, Brutal Doom te permite volver a jugar los mismos niveles clásicos de
Doom 2  de manera renovada.&lt;/p&gt;
&lt;h1 id=&#34;cómo-jugar-a-doom-hoy&#34;&gt;¿Cómo jugar a Doom hoy?&lt;/h1&gt;
&lt;p&gt;Hoy existen reediciones del clásico doom para varias plataformas, Doom está en
&lt;a href=&#34;https://store.steampowered.com/sub/18397/&#34;&gt;Steam&lt;/a&gt;,
&lt;a href=&#34;https://www.nintendo.com/games/detail/doom-ii-classic-switch/&#34;&gt;Switch&lt;/a&gt; pero
también se puede jugar con motores alternativos como GZDoom, PRBoom y
Zandronum.&lt;/p&gt;
&lt;p&gt;Zandronum es el que más me impresionó, apareció en 2005 con un montón de
mejoras gráficas y soporte para jugar online hasta 64 jugadores.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5mLDugjh0Ro&#34;&gt;Welcome To Zandronum! - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Además, es multi plataforma (linux, osx, windows) e incluye una herramienta
llamada &lt;a href=&#34;https://doomseeker.drdteam.org&#34;&gt;Doomseeker&lt;/a&gt; para encontrar salas y
jugar online:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/doom/doomseek.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;recomendaciones&#34;&gt;Recomendaciones&lt;/h1&gt;
&lt;p&gt;Si te dieron ganas de jugar Doom te recomiendo descargar Zandronum, bajar
algunos .wad y dedicarle unas cuantas horas.&lt;/p&gt;
&lt;p&gt;Doom no solo es un gran juego, también logró perdurar todos estos años
volviéndose cada vez mejor, parece mentira que ya pasaron más de 25 años desde
su lanzamiento y aun así vale la pena jugar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tortugas en el tiempo</title>
      <link>https://www.examplelab.com.ar/posts/2020-08-08-tortugas-en-el-tiempo/</link>
      <pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2020-08-08-tortugas-en-el-tiempo/</guid>
      <description>&lt;p&gt;En este artículo describo como realicé un pequeño editor de código que permite ejecutar código para
dibujar en pantalla, recreando parte de la clásica tortuga de Logo e investigando sobre ideas de
aprendizaje y código.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/inicio.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Podes ver el proyecto aquí:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hugoruscitti.github.io/tortugas-en-el-tiempo&#34;&gt;https://hugoruscitti.github.io/tortugas-en-el-tiempo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;
video {
  width: 100%;
  border: 1px solid gray;
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
&lt;/style&gt;
&lt;h2 id=&#34;motivación&#34;&gt;Motivación&lt;/h2&gt;
&lt;p&gt;Hace algunos años vi una charla llamada &lt;a href=&#34;https://youtu.be/e7QYMgSk9s0&#34;&gt;“Inventing on Principle”&lt;/a&gt;
que me dejó con varias inquietudes a la hora de pensar sobre cómo programamos computadoras y
pensamos acerca del código.&lt;/p&gt;
&lt;p&gt;En esta charla Bret Victor comienza mencionando una situación típica de nuestra profesión:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Así es como programamos: escribes un montón de código en un editor de textos, tratas de imaginar
en tu cabeza que hará cada linea de código. Luego lo compilas, ejecutas y algo sucede. Pero si
algo sale mal, tienes que ir devuelta al código.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;y sigue con una frase que me quedó resonando en la cabeza:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;La mayoría del tiempo estamos frente al código, trabajando a ciegas en un editor de texto, sin tener una conexión con lo que estamos haciendo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Y da un ejemplo adicional:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/034947C6-A4E5-4B97-9633-E80CDE1C5ABF.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[…] La búsqueda binaria se ve así. Desde mi perspectiva, aquí no se puede ver nada. Veo la
variable “array” pero no veo su contenido. Entonces, para escribir código de esta manera, tienes
que imaginarte un array en tu cabeza, y esencialmente debes jugar a ser una computadora, debes
simular en tu cabeza lo que cada líneas de código haría en la computadora. Y las personas que
consideramos hábiles desarrolladores de software son solamente aquellas personas que son hábiles
jugando a ser computadoras.&lt;/p&gt;
&lt;p&gt;Pero para escribir código en la computadora… ¿Por qué simulamos lo
que haría la computadora en nuestra mente?, ¿Porqué simplemente no lo hace la computadora y nos
muestra?&lt;/p&gt;
&lt;p&gt;(&lt;a href=&#34;https://youtu.be/e7QYMgSk9s0?t=1043&#34;&gt;https://youtu.be/e7QYMgSk9s0?t=1043&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Luego de ver esta charla me quedé con una sensación incómoda con respecto al código y cómo
programamos. Pienso que estas ideas son una suerte punto de partida para pensar y diseñar formas
nuevas de programación.&lt;/p&gt;
&lt;p&gt;¿Cómo podríamos diseñar una interfaz que acompañe a desarrollares a entender sus programas?, ¿Qué
elementos de un programa podemos hacer “visibles” a los usuarios?&lt;/p&gt;
&lt;h2 id=&#34;pensando-en-un-proyecto&#34;&gt;Pensando en un proyecto&lt;/h2&gt;
&lt;p&gt;Pienso que desde que vi esa charla comencé a ver las herramienta de otra forma, re diseñe
&lt;a href=&#34;https://www.pilas-engine.com.ar&#34;&gt;Pilas&lt;/a&gt; “dando vueltas” muchas cosas, y hasta hoy sigo imaginando cómo
resolver los problemas que plantea Bret Victor.&lt;/p&gt;
&lt;p&gt;No es sencillo abordar todo lo que plantea en su charla, hacer visible el contexto de un programa y
permitirle a las personas manipular directamente sus programas es muy desafiante, y se requiere
práctica.&lt;/p&gt;
&lt;p&gt;Así que en búsqueda de tener algo de práctica con estas ideas y como excusa para volver a leer
textos como &lt;a href=&#34;http://worrydream.com/LearnableProgramming/&#34;&gt;Learnable Programming&lt;/a&gt; me propuse crear
una herramienta de programación similar a
&lt;a href=&#34;https://es.wikipedia.org/wiki/Logo_(lenguaje_de_programaci%C3%B3n)&#34;&gt;logo&lt;/a&gt;, pero mucho más acotado, y
con algunas mejoras como el resaltado de código, la posibilidad de realizar una depuración paso a
paso y algunas cosas más.&lt;/p&gt;
&lt;h2 id=&#34;qué-permite-hacer-esta-herramienta&#34;&gt;¿Qué permite hacer esta herramienta?&lt;/h2&gt;
&lt;p&gt;La herramienta te permite realizar dibujos controlando la tortuga que aparece en pantalla usando
código.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/E9158063-9158-4D4E-9B95-21A084A572F4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La tortuga solo entiende unas pocas palabras, como “avanzar”, “girarDerecha” o “cuadrado”; pero se
le pueden enseñar más palabras creando funciones nuevas.&lt;/p&gt;
&lt;p&gt;Sin embargo, lo interesante es que cada una de las acciones que realiza la tortuga se pueden
visualizar progresivamente, mientras el código se resalta para mostrar qué linea de código está
siendo ejecutada.&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/ejecucion.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/ejecucion.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;p&gt;Además, una vez que termina la ejecución del programa el usuario puede pulsar el botón “pausa” y
revisar la ejecución del programa retrocediendo o avanzando en el tiempo:&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/depuracion.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/depuracion.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;h2 id=&#34;bucle-principal&#34;&gt;Bucle principal&lt;/h2&gt;
&lt;p&gt;Una característica que me interesaba re-crear para las personas que usen esta herramienta es poder
ver cómo se produce el dibujo de manera gradual, como si estuviera dibujando sobre una pizarra con
un marcador:&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/screencast.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/screencast.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;p&gt;Obviamente es mucho más sencillo crear un entorno en donde el código se ejecuta al instante, de
forma sincrónica, sin embargo eso hubiera hecho que el programa se vuelva mucho más difícil de
entender. Cuando el código se ejecuta inmediatamente las personas se ven obligadas a “pensar como
una computadora” para entender qué está haciendo el código.&lt;/p&gt;
&lt;p&gt;Así que fui directo por una implementación similar a la que se realiza en el desarrollo de
videojuegos, creando un temporizador que mantiene la escena “viva” dibujado una y otra vez la
posición de la tortuga y reaccionando a los cambios de atributos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/game-loop.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Tener un temporizador encargado de dibujar la pantalla hace que el resto del sistema sea mucho más
simple, porque a partir de ahí cualquier cambio que realicemos a la tortuga se va a reflejar en el
canvas automáticamente.&lt;/p&gt;
&lt;p&gt;Por ejemplo, esta es una de las primeras pruebas que realicé, en donde puse a funcionar el bucle
principal y comencé a editar la estructura de datos que representa la tortuga con algunos
controladores:&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/propiedades.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/propiedades.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;p&gt;Es decir, con solo alterar alguno de esos atributos de forma directa el usuario va a percibir
“movimientos” graduales en lugar de cambios inmediatos.&lt;/p&gt;
&lt;h2 id=&#34;dibujado-en-pantalla&#34;&gt;Dibujado en pantalla&lt;/h2&gt;
&lt;p&gt;Para realizar dibujos utilicé el elemento &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial&#34;&gt;Canvas de
HTML&lt;/a&gt;, pero en lugar de usar
un solo elemento tuve que usar dos separados.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/8291458D-A0AE-4DE5-AB43-A6AEB2FDF874.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La razón por la que tuve que separarlos es porque quería poder controlar la tortuga como si se
tratara de un Sprite de video juego, pudiendo moverlo o aplicándole transformaciones fácilmente por
un lado, y por otro lado lograr que el dibujado que hace el usuario sobre la pantalla quede estable
sin necesidad de volver a dibujarlo.&lt;/p&gt;
&lt;p&gt;Después de todo, por más que se trate de dos elementos diferentes, es fácil mostrarlos solapados,
uno arriba del otro, como si se tratara de “capas” de la misma porción de la pantalla.&lt;/p&gt;
&lt;h2 id=&#34;modo-pausa&#34;&gt;Modo pausa&lt;/h2&gt;
&lt;p&gt;El editor también incluye una funcionalidad para detener la ejecución del programa y analizar paso
a paso qué movimiento realizó la tortuga.&lt;/p&gt;
&lt;p&gt;Para activar este modo hay que ejecutar el programa y luego pulsar el botón “Pausar”:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/950D1711-7C1E-44F2-84DC-133112873C91.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En ese punto, el editor ingresa en un modo especial, en donde el usuario puede manipular una linea
de tiempo para revisar el movimiento de la tortuga. Y no solo el movimiento, también puede ver qué
linea de código se ejecutó en ese instante:&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/modo-pausa.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/modo-pausa.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;p&gt;Ahora bien, ¿cómo está implementada esta funcionalidad?: El entorno tiene una lista en memoria en
donde va guardando cada una de las acciones que hace la tortuga.&lt;/p&gt;
&lt;p&gt;Esta lista se podría ejemplificar así: imagina que tenemos un código que dibuja un triángulo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/861E3835-CA41-4523-953D-94A2D1C4A4BE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cuando pulsamos el botón ejecutar la lista debería quedar con un solo elemento, la posición inicial
de la tortuga:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pasos = [
	{
		tipo: &amp;quot;posicion-inicial&amp;quot;,
		x: 150,
		y: 150,
		lapiz: &amp;quot;abajo&amp;quot;,
		# rotación, etc ...
	}
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Luego, como el programa está en ejecución se va a procesar la linea que dice &lt;code&gt;avanzar(50)&lt;/code&gt; y cuando
terminé de realizarse esa acción, se va a añadir este elemento a la lista:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lista.push({
	tipo: &amp;quot;movimiento-de-dibujado&amp;quot;,
	x: 150,
	y: 200,
	lapiz: &amp;quot;abajo&amp;quot;,
	# rotación, etc ...
})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Es decir, cada acción va a añadir un elemento en esta lista de pasos, detallando la posición de la
tortuga y algunos atributos mas. Con solo guardar esos datos alcanza para “recrear” toda la escena
una vez que se activa el modo pausa.&lt;/p&gt;
&lt;p&gt;Este video muestra una versión más completa de esta estructura de datos y cómo se van a agregando
elementos a la lista de pasos:&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/pasos-del-depurador.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/pasos-del-depurador.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;p&gt;Por cierto, esta estrategia de depuración también la implementé en &lt;a href=&#34;https://www.pilas-engine.com.ar&#34;&gt;Pilas Engine
2&lt;/a&gt;, donde incluso puede haber muchos actores en movimiento
interactuando entre sí:&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/depuracion-en-pilas.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/depuracion-en-pilas.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;p&gt;Ah, y como dato curioso, incluso algunos videojuegos usan esta técnica de guardar el estado del
programa para realizar efectos de repetición (como los juegos de fútbol) o incluso para lograr
mecánicas como el control de tiempo. Pienso que el juego
&lt;a href=&#34;https://www.youtube.com/watch?v=R9Exh6uhJno&#34;&gt;Braid&lt;/a&gt; es el mejor ejemplo de esto, incluso hay una
charla de su autor &lt;a href=&#34;https://youtu.be/8dinUbg2h70?t=408&#34;&gt;explicando cómo está implementada esa
característica&lt;/a&gt; por si te resulta interesante para investigar.&lt;/p&gt;
&lt;h2 id=&#34;editor-de-código&#34;&gt;Editor de código&lt;/h2&gt;
&lt;p&gt;En las primeras pruebas de este proyecto comencé trabajando con un elemento de tipo HTML TextArea
simple, pero al poco tiempo noté que para escribir código necesitaba números de lineas, coloreado
de sintaxis y alguna forma de resaltar lineas.&lt;/p&gt;
&lt;p&gt;Así que armé un componente de VueJS basado en &lt;a href=&#34;https://microsoft.github.io/monaco-editor/index.html&#34;&gt;Monaco
Editor&lt;/a&gt;, una biblioteca que provee un editor
de código muy completo, con soporte de auto-completado, resaltado de sintaxis y varias opciones de
configuración para utilizarlo en donde sea.&lt;/p&gt;
&lt;p&gt;Una de las características de Monaco que más exploré es la posibilidad de configurar el módulo de
auto-completado; de hecho resultó ser más sencillo de lo que imaginaba, simplemente tenemos que
enviarle las definiciones de funciones a Monaco así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/editor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esta definición alcanza para que el editor autocomplete el nombre de las funciones, detecte errores
y nos muestre documentación de cada función:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/4A9FD284-3E0F-428D-B86B-33738E872D61.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;código-visible&#34;&gt;Código visible&lt;/h2&gt;
&lt;p&gt;Algo que menciona Bret Victor &lt;a href=&#34;http://worrydream.com/LearnableProgramming/&#34;&gt;en el ensayo que mencioné
antes&lt;/a&gt; es que las funciones y elementos del lenguaje
deberían estar a la vista de las personas. Así que intenté explorar la posibilidad de colocar las
funciones disponibles para utilizar en un panel a la derecha del editor:&lt;/p&gt;
&lt;video preload=&#34;false&#34; controls&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/ingresar-codigo-desde-panel.mp4&#34; type=&#34;video/mp4&#34;&gt;
  &lt;source src=&#34;https://www.examplelab.com.ar/videos/2020/08/ingresar-codigo-desde-panel.webm&#34; type=&#34;video/webm&#34;&gt;
&lt;/video&gt;
&lt;p&gt;Igualmente, siento que este panel de funciones se podría mejorar un montón; me imagino que se le
podría presentar a las personas una previsualización de qué hace cada función, algo más de
información sobre sus parámetros o algo de documentación.&lt;/p&gt;
&lt;h2 id=&#34;resaltado-de-código-al-ejecutar&#34;&gt;Resaltado de código al ejecutar&lt;/h2&gt;
&lt;p&gt;Pienso que lo más importante de este prototipo es que logra resaltar las lineas de código cada vez
que la tortuga realiza una acción:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/B9CC4EA7-4016-4E5A-82EA-B0574B289396.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Para implementar esta característica utilicé una biblioteca JavaScript llamada
&lt;a href=&#34;https://neil.fraser.name/software/JS-Interpreter/docs.html&#34;&gt;JS-Interpreter&lt;/a&gt;. Esta biblioteca te
provee de una clase llamada &lt;code&gt;Interpreter&lt;/code&gt; que se puede configurar para ejecutar código paso a paso.&lt;/p&gt;
&lt;p&gt;Este es un ejemplo básico de lo cómo se puede enviar código a esa clase e iniciar la ejecución del
programa:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/interpreter.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;A grandes rasgos parece similar a tener el código en una cadena de texto como
&lt;code&gt;código&lt;/code&gt; y luego llamar a &lt;code&gt;eval(código)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo, este intérprete hace mucho más que eso:&lt;/p&gt;
&lt;p&gt;Una de las características que incluye es la posibilidad de ejecutar código de manera aislada del
resto de entorno, así que podemos controlar qué cosas puede ejecutar el código que le enviemos
limitando el acceso a objetos o APIs que nosotros queramos.&lt;/p&gt;
&lt;p&gt;De hecho, este intérprete nos permite vincular funciones asincrónicas y que el programador las
perciba como simples funciones sincrónicas.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el movimiento de la tortuga se ve como una función muy sencilla: &lt;code&gt;avanzar(20)&lt;/code&gt;, pero
internamente se implementó como un comportamiento asincrónico, que gradualmente va avanzando pixel
a pixel y dibujando hasta que la tortuga llega al punto solicitado:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/08/secuencia.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Algo que también permite este intérprete es analizar el programa completo y saber qué linea de
código está ejecutando en cada momento, cosa que utilicé para resaltar el código del editor.&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Hacer este experimento me sirvió muchísimo… pude volver a leer algunas ideas de Seymour Paper, de
Bret Victor y ver varios videos de Logo.&lt;/p&gt;
&lt;p&gt;También me sirvió para aprender a utilizar VueJs, Monaco y Cypress de forma práctica, con un
proyecto realizable en manos.&lt;/p&gt;
&lt;p&gt;Además, si bien se trata de un programa muy pequeño (e incompleto si lo comparamos con una
herramienta de verdad) me dio mucho impulso para programar algunos experimentos nuevos.&lt;/p&gt;
&lt;p&gt;Hasta la próxima, ¡y gracias por leer!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creando un cuadro 3D de Dragon Punch</title>
      <link>https://www.examplelab.com.ar/posts/2020-02-15-creando-un-cuadro-3d-de-dragon-punch/</link>
      <pubDate>Sat, 15 Feb 2020 23:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2020-02-15-creando-un-cuadro-3d-de-dragon-punch/</guid>
      <description>&lt;p&gt;Junto a Wally nos propusimos hacer unos cuadros para homenajear un video juego
que habíamos hecho hace un par de años.&lt;/p&gt;
&lt;p&gt;Lo divertido de ese mini proyecto es que nos aventuramos a realizar el cuadro
usando relieve, para que tenga un aspecto de profundidad entre el fondo de la
escena y los Sprites del juego:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/C44FD51B-A9D1-494D-AB0F-69AE137C723F_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El proyecto fue tan divertido que me pareció buena idea escribir sobre ello por
si te gustaría hacer algo similar y estás buscando ideas.&lt;/p&gt;
&lt;p&gt;Por cierto, Dragon Punch es un juego que hicimos con Wally hace unos años,
usando Unity y con gráficos propios inspirados en la serie Dragon Ball. &lt;a href=&#34;https://www.examplelab.com.ar/posts/2015-11-25-nuestro-juego-nuevo-dragon-punch/&#34;&gt;Podes
ver más sobre ese juego en este
link&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;primeros-pasos&#34;&gt;Primeros pasos&lt;/h2&gt;
&lt;p&gt;El primer paso fue crear una imagen del tamaño correcto en un software que soporte capas.&lt;/p&gt;
&lt;p&gt;En nuestro caso el cuadro que teníamos para utilizar tenía 15x20 cm. Así que
armé dos capas en Seashore, una para el fondo y otra para los Sprites así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/sin-titulo-2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego, para los elementos de interfaz que habíamos creado usando Unity en tiempo
de ejecución no tenía Sprites, así que tuve que tratar de imitarlos. Además,
como Seashore no tiene un buen manejo de fuentes pasé a usar Gimp y recrear el
mismo texto con bordes negros:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/sin-titulo-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y una vez que tenía las dos capas, las exporté para que sea fácil enviarlas a
imprimir y que estén por separado los Sprites del fondo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/sin-titulo-7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;También añadí algunos Sprites duplicados, por si al momento de armarlo
decidíamos cambiar algunas cosas.&lt;/p&gt;
&lt;h2 id=&#34;imprimiendo-y-preparando-los-materiales&#34;&gt;Imprimiendo y preparando los materiales&lt;/h2&gt;
&lt;p&gt;Envié a imprimir las dos versiones de las imágenes a una imprenta, conseguimos
unos marcos tipo Box, goma eva, cinta y tijeras:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/D153094D-5E43-4426-81FA-7B23505C810A_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El marco que se ve en la foto es uno VGO con marco ancho, creo que llaman tipo
Box con vidrio.&lt;/p&gt;
&lt;p&gt;En las tiendas de fotos hay varios marcos similares, lo único particular que
tenía este era que el vidrio quedaba bien separado del fondo, lo que nos iba a
permitir que el dibujo tenga bastante relieve y el vidrio cubra todo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/EB2F13EC-6BF2-4066-92F3-3836E0F47351.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;recortando-y-haciendo-los-relieves&#34;&gt;Recortando y haciendo los relieves&lt;/h2&gt;
&lt;p&gt;A la hora de recortar dejamos un marco blanco al rededor de cada Sprite, sino
iba a ser super difícil hacer los cortes sin estropear los bordes:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/4A648C19-D2FE-4056-B896-968CCC11A3FB_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y una vez que recortamos todo, elegimos la escena exacta a recrear del juego (ya
que teníamos algunos Sprites de mas por las dudas):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/54ADD791-A633-48FF-9D90-B46E583D71B9_1_201_a.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego, para los relieves usamos goma eva y cinta doble faz para crear unas
especies de “ladrillitos” de varios niveles:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/60AA3A59-B405-43C9-8726-D3FF42928B40_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Aunque luego de algunas pruebas, terminamos usando solamente los que habíamos
armado con 6 y 4 capas de goma eva:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/0A340F6B-FD3F-4131-AEE7-2633235C5257_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y la misma cinta doble faz nos sirvió para fijar los recortes y pegarlos al
fondo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/1B9C89DF-530C-412F-8369-13BF5D9C80BA_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/32EA528B-7C07-4C55-87F1-D3382019B9BF_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y una vez que pegamos todo, lo acomodamos sobre el dibujo de fondo y armamos el
cuadro:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/8AF53631-0BE4-4485-8954-B9F02D4B4161_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/9616293E-54C6-4A2B-9C49-3BB412475B1C_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El resultado final nos quedó así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/007EB6E5-E70B-4C40-A2DE-2460420CC9F7_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y así (la otra variante con la energía y los logos abajo):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/75A734DB-C32F-4129-AE0F-DED20074B376_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;otros-proyectos-similares&#34;&gt;Otros proyectos similares&lt;/h2&gt;
&lt;p&gt;Buscando en internet “diorama Juego” o &amp;ldquo;cuadro 3d Juegos” vas a encontrar un
montón de ideas para hacer algo similar a lo que armamos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/02/15/dioramas.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;De hecho, se pueden ver cosas mucho más complejas, como mapas en relieve de
juegos de plataformas o Beat ‘em all.&lt;/p&gt;
&lt;h2 id=&#34;cierre&#34;&gt;Cierre&lt;/h2&gt;
&lt;p&gt;Rescato muchas cosas divertidas de haber hecho este proyecto, creo que la
principal es que como programador de software paso mucho tiempo “construyendo
cosas”, pero muy pocas son para mí y tan concretas como para colgar de una
pared.&lt;/p&gt;
&lt;p&gt;Además, es una linda decoración para recordar que logramos hacer ese juego que
tanto nos gusta.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Armando un Audio Switch</title>
      <link>https://www.examplelab.com.ar/posts/2020-01-24-creando-un-audio-switch/</link>
      <pubDate>Fri, 24 Jan 2020 23:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2020-01-24-creando-un-audio-switch/</guid>
      <description>&lt;p&gt;Desde que comencé a trabajar desde casa me propuse mejorar poco a poco mi lugar
de trabajo: compré una silla para mejorar mi postura, un escritorio grande, un
monitor y algunas cosas más … Después de todo, la computadora (y sus
accesorios) son mi herramienta de trabajo, por mas tonto que suene, me pagan
por hacer cosas con ella :|&lt;/p&gt;
&lt;p&gt;Sin embargo, había una pequeña piedra en el zapato que desató un proyecto
simple y divertido:&lt;/p&gt;
&lt;p&gt;Mi equipo tiene un solo conector para los auriculares y los parlantes externos
que uso para escuchar música, y en cada reunión tengo que desconectar los
parlantes, conectar los auriculares (con micrófono incluido) y desconectar todo
al terminar la reunión.&lt;/p&gt;
&lt;p&gt;Este no es un problema grave, ni siquiera sé si es un “problema” realmente…
pero me pareció una buena excusa para ver si lo podía mejorar: “Sería genial
poder tener conectadas las dos cosas (auriculares y parlantes), apretar un
botón y listo”.&lt;/p&gt;
&lt;p&gt;Resulta que buscando en Internet di con algo llamado “audio switch”, que
básicamente es un caja pequeña que te permite tener todo conectado y alternar
entre auriculares y parlantes accionando un interruptor:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/08A2C219-4AE3-4830-9845-049CE44A478F.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mi primer opción fue tratar de comprar algo para resolverlo rápido y fácil,
pero luego de contarles la idea a algunos amigos y a mi hermano, me
convencieron de hacer el “audio switch” comprando los componentes y armando la
caja.&lt;/p&gt;
&lt;p&gt;¡Y qué buena idea me dieron!, porque después de armarla me sentí bastante
orgulloso, no será la el “audio switch” mas lindo del mundo, pero es mío, lo
hice yo, cortando los cables con una tijera vieja y soldando como me salió. Y
aún así, funciona!!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/73AD1EB0-A000-438F-A9B9-167AFC53544E.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;el-armado&#34;&gt;El armado&lt;/h2&gt;
&lt;p&gt;Estas son las fotos de los componentes que conseguí: una caja
pequeña, audio plugs de 4 conectores, una llave palanca 4 polos (gracias Oscar
por darme el nombre correcto) y unos audio Jacks (o fichas hembra de audio de 4
conectores).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/D702C98E-7399-466A-B680-B6F734C26FF1_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/8EF76E9C-0DB9-4A71-8635-83AB64229515_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Si bien parecen componentes comunes, me costó tiempo encontrarlos.&lt;/p&gt;
&lt;p&gt;Resulta que los conectores de audio más comunes son de 3 conectores (canal
izquierdo, canal derecho y masa) sin embargo yo buscaba conectores de 4
conectores, porque mis auriculares con micrófono y el conector de audio de la
Mac es de 4 conectores.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el interruptor de 4 polos que buscaba era exactamente como este:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/8584C9AA-A221-4EEA-9992-0C4992989846_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Armar la caja y empezar a soldar todo fue lo más divertido y constructivo de
todo, empecé por medir y armar la caja así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/23B46C32-BE32-46DB-ABB9-C5934ECCEDCF_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mi idea original era armar todos los cables y para eso iba a usar los plugs.&lt;/p&gt;
&lt;p&gt;Sin embargo, encontré en casa un cable que me iba a evitar el armado de algunas
fichas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/9DB2ACC9-CF2A-45DB-8C25-1BE3353F99ED_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego fui detectando con un Tester a qué partes de la ficha correspondían cada
uno de los cables:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/B18B6735-331C-4AD4-B2C1-4A599515C215_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y armé los Jacks siguiendo el diagrama y la caja:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/22C1DC58-3E5F-4867-920F-3920273AF11E_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/47EF425E-667C-47AA-9B3E-8D63FF4EBC22_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/8659EDBC-80D3-4AA5-BB95-0870BCC9CF9D_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/D1B40A4B-5C20-4CE5-AF97-CDFED1DA6079_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/2F94A2DF-5CF7-42F8-A185-26420DE62276_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sin embargo, al probarlos me di cuenta que casi todo funcionaba bien, excepto
el micrófono: había un ruido constante super molesto, como si el cable del
micrófono estuviera tocando con algún otro cable…&lt;/p&gt;
&lt;p&gt;Desarmé todo, conecté nuevamente y me pasaba lo mismo… incluso probé quitando
el interruptor y conectando los cables “con cinta, para probar” y seguía
haciendo ruido.&lt;/p&gt;
&lt;p&gt;Y luego de buscar y buscar, di con esta imagen de MashTips:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/external-content.duckduckgo.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Uno de los errores que estaba cometiendo era que “asumí”, como cuando cometo
errores programando, que los conectores de Mac eran estándar, y que el conector
mas cercano a la ficha sería la masa… de hecho, ni siquiera se me cruzó por la
cabeza que podría existir otra forma 🤦‍♂️.&lt;/p&gt;
&lt;p&gt;Así que luego de ese último problema, pude armar correctamente la caja y
empezar a usarla:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/B6729924-FAAE-48DC-89D2-43AA0AA4F4F1_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2020/01/0DD07822-8F4F-4B9E-B453-CC75993AB018_1_105_c.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ojalá se me cruce alguna otra cosa divertida para hacer pronto, este
experimento me dio muchas satisfacciones y ganas de seguir aprendiendo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>La documentación no muerde</title>
      <link>https://www.examplelab.com.ar/posts/2018-12-15-la-documentacion-no-muerde/</link>
      <pubDate>Sat, 15 Dec 2018 14:11:38 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2018-12-15-la-documentacion-no-muerde/</guid>
      <description>&lt;p&gt;Sé que suena un poco fuerte, pero no te ofendas&amp;hellip; esta leyenda es para mí, y la escribo acá como una forma de no olvidarme lo que pasó hoy y seguir aprendiendo.&lt;/p&gt;
&lt;p&gt;Si sos como yo, y programas hace algunos años, seguramente recurrís con urgencia a google o stack overflow cuando algo no sale bien, ya sea por un error imprevisto o un desafío que parece trivial, es fácil recurrir rápidamente a Internet como una herramienta auxiliar.&lt;/p&gt;
&lt;p&gt;Pero hoy hice las cosas un poco diferente, leí la documentación, y el resultado de lo que tenía que hacer mejoró notablemente.&lt;/p&gt;
&lt;p&gt;Te cuento con un ejemplo lo que pasó:&lt;/p&gt;
&lt;h2 id=&#34;primer-intento-cómo-formatear-números&#34;&gt;Primer intento: cómo formatear números&lt;/h2&gt;
&lt;p&gt;Hoy me encontré en la necesidad de mostrar un número grande (float con valor 52000.32) dentro de una aplicación web. Pero quería que el número se vea de manera legible, separado por milésimas. Algo así:&lt;/p&gt;
&lt;p&gt;52.000,32&lt;/p&gt;
&lt;p&gt;Naturalmente esto no parece difícil, pero es una de esas &amp;ldquo;cosas&amp;rdquo; que no se hacer &amp;ldquo;de memoria&amp;rdquo;, ni me parece muy importantes como para aprender a hacerlas&amp;hellip; así que por impulso fui directo a stack overflow y encontré esto:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;How to print a number with commas as thousands separators in JavaScript&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/12/image-20181211172619832.png&#34; alt=&#34;image-20181211172619832&#34;&gt;&lt;/p&gt;
&lt;p&gt;y más abajo vi esto, aparentemente mejor por la cantidad de votos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/12/image-20181211172703438.png&#34; alt=&#34;image-20181211172703438&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;segundo-intento-cómo-formatear-números&#34;&gt;Segundo intento: cómo formatear números&lt;/h2&gt;
&lt;p&gt;Incluso encontré en google rápidamente que alguien mencionó la existencia de una biblioteca javascript para resolver esto llamada numeral.js:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/12/image-20181211172850568.png&#34; alt=&#34;image-20181211172850568&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;mmm--un-momento-&#34;&gt;mmm &amp;hellip; un momento &amp;hellip;&lt;/h2&gt;
&lt;p&gt;Si llegaste acá atentamente, y no hiciste alt+tab o multitasking frenéticamente como yo. Seguramente habrás notado algo.&lt;/p&gt;
&lt;p&gt;Convertir un número a un formato legible con Javascript se vuelve un horror&amp;hellip; o bien implica agregar una función rara de por ahí, o incluir una dependencia llamada numeral.js que seguro hace mil cosas que ni se necesitan (y va por la versión 2.0.6 !!).&lt;/p&gt;
&lt;p&gt;En este punto casi dejo todo a un lado y me conformo con ver los números tal y como son&amp;hellip; no me gustan ninguna de las cosas que intenté hasta ahora para mostrar los números formateados.&lt;/p&gt;
&lt;p&gt;Sin embargo, hice una pausa, me preparé un café y recordé algo&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;nacho-hay-que-aprender-más-de-vos&#34;&gt;Nacho, hay que aprender más de vos&lt;/h2&gt;
&lt;p&gt;Hace unas semanas nos reunimos a experimentar usando &amp;ldquo;Go&amp;rdquo; junto a unos amigos. Programar con otras personas en grupo deja algunas cosas curiosas. Por ejemplo, notamos que Nacho no se lanzaba directamente a escribir código y realizar pruebas de las cosas tan rápido; en lugar de eso: Nacho hacía una pausa, abría la documentación y leía, analizaba y trataba de llegar al fondo de las cosas.&lt;/p&gt;
&lt;p&gt;Al poco tiempo de trabajar juntos, se notaba que nacho iba por buen camino. Ya que podía dar paso seguro sobre las cosas que iba haciendo y podía explicar sus pasos fácilmente.&lt;/p&gt;
&lt;p&gt;Claramente Nacho hacía las cosas de una forma diferente a mí: mi forma de hacer las cosas daba muchos fallos y era desgastante, hasta frustrante en algunos casos&amp;hellip; yo estaba mas preocupado por escribir código lo antes posible y &amp;ldquo;tener algo que funcione&amp;rdquo; en lugar de comprender y luego implementar.&lt;/p&gt;
&lt;h2 id=&#34;la-solución-cómo-formatear-números&#34;&gt;La solución: cómo formatear números&lt;/h2&gt;
&lt;p&gt;Así que recordando ese día, se me ocurrió cerrar stack overflow, google y simplemente leer la documentación de Javascript. ¡Fue lo mejor que hice esta tarde!&lt;/p&gt;
&lt;p&gt;Los números en Javascript se representan con un tipo de objeto llamado Number, y tienen asociados una serie de funciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;y para mi sorpresa, leer la documentación fue mucho mas productivo que cualquier cosa&amp;hellip; existe un método especialmente diseñado para el caso que yo quería resolver (toLocaleString)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/12/image-20181211174816305.png&#34; alt=&#34;image-20181211174816305&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Creo que lo importante en este punto no es exactamente cómo convertir números, sino qué proceso o estrategia elijo a la hora de resolver un desafío.&lt;/p&gt;
&lt;p&gt;Parece una tontería señalar esto, pero creo que no lo es: &amp;ldquo;la documentación no muerde&amp;rdquo;, la documentación debería ser la fuente de información principal a la que deberíamos recurrir cada vez que algo no anda bien.&lt;/p&gt;
&lt;p&gt;Y no solo eso, comprender no es lo mismo que explorar rápidamente. Lleva tiempo leer y comprender un manual, y está bien, se compensa rápidamente.&lt;/p&gt;
&lt;p&gt;Y, nuevamente, esto es un recordatorio para mí&amp;hellip; la documentación no muerde.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¡Comenzamos Pilas Engine 2!</title>
      <link>https://www.examplelab.com.ar/posts/2018-03-04-comenzamos-pilas-engine-2/</link>
      <pubDate>Sun, 04 Mar 2018 21:00:46 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2018-03-04-comenzamos-pilas-engine-2/</guid>
      <description>&lt;p&gt;Wooow, ¡Pilas está cerca de cumplir 8 años!, y semejante acontecimiento me hizo tomar valor para encarar un cambio muy grande que veníamos planeando con la comunidad hace tiempo: crear la versión 2 de Pilas Engine.&lt;/p&gt;
&lt;p&gt;Desde que el proyecto comenzó el 1 de Agosto de 2010 pudimos transitar todos estos años mejorando y ayudando a un montón de personas a aprender a programar videojuegos. El motor creció, formamos una gran comunidad y aprendimos mucho.&lt;/p&gt;
&lt;p&gt;Ahora tenemos la posibilidad de dar un salto de calidad muy grande: hacer una retrospectiva de lo que hemos aprendido, reforzar los puntos más fuertes de la herramienta y pensar en los desafíos que vienen.&lt;/p&gt;
&lt;h3 id=&#34;por-qué-estoy-pensando-en-un-cambio-importante-en-pilas-engine&#34;&gt;¿Por qué estoy pensando en un cambio importante en pilas-engine?&lt;/h3&gt;
&lt;p&gt;Pilas 1 comenzó siendo un módulo de Python 2, y poco a poco fue incorporando funcionalidad hasta convertirse en un proyecto completo. Naturalmente las herramientas que teníamos disponibles para hacer pilas en aquellos años no son las mismas que podríamos elegir hoy, sin embargo lo pudimos llevar adelante.&lt;/p&gt;
&lt;p&gt;Python es fabuloso, es mi lenguaje favorito, pero la nueva versión de pilas va a inclinarse hacia tecnologías web como javascript, no por el lenguaje en sí, sino por el ecosistema de herramientas que tiene la plataforma web en general: phaser, chrome, ember etc…&lt;/p&gt;
&lt;p&gt;Usando esas tecnologías, Pilas Engine 2 podría funcionar sobre las mismas plataformas que lo hace hoy pilas 1, pero además podría funcionar sobre navegadores web y brindar muchas mejoras a la comunidad.&lt;/p&gt;
&lt;h3 id=&#34;presentando-el-nuevo-prototipo-de-pilas&#34;&gt;Presentando el nuevo prototipo de Pilas&lt;/h3&gt;
&lt;p&gt;Esta idea de migrar pilas a la web no es nueva, hace tiempo que lo venimos conversando y hasta construí un prototipo de lo que podemos llegar a ver en una futura versión de Pilas.&lt;/p&gt;
&lt;p&gt;Actualmente el prototipo tiene muy pocas cosas, pero es una base sólida para construir todo lo demás y permite visualizar las ventajas de la plataforma.&lt;/p&gt;
&lt;p&gt;Si queres ir mirando lo que incluye hasta ahora podés visitar la siguiente web:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://app.pilas-engine.com.ar&#34;&gt;https://app.pilas-engine.com.ar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En la web vas a ver algo similar a lo que aparece en las siguientes capturas de pantalla, solamente que las capturas fueron capturadas funcionando dentro de electron (una tecnología para empaquetar la aplicación completa y usarla de forma offline):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/03/image_preview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Dentro del prototipo también incluí una versión inicial del editor:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/03/image_preview--2-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;pensando-en-metas&#34;&gt;Pensando en metas&lt;/h3&gt;
&lt;p&gt;Los primeros pasos técnicos para iniciar la versión 2 están en camino: construir el prototipo inicial y crear una base sólida para encarar el desarrollo del motor.&lt;/p&gt;
&lt;p&gt;Sin embargo, me pareció buena idea continuar este artículo compartiendo algunas metas que quisiera que guíen el desarrollo de pilas a futuro.&lt;/p&gt;
&lt;h3 id=&#34;meta-1-pilas-2-debe-ser-una-herramienta-para-descubrir&#34;&gt;Meta 1: Pilas 2 debe ser una herramienta para descubrir&lt;/h3&gt;
&lt;p&gt;Siempre tuvimos en mente que Pilas sea una herramienta para aprender a programar haciendo juegos, descubriendo conceptos y posibilidades técnicas a medida que se comienza a utilizar.&lt;/p&gt;
&lt;p&gt;Pilas no es muy convencional en ese sentido, no se parece a aprender a programar o usar otras herramientas en donde se tiene que cumplir el requisito inicial de leer el manual o seguir una guía de primeros pasos. Tampoco es realmente necesario que un docente lo explique paso a paso; La meta de pilas es que el usuario pueda “descubrir la herramienta” usándola, por sí mismo, motivado por las ganas de crear un proyecto propio o grupal.&lt;/p&gt;
&lt;p&gt;En otras palabras, creemos que el aprendizaje más significativo se produce cuando el usuario descubre y persigue el desarrollo de un proyecto.&lt;/p&gt;
&lt;p&gt;Por eso, en la versión 2 podemos proponernos hacer que pilas sea mucho más fácil de descubrir mejorando el editor y la interacción con la escena que construye.&lt;/p&gt;
&lt;p&gt;Por ejemplo, los actores tiene que estar a la vista, y las tareas típicas como posicionar actores tienen que ser fácilmente realizables (sin escribir código).&lt;/p&gt;
&lt;p&gt;Un ejemplo de esto se ve en el diseño del nuevo editor, ahora se pueden crear actores visualizándolos previamente, mirándolos en una grilla, seleccionándolo y colocándolo en el escenario:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/03/image_preview--1-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Además, el editor tiene un modo de edición y ejecución completamente identificados. Para que el usuario pueda controlar a los actores, moverlos como si fueran piezas sobre un tablero y luego “ponerlos en acción” con el botón “Ejecutar”:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/03/image_preview.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Lo mismo sucede con los atributos de los actores, en la versión 2 estoy experimentando con un panel de propiedades que se puede modificar fácilmente:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/03/image_preview--1-.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;meta-2-que-los-usuarios-puedan-compartir-sus-juegos-fácilmente&#34;&gt;Meta 2: Que los usuarios puedan compartir sus juegos fácilmente&lt;/h3&gt;
&lt;p&gt;Un paso muy importante de nuestros usuarios es el momento en donde muestran su juego a otras personas; es un momento fascinante, porque es el que los pone en un rol protagonista frente a la tecnología, y le da un sentido completamente diferente sus proyectos. ¡Tiene que ser fácil mostrar nuestros juegos!.&lt;/p&gt;
&lt;p&gt;Creo que una forma de lograrlo es agregando un botón al editor que permita generar una dirección web para compartir. Con eso los usuarios van a poder copiar y pegar esa dirección en el foro, facebook o donde quieran.&lt;/p&gt;
&lt;h3 id=&#34;meta-3-exponer-el-código-completo-de-los-actores&#34;&gt;Meta 3: Exponer el código completo de los actores&lt;/h3&gt;
&lt;p&gt;Un objetivo importante de Pilas es que los usuarios se “apoderen” del concepto de actores muy rápido, que puedan personalizar y crear sus propios actores.&lt;/p&gt;
&lt;p&gt;Por eso en el prototipo de Pilas 2 experimenté con la idea de exponer el código completo de los actores al momento de crearlos, así el usuario va a poder cambiar y personalizar los actores sin necesidad de comprender jerarquía de clases de los actores o revisar el manual.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el actor nave ahora expone todo su código (no una clase derivada). Si el usuario quiere cambiar la velocidad de la nave o jugar con algún otro comportamiento lo puede hacer directamente ahí:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2018/03/image_preview--3-.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;meta-4-mantener-ambas-versiones-de-pilas&#34;&gt;Meta 4: Mantener ambas versiones de Pilas&lt;/h3&gt;
&lt;p&gt;Hacer la versión 2 de pilas va a requerir muchísimo esfuerzo, pero no debería ser excusa para dejar de mantener la versión 1. Me gustaría que sigamos manteniendo activamente ambas versiones. Hoy existen muchos cursos, programas, tutoriales, juegos y usuarios usando la versión 1 de pilas.&lt;/p&gt;
&lt;p&gt;El desafío aquí es más organizativo que técnico, requiere que nos organicemos para llevar los dos proyectos de la mano, y darle a los usuarios la posibilidad de elegir qué versión prefieren utilizar.&lt;/p&gt;
&lt;h3 id=&#34;meta-5-aprender-y-seguir-divirtiéndonos-creando-pilas-engine&#34;&gt;Meta 5: Aprender y seguir divirtiéndonos creando Pilas Engine&lt;/h3&gt;
&lt;p&gt;Se que este último objetivo no es técnico ni formal, ¿pero qué importa?: pilas es un proyecto creado por personas, buscando transformar el rol de los jóvenes frente a la tecnología: queremos que sean protagonistas en lugar de espectadores. Es un proyecto lleno de desafíos y mucho trabajo por realizar.&lt;/p&gt;
&lt;p&gt;Así que creo que debemos tenerlo como uno de nuestros principios más importantes: colaborar en el desarrollo de Pilas tiene que ser divertido y desafiante, necesitamos activamente de toda la comunidad para que sea un éxito.&lt;/p&gt;
&lt;p&gt;La buena noticia es que formamos un grupo magnífico, tenemos perseverancia a pesar de todo el trabajo y las dificultades que trae aparejado .&lt;/p&gt;
&lt;p&gt;Vamos a lograr que Pilas Engine llegue a ser mucho mejor de lo que soñamos.&lt;/p&gt;
&lt;h3 id=&#34;y-cómo-seguirá-el-desarrollo&#34;&gt;¿Y cómo seguirá el desarrollo?&lt;/h3&gt;
&lt;p&gt;Seguramente en estos días comience a buscar colaboradores y conversar en el foro de pilas-engine sobre esta nueva iniciativa. Si estás interesado en participar escribí en el foro de pilas para que podamos organizarnos un poco mejor.&lt;/p&gt;
&lt;p&gt;Además del foro de mensajes, también vamos a contar con un tablero de trello con las tareas a realizar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://trello.com/b/eQJOjpOF/pilas-engine-2&#34;&gt;https://trello.com/b/eQJOjpOF/pilas-engine-2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Y el repositorio en donde vamos colocar todas las contribuciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pilas-engine/pilas-engine&#34;&gt;https://github.com/pilas-engine/pilas-engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Creando un visor de videos offline con electron y ember</title>
      <link>https://www.examplelab.com.ar/posts/2016-06-02-creando-un-visor-de-videos-offline-con-electron-y-ember/</link>
      <pubDate>Thu, 02 Jun 2016 19:17:18 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2016-06-02-creando-un-visor-de-videos-offline-con-electron-y-ember/</guid>
      <description>&lt;h2 id=&#34;introducción&#34;&gt;Introducción&lt;/h2&gt;
&lt;p&gt;Esta semana me propuse hacer una aplicación muy sencilla con ember y electron, un visor de videos offline HTML5:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/06/preview.png&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt;
&lt;p&gt;La aplicación en sí es muy simple, está pensanda para crear una biblioteca de videos para mirar con los más chiquitos de la familia sin necesidad de Internet, youtube o publicidades.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/06/visor-1.png&#34; alt=&#34;visor&#34;&gt;&lt;/p&gt;
&lt;p&gt;Técnicamente hablando, la aplicación simplemente busca videos en un directorio del equipo, los lista en pantalla y permite visualizarlos usando HTML5.&lt;/p&gt;
&lt;h2 id=&#34;creando-la-aplicación&#34;&gt;Creando la aplicación&lt;/h2&gt;
&lt;p&gt;El primer paso fue crear la aplicación ember e instalar algunas pocas extensiones:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ember new visor-offline
cd visor-offline

ember install ember-electron
ember install ember-bootstrap
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Luego, para tener todo el código respaldado en un repositorio utilicé github:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hugoruscitti/visor-offline&#34;&gt;https://github.com/hugoruscitti/visor-offline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;previsualizando-la-aplicación&#34;&gt;Previsualizando la aplicación&lt;/h2&gt;
&lt;p&gt;Lo interesante de ember-electron es que te permite simplificar un montón de pasos, por ejemplo, para ejecutar la aplicación podemos escribir:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ember electron
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y lo que veremos en pantalla es la aplicación corriendo dentro del entorno de electron:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/06/primer-version.png&#34; alt=&#34;primer-version&#34;&gt;&lt;/p&gt;
&lt;p&gt;y al igual que sucede cuando ejecutamos &lt;code&gt;ember serve&lt;/code&gt;, cualquier cambio que hagamos en el código nos va a mostrar los cambios inmediatamente.&lt;/p&gt;
&lt;h2 id=&#34;cargando-datos&#34;&gt;Cargando datos&lt;/h2&gt;
&lt;p&gt;Mi intensión es tener una aplicación sencilla y segura. Sin muchas opciones o modos de uso: El visor-offline inicia, busca videos mp4 en el directorio de la aplicación y permite visualizarlos.&lt;/p&gt;
&lt;p&gt;Nada más.&lt;/p&gt;
&lt;p&gt;Entonces, para descargar videos necesitaba de otra aplicación. Así que elegí usar ClipGrab, una aplicación muy sencilla que permite descargar videos desde youtube en distintos formatos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/06/descargas.png&#34; alt=&#34;descargas&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ahora, para generar las miniaturas usé un pequeño script, que internamente invoca al comando &lt;code&gt;ffmpegthumbnailer&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Archivo: crear_miniaturas.py
import os

for x in os.listdir(&#39;.&#39;):
  if x.lower().endswith(&#39;.mp4&#39;):
    print(&amp;quot;Creando miniatura para: &amp;quot; + x)
    video_input = x
    file_output = &amp;quot;thumbs/&amp;quot; + video_input.replace(&amp;quot;.mp4&amp;quot;, &amp;quot;.jpg&amp;quot;)
    os.system(&amp;quot;ffmpegthumbnailer -i &#39;%s&#39; -o &#39;%s&#39; -s400&amp;quot; %(video_input, file_output))
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;cargando-el-listado-de-videos&#34;&gt;Cargando el listado de videos&lt;/h2&gt;
&lt;p&gt;Mi intensión es que la aplicación tenga una lógica muy sencilla, sin bases de datos o sincronización, simplemente un visor de videos ya descargados previamente.&lt;/p&gt;
&lt;p&gt;Así que adopté la siguiente convención: los videos se deberían grabar directamente en el directorio &lt;code&gt;c:\videos&lt;/code&gt; y las miniaturas generadas en &lt;code&gt;c:\videos\thumbs&lt;/code&gt;, así el visor de video solo tendría que ir a buscarlos en esos directorios.&lt;/p&gt;
&lt;p&gt;En el caso de osx y linux el procedimiento es muy similar, solamente que buscará videos en &lt;code&gt;$HOME/videos&lt;/code&gt; y las miniaturas en &lt;code&gt;$HOME/videos/thumbs&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// archivo: app/routes/index.js
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Ember&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ember&amp;#34;&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Ember&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Route&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;extend&lt;/span&gt;({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;videos&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Ember&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;inject&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;(),

  &lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;videos&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;getVideos&lt;/span&gt;();
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y como el hook &amp;ldquo;model&amp;rdquo; está preparado para manejar promesas, implementé la función &lt;code&gt;getVideos&lt;/code&gt; para que retorne una promesa:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// archivo: app/services/video.js
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
[...]

&lt;span style=&#34;color:#a6e22e&#34;&gt;getVideos&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Ember&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;RSVP&lt;/span&gt;.Promise((&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;) =&amp;gt; {
      &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;videoPath&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_get_video_path&lt;/span&gt;();


      &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;readdir&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;videoPath&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;) =&amp;gt; {

        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;) =&amp;gt; {
          &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;replace&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.mp4&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;);

          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;,
            &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;,
            &lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;videoPath&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/thumbs/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.jpg&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#a6e22e&#34;&gt;video&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;videoPath&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;
          };
        });

        &lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;items&lt;/span&gt;);

      });

    });
  }
},

[...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El siguiente paso es recorrer la lista de videos desde el template:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{#each model as |video|}}
  {{v-videoThumb video=video}}
{{else}}

  &amp;lt;div class=&amp;quot;mensaje-error&amp;quot;&amp;gt;
    &amp;lt;p&amp;gt;Lo siento, no hay videos para mostrar.&amp;lt;/p&amp;gt;

    &amp;lt;p&amp;gt;Por favor descarga los videos que quieras visualizar
      en &amp;lt;code&amp;gt;c:\videos&amp;lt;/code&amp;gt; (o en &amp;lt;code&amp;gt;$HOME/videos&amp;lt;/code&amp;gt; en linux y osx).
    &amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;

{{/if}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Y luego de algunos retoques de estilo quedo así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/06/preview2.png&#34; alt=&#34;preview2&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;automatizando-la-generación-de-binarios&#34;&gt;Automatizando la generación de binarios&lt;/h3&gt;
&lt;p&gt;En este punto, si quisiéramos crear los binarios desde nuestra propia computadora tendríamos que ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ember electron:package --platform=win32 --ignore &amp;quot;node_modules/\.bin&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Sin embargo, algo más interesante es automatizar este procedimiento, hacer que los binarios se generen en un servidor remoto y se suban a github.&lt;/p&gt;
&lt;p&gt;Para eso configuré el servicio &lt;a href=&#34;travis-ci.org&#34;&gt;travis-ci&lt;/a&gt; que va a ejecutar los tests, generar los binarios y los sube a github. Todo de manera automatizada, sin ocupar recursos en mi computadora y super rápido:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/06/travis.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/06/release.png&#34; alt=&#34;release&#34;&gt;&lt;/p&gt;
&lt;p&gt;Por cierto, si querés probar la aplicación compilada podés descargarla desde acá:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hugoruscitti/visor-offline/releases&#34;&gt;https://github.com/hugoruscitti/visor-offline/releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conclusiones&#34;&gt;Conclusiones&lt;/h3&gt;
&lt;p&gt;Ember y electron hacen una muy buena combinación, es super productivo dedicarle algunas horas a un proyecto sencillo como este, y los resultados son muy buenos. Al menos mis sobrinos nos se han quejado aún :P&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¡ The Zombie Smasher !</title>
      <link>https://www.examplelab.com.ar/posts/2016-04-26-publicamos-the-zombie-smasher/</link>
      <pubDate>Tue, 26 Apr 2016 19:18:46 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2016-04-26-publicamos-the-zombie-smasher/</guid>
      <description>&lt;p&gt;Esta semana publicamos un videojuego nuevo para iOS: ¡The Zombie Smasher!&lt;/p&gt;
&lt;p&gt;En este post me gustaría hacer una pequeña reseña del juego y cómo lo realizamos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/teaser.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/jufMEynEfQQ&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;de-qué-se-trata&#34;&gt;¿De qué se trata?&lt;/h2&gt;
&lt;p&gt;El juego tiene una mecánica muy similar a &lt;a href=&#34;http://examplelab.com.ar/nuestro-juego-nuevo-dragon-punch/&#34;&gt;Dragon Punch&lt;/a&gt;, de hecho partimos del mismo código base. Comenzamos mejorando los controladores de efectos sonoros y las músicas, luego agregamos niveles y mucho más:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/2-1.jpeg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/4.jpeg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/6-1.jpeg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/7-1.jpeg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/8-1.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/sprites-final-hero.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;lo-que-aprendimos&#34;&gt;Lo que aprendimos&lt;/h2&gt;
&lt;p&gt;Unity es fascinante, no sólo para desarrollar el juego en sí, sino su ecosistema completo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/gameScene-unity---unity-the-zombie-smasher---iPhone--iPod-Touch-and-iPad--Personal--2016-04-26-15-45-20.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Lo primero que llevamos adelante es mejorar el workflow para realizar pruebas. Comenzamos llevando todo el código a bitbucket, y configurando la compilación en la nube de unity:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/-Commits---Bitbucket-2016-04-25-11-27-38.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/History---Unity-Cloud-Build-2016-04-25-11-12-11.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto nos permite delegar la compilación del juego a los servidores de unity.&lt;/p&gt;
&lt;p&gt;Por último, para probar el juego en nuestros teléfonos y tablets, usamos itunes-connect y una aplicación llamada testflight:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/iTunes-Connect-2016-04-25-11-02-57.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Otra cosa que mejoramos desde el principio es el manejo de imágenes, preparamos todo para minimizar el uso de texturas. Así que empaquetamos todos los sprites en spritesheets:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/Sprites-2016-04-25-10-49-49.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Por último, también mejoramos mucho el proceso de composición para músicas y sonidos. Dejamos de trabajar en mp3 y usamos el formato OGG. el cambio fue drástico en el muestreo y calidad de los tracks:&lt;/p&gt;
&lt;p&gt;Particularmente the zombie smasher tiene 4 tracks compuestos especialmente para la temática de cada nivel.&lt;/p&gt;
&lt;p&gt;Usando algunas técnicas aprendidas en libro de Gryzor87: &amp;ldquo;Cool music for videogames&amp;rdquo;, pudimos darle una sensación de progresión de dificultad a través de la mezcla y utilización de instrumentos en FL STUDIOS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/3d03b088-6651-499d-881e-484dbc7ed8d6.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/Foto-resen-a-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dónde-se-puede-conseguir-el-juego&#34;&gt;¿Dónde se puede conseguir el juego?&lt;/h2&gt;
&lt;p&gt;El juego está publicado en la tienda oficial de apple, tanto para ipad, iphone y ipod touch:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/the-zombie-smasher/id1065520591&#34;&gt;https://itunes.apple.com/us/app/the-zombie-smasher/id1065520591&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/04/The-Zombie-Smasher-on-the-App-Store-2016-04-24-23-51-17.png&#34; alt=&#34;https://itunes.apple.com/us/app/the-zombie-smasher/id1065520591&#34;&gt;&lt;/p&gt;
&lt;p&gt;Posiblemente en unas semanas vamos realizarle algunas mejoras adicionales y subirlo a google play también, ¿tenés android?, ¿te gustaría comprar el juego? ¡Avísanos!.&lt;/p&gt;
&lt;p&gt;Links útiles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.twoplayers.com.ar&#34;&gt;La web de twoplayers.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/the-zombie-smasher/id1065520591&#34;&gt;Página de la tienda AppStore.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://examplelab.com.ar/convertir-videos-en-imagenes-con-canal-alpha/&#34;&gt;Post sobre efectos utilizados.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Agregando efectos especiales en juegos 2D</title>
      <link>https://www.examplelab.com.ar/posts/2016-04-15-convertir-videos-en-imagenes-con-canal-alpha/</link>
      <pubDate>Fri, 15 Apr 2016 21:02:50 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2016-04-15-convertir-videos-en-imagenes-con-canal-alpha/</guid>
      <description>&lt;p&gt;Esta semana estuvimos agregando efectos especiales a uno de nuestros juegos en unity:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/Untitled-2016-02-19-15-45-33.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero a diferencia de lo que hicimos en otros juegos, aquí no usamos partículas sino efectos prediseñados de video, que luego de procesarlos como imágenes se pueden integrar a unity.&lt;/p&gt;
&lt;h2 id=&#34;por-qué&#34;&gt;¿Por qué?&lt;/h2&gt;
&lt;p&gt;Los efectos de videos tienen una apariencia espectacular, sobretodo cuando de trata de juegos 2d, caricaturescos y divertidos.&lt;/p&gt;
&lt;p&gt;Por ejemplo, mirá la galería de efectos que produjo &lt;a href=&#34;http://videohive.net/user/dyomin&#34;&gt;dyomin&lt;/a&gt; en videhive, como la la serie &lt;a href=&#34;http://videohive.net/item/toonstool-fx-kit/12815828&#34;&gt;toonstool-fx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¿No son espectaculares?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/x10_Smoke_Explosions.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ahora bien, ¿cómo los podemos incorporar a un videojuego?&lt;/p&gt;
&lt;h2 id=&#34;integrar-a-unity&#34;&gt;Integrar a Unity&lt;/h2&gt;
&lt;p&gt;Para integrar los efectos en unity primero tuvimos que convertir el video de efectos a una serie de imágenes y luego crear la entidad dentro de unity.&lt;/p&gt;
&lt;h3 id=&#34;convertir-el-video-a-imágenes&#34;&gt;Convertir el video a imágenes&lt;/h3&gt;
&lt;p&gt;Buscamos varias herramientas, pero la que resultó mejor fué &lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;, un conversor de videos multiplataforma de consola completamente libre.&lt;/p&gt;
&lt;p&gt;Para instalarlo en osx se puede usar este comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install ffmpeg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Una vez instalado, hay que abrir un terminal e invocar a ffmpeg con la ruta del video y el directorio a donde vamos a guardar las imágenes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir output
ffmpeg -i video_fx_1.mov -f image2 output/%05d.png -frames:v 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Así queda el directorio &lt;code&gt;output&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/output-2016-02-19-17-46-57.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;crear-la-entidad-en-unity&#34;&gt;Crear la entidad en unity&lt;/h3&gt;
&lt;p&gt;Lo primero que hicimos es importar todas las imágenes dentro del directorio asserts del proyecto en unity:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/Untitled-2016-02-19-14-58-26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Después, para crear la entidad, seleccionamos todos cuadros de animación y los arrastramos sobre la escena.&lt;/p&gt;
&lt;p&gt;En este punto, unity va a realizar varias cosas: va a crear la entidad, la va instanciar en la escena y también creará una animación inicial.&lt;/p&gt;
&lt;p&gt;Así, el siguiente paso es posicionar la entidad y ya tenemos algo animado en pantalla:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/2016-02-19-15_23_45.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Por último, para que animación se muestre una sola vez, tuvimos que crear un script llamado &lt;code&gt;destroy&lt;/code&gt; con una función que nos permita representar la eliminación de la entidad:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/Untitled-2016-02-19-15-18-06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El script es super sencillo, alcanza con que tenga una sola función:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;using UnityEngine;
using System.Collections;

public class destroy : MonoBehaviour {

    void DestroyGameObject() {
        Destroy(gameObject);
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Y para finaizar, tenemos que pulsar el botón detecho sobre el timeline:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/Untitled-2016-02-19-15-16-47.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y vincular el nombre de la función &lt;code&gt;DestroyGameObject&lt;/code&gt; para que se invoque en ese instante de la animación:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2016/02/Untitled-2016-02-19-15-20-36-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;¡Es todo!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¡ Dragon Punch !</title>
      <link>https://www.examplelab.com.ar/posts/2015-11-25-nuestro-juego-nuevo-dragon-punch/</link>
      <pubDate>Wed, 25 Nov 2015 16:17:33 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2015-11-25-nuestro-juego-nuevo-dragon-punch/</guid>
      <description>&lt;p&gt;Hoy quiero mostrarles un juego en el que venimos trabajando hace algunos meses: &lt;strong&gt;Dragon Punch&lt;/strong&gt;, inspirado en la serie animada Dragon Ball.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/09/1536x2008ss-80-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/09/screenshot---dragon-ball-punch-1-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;gameplay&#34;&gt;Gameplay&lt;/h2&gt;
&lt;p&gt;El juego está orientado a usuarios de dispositivos móviles, como celulares y tablets, así que la forma de jugar es haciendo movimientos de desplazamiento sobre la pantalla:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Q1a0ZfhDM68&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;El objetivo del juego es que el jugador pueda controlar a &lt;strong&gt;yamcha&lt;/strong&gt; para defenderse de los &lt;strong&gt;saibamens&lt;/strong&gt;, dando golpes de puño y patadas. El juego entregará puntos por cada &lt;strong&gt;saibamens&lt;/strong&gt; que se golpee.&lt;/p&gt;
&lt;h2 id=&#34;y-cómo-surgió&#34;&gt;¿Y cómo surgió?&lt;/h2&gt;
&lt;p&gt;La idea del juego surgió de Wally, que pensó en homenajear &lt;a href=&#34;https://www.youtube.com/watch?v=MfW4RRoUdy8&#34;&gt;una escena de Dragon Ball&lt;/a&gt; muy recordada por todos los fans de la serie, &amp;ldquo;La muerte de Yamcha&amp;rdquo;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/09/Dragonball-Z--Saibamen-Kills-Yamcha-Remastered--HD----YouTube-2015-09-13-02-20-06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esta escena es tan conocida, que hay montones de &lt;a href=&#34;https://www.google.com.ar/search?q=google+images+yamcha+death+pose&amp;amp;espv=2&amp;amp;biw=1440&amp;amp;bih=801&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=0CAYQ_AUoAWoVChMI1bXnpabzxwIVhH-QCh0FKglX#tbm=isch&amp;amp;q=yamcha+death&#34;&gt;memes, bromas y remixes&lt;/a&gt; al respecto.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/09/pokemon-drago-desmotivaciones.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/09/51BVSNN5AZL-_SX300_.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/11/20151125081111.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Entonces, ¿Por qué no hacer un juego en honor a yamcha?, ¿por qué no darle una segunda oportunidad de redimirse?:&lt;/p&gt;
&lt;h2 id=&#34;audio&#34;&gt;Audio&lt;/h2&gt;
&lt;p&gt;Balbinos se encargó de todo lo relacionado a los efectos y músicas del juego; la ambientación, los detalles en los efectos y las melodías de las canciones están super logradas con el detalle y atención que los fas de Dragon Ball van a poder apreciar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/09/picture---audio.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;imágenes&#34;&gt;Imágenes&lt;/h2&gt;
&lt;p&gt;Walter realizó todas las imágenes del juego, comenzando con diseños en papel, remarcando, escaneando, y finalizando el proceso de pintura directamente en photoshop.&lt;/p&gt;
&lt;p&gt;Aquí van algunas fotos del paso a paso:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/11/picuture---draws-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/11/picture---zoom.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;programación&#34;&gt;Programación&lt;/h2&gt;
&lt;p&gt;Mi aporte al proyecto estuvo en la programación y adaptación a distintos dispositivos, trabajé por completo con &lt;a href=&#34;https://unity3d.com/&#34;&gt;unity&lt;/a&gt; y &lt;a href=&#34;https://atom.io/&#34;&gt;atom.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al principio, con la idea del gameplay al estilo &lt;a href=&#34;https://itunes.apple.com/us/app/fist-of-fury/id913105070?mt=8&#34;&gt;fist of fury&lt;/a&gt;, armé un prototipo jugable usando los gráficos de pocket fighter:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/11/ryuScene-unity---unity-punch---iPhone--iPod-Touch-and-iPad--Personal--2015-11-24-16-08-19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y recién cuando wally pintó la secuencia del protagonista y los fondos comencé a integrar todo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/11/gameScene-unity---unity-punch---iPhone--iPod-Touch-and-iPad--Personal--2015-11-21-13-06-38.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Creo que este trabajo en dos etapas fue super productivo, logramos avanzar y poner el juego en funcionamiento en tiempo record, al menos para nosotros :P&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/11/DSCN3671.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dónde-conseguirlo&#34;&gt;¿Dónde conseguirlo?&lt;/h2&gt;
&lt;p&gt;El juego está disponible en &lt;strong&gt;itch.io&lt;/strong&gt;, en formato online en webgl y también para descargar:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://hugoruscitti.itch.io/dragon-punch&#34;&gt;http://hugoruscitti.itch.io/dragon-punch&lt;/a&gt;&lt;/p&gt;
&lt;iframe src=&#34;//itch.io/embed/38390?dark=true&amp;amp;linkback=true&#34; width=&#34;552&#34; height=&#34;167&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/11/Dragon-Punch-by-twoplayers-2015-11-17-16-09-35.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;planes-a-futuro&#34;&gt;Planes a futuro&lt;/h2&gt;
&lt;p&gt;Estamos con ganas de publicar y comenzar a distribuir en juego en dispositivos móviles, pero por el momento solo vamos a mantener la versión para desktops; tenemos que conseguir la aprobación de la app y seguir haciendo ajustes&amp;hellip;&lt;/p&gt;
&lt;p&gt;¡Saludos!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¡ Publicamos Dracula&#39;s Nightmare !</title>
      <link>https://www.examplelab.com.ar/posts/2015-07-12-draculas/</link>
      <pubDate>Sun, 12 Jul 2015 22:18:39 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2015-07-12-draculas/</guid>
      <description>&lt;p&gt;Esta semana &lt;a href=&#34;https://www.facebook.com/walter.velazquez.94&#34;&gt;Wally&lt;/a&gt;, &lt;a href=&#34;https://www.facebook.com/balbinos&#34;&gt;BalbiNos&lt;/a&gt; y yo, publicamos nuestro primer videojuego para iOS (y pronto android): &lt;strong&gt;Dracula&amp;rsquo;s Nightmare&lt;/strong&gt; en el marco de nuestro emprendimiento independiente &lt;em&gt;2players&lt;/em&gt; :&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/1-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;en-que-consiste&#34;&gt;¿En que consiste?&lt;/h3&gt;
&lt;p&gt;El juego es super sencillo, es un juego de supervivencia donde manejamos un pequeño vampiro que tiene que sobrevivir a todos los objetos que le arrojan los pueblerinos enfurecidos:&lt;/p&gt;
&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/mqCYd2yqp9w&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;el-proceso-de-desarrollo&#34;&gt;El proceso de desarrollo&lt;/h3&gt;
&lt;p&gt;Para realizar el juego nos pusimos a investigar varias alternativas, probamos con HTML5 junto cocoonjs, V-Play, SpriteKit y &lt;a href=&#34;https://unity3d.com/es&#34;&gt;Unity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pero luego de varias pruebas y algunos prototipos nos decidimos por &lt;a href=&#34;https://unity3d.com/es&#34;&gt;Unity&lt;/a&gt;, una plataforma super completa para realizar juegos en 3D o 2D, que permite exportar nuestros juegos a varios dispositivos como ios, android, pc, osx y más&amp;hellip;&lt;/p&gt;
&lt;p&gt;Aunque lo primero que nos impactó de &lt;a href=&#34;https://unity3d.com/es&#34;&gt;Unity&lt;/a&gt; es su entorno de desarrollo, donde podemos separar el juego en entidades, visualizarlas y modificarlas, incluso mientras el juego está en funcionamiento:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/game-unity---unity-pesadilla---Android--Personal--2015-07-12-13-27-09.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/game-unity---unity-pesadilla---Android--Personal--2015-07-12-11-58-41.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Tal vez el único punto que me gustaría ver evolucionar en unity es la posibilidad de trabajar en conjunto, que se integre de alguna forma a un control de versiones como git o algo así. Pero es algo relativamente pequeño comparado con todo lo que nos soluciona.&lt;/p&gt;
&lt;h3 id=&#34;cómo-surgió-el-juego&#34;&gt;¿Cómo surgió el juego?&lt;/h3&gt;
&lt;p&gt;Comenzamos a crear el videojuego basándonos en una idea que teníamos hace tiempo, crear nuestro primer juego basados en una mecánica muy sencilla, de supervivencia y basado en puntajes.&lt;/p&gt;
&lt;p&gt;Hacer algo sencillo nos iba a permitir experimentar todas las fases de desarrollo rápido, desde la composición de gráficos, pasando por el desarrollo y testing, hasta distribuirlo desde el appstore.&lt;/p&gt;
&lt;p&gt;Incluso varios gráficos del juego ya los teníamos realizados de un proyecto anterior, así que pudimos focalizarnos por completo en el gameplay, el audio y varias cosas propias del dispositivo mobile (como los acelerómetros).&lt;/p&gt;
&lt;h3 id=&#34;el-proceso-de-publicación&#34;&gt;El proceso de publicación&lt;/h3&gt;
&lt;p&gt;Algo muy nuevo de esta experiencia fué la publicación en el store de apple, el primer paso fué registrar una licencia de desarrollador para iOS, que costó unos 100 USD ಠ_ಠ y dura un periodo de 12 meses.&lt;/p&gt;
&lt;p&gt;Pero más allá de eso, el proceso completo para subir la aplicación y ponerla en venta es super práctico, incluso todo el proceso de testing está muy bien automatizado, por ejemplo, apple provee una aplicación llamada &lt;em&gt;TestFlight&lt;/em&gt; que te permite publicar versiones betas a diferentes personas del equipo de desarrollo o testing.&lt;/p&gt;
&lt;p&gt;Una vez que concluimos las pruebas y nuestro juego estaba para publicar, lo subimos al appstore usando itunes connect. Esta es una de las pantallas que observábamos en el momento de la aprobación:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/iTunes-Connect-2015-07-12-16-26-37.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y así se ve &lt;a href=&#34;https://itunes.apple.com/ar/app/draculas-nigthmare/id985234082?mt=8&#34;&gt;desde el appstore&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/iTunes-2015-07-12-18-34-42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ideas-a-futuro&#34;&gt;Ideas a futuro&lt;/h3&gt;
&lt;p&gt;Quedamos super contentos con la publicación, así que vamos a seguir desarrollando y publicando juegos así.&lt;/p&gt;
&lt;p&gt;Tenemos varios bocetos para refinar y convertir en juegos completos. &lt;em&gt;&amp;ldquo;Don Ceferino&amp;rdquo;&lt;/em&gt; y &lt;em&gt;&amp;ldquo;Chicken or nuggets&amp;rdquo;&lt;/em&gt; son dos de ellos, ¡ entre otras ideas más !&lt;/p&gt;
&lt;p&gt;¡Manos a la obra!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/yyyy.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/07/chicken.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;¡ Saludos !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Buscar e instalar en Huayra</title>
      <link>https://www.examplelab.com.ar/posts/2015-05-20-buscar-e-instalar-en-huayra/</link>
      <pubDate>Wed, 20 May 2015 03:13:32 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2015-05-20-buscar-e-instalar-en-huayra/</guid>
      <description>&lt;p&gt;Esta semana creamos una herramienta nueva para todos los usuarios de huayra linux: &lt;strong&gt;huayra-alias&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;El objetivo de esta herramienta es facilitar la búsqueda e instalación de paquetes con dos comandos nuevos. Ayudando a simplificar tutoriales, acortar instrucciones y escribir menos :)&lt;/p&gt;
&lt;h2 id=&#34;pensando-en-comandos-&#34;&gt;Pensando en comandos &amp;hellip;&lt;/h2&gt;
&lt;p&gt;Huayra está basado en &lt;strong&gt;debian gnu/linux&lt;/strong&gt;, una de las distribuciones más sólidas y prestigiosas impulsada por la comunidad de software libre.&lt;/p&gt;
&lt;p&gt;Y en &lt;strong&gt;debian&lt;/strong&gt;, como en muchas otras distribuciones de linux, se utilizan comandos para casi todo: hay comandos para procesar archivos, instalar software, iniciar servicios, compartir archivos etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Pero curiosamente, entre estos comandos, no se incluyen atajos pensados para facilitarnos el uso de la computadora. Por ejemplo, para buscar software a veces terminamos escribiendo algo como &lt;em&gt;&amp;ldquo;sudo apt-get update; apt-get search &amp;hellip;&amp;quot;&lt;/em&gt;  y algunas cosas más.&lt;/p&gt;
&lt;p&gt;Pienso que algunos comandos se diseñaron como si fueran &lt;a href=&#34;http://es.wikipedia.org/wiki/Navaja_suiza&#34;&gt;navajas suizas&lt;/a&gt;, con muchos parámetros y opciones pensadas para contemplar un montón de casos de uso.&lt;/p&gt;
&lt;p&gt;Por suerte podemos cambiar esto, y construir comandos rápidos para realizar las tareas más cotidianas, como &lt;em&gt;buscar&lt;/em&gt; e &lt;em&gt;instalar&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;buscar&#34;&gt;Buscar&lt;/h2&gt;
&lt;p&gt;El primer comando que creamos es &lt;strong&gt;buscar&lt;/strong&gt;, que simplemente se encarga de realizar búsquedas en la base de datos de software disponible en los repositorio y mantener actualizados lo índices de búsqueda para responder rápido.&lt;/p&gt;
&lt;p&gt;Por ejemplo, si escribimos &lt;strong&gt;buscar stopmotion&lt;/strong&gt; en una consola de huayra:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/05/huayra-3-0--i386---Running--2015-05-19-23-29-26.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;aparecerán dos opciones, donde la primer columna de nombres en color verde son los nombres de paquetes, y lo que sigue es una descripción breve.&lt;/p&gt;
&lt;p&gt;Y también vale comentar que el comando &lt;strong&gt;buscar&lt;/strong&gt; realizará una actualización y optimización de búsquedas si fuera necesario, automáticamente:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/05/huayra-3-0--i386---Running--2015-05-19-23-28-32-png.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;instalar&#34;&gt;Instalar&lt;/h2&gt;
&lt;p&gt;El siguiente comando es &lt;strong&gt;instalar&lt;/strong&gt;, que nos sirve para descargar, instalar y configurar un paquete de forma automática escribiendo solamente su nombre.&lt;/p&gt;
&lt;p&gt;Volviendo al ejemplo anterior, si quisiéramos instalar o actualizar &lt;strong&gt;huayra-stopmotion&lt;/strong&gt; podemos escribir:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/05/huayra-3-0--i386---Running--2015-05-19-23-30-03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y listo: El mismo comando nos puede servir para realizar instalaciones y actualizar, ya sea un paquete o varios.&lt;/p&gt;
&lt;h2 id=&#34;ideas-a-futuro&#34;&gt;Ideas a futuro&lt;/h2&gt;
&lt;p&gt;Una vez que implementamos la primer versión, como era de esperar, nos dimos cuenta que llegamos a algo interesante, y que podemos comenzar a implementar funcionalidades nuevas poco a poco.&lt;/p&gt;
&lt;p&gt;Por ejemplo, nos gustaría añadirle una ayuda al comando &lt;em&gt;instalar&lt;/em&gt;, y que nos guíe si equivocamos el nombre de un paquete, algo así como hace google cuando nos muestra un texto que dice &amp;ldquo;usted quiso decir &amp;hellip;&amp;rdquo;, o incluso, que nos muestre una lista de los paquetes que podríamos actualizar.&lt;/p&gt;
&lt;p&gt;También podemos añadir algunos comandos como &lt;em&gt;doctor&lt;/em&gt;, para detectar problemas de configuración o imprimir sugerencias de actualización o algo así&amp;hellip;&lt;/p&gt;
&lt;p&gt;En fin, los dejo con el &lt;a href=&#34;https://github.com/HuayraLinux/huayra-alias&#34;&gt;link al proyecto en github&lt;/a&gt;, donde te invitamos a participar del desarrollo junto a nosotros: pensar funcionalidades nuevas, buscar errores y programar :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Haciendo indicadores de actualización</title>
      <link>https://www.examplelab.com.ar/posts/2015-03-01-indicadores-de-version/</link>
      <pubDate>Sun, 01 Mar 2015 04:30:33 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2015-03-01-indicadores-de-version/</guid>
      <description>&lt;p&gt;Esta semana pusimos en marcha un indicador de versiones muy simple para las aplicaciones de &lt;a href=&#34;http://huayra.conectarigualdad.gob.ar/&#34;&gt;huayra&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hicimos algo similar a lo que venía haciendo en &lt;a href=&#34;http://www.pilas-engine.com.ar/&#34;&gt;pilas-engine&lt;/a&gt;, pero de manera mas sencilla:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/pilas-engine-2014-12-28-11-47-09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La idea es muy simple, cada vez que se abre una aplicación, buscamos informar a los usuarios si existe una versión mas reciente en nuestros servidores, y si es así, lo informamos.&lt;/p&gt;
&lt;h2 id=&#34;cómo-se-ve-en-las-aplicaciones&#34;&gt;¿Cómo se ve en las aplicaciones?&lt;/h2&gt;
&lt;p&gt;Imaginá que el usuario abre una aplicación como &lt;strong&gt;huayra-curriculum&lt;/strong&gt;, si está usando la versión más reciente va a observar algo así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/03/huayra-curriculum-2015-03-01-00-50-51.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En cambio, si está usando una versión anterior lo que
va a mostrarse es lo sigiuente:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/03/2015-03-01-00_02_15.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Este indicador funciona junto con un servicio web, así que el usuario se puede enterar de la actualización el mismo día de la publicación.&lt;/p&gt;
&lt;p&gt;En la imagen se puede ver que también incluimos un texto: &lt;em&gt;&amp;ldquo;Existe actualización&amp;rdquo;&lt;/em&gt;, que se puede pulsar, y te envía directamente a una página con información de la actualización.&lt;/p&gt;
&lt;p&gt;En estas primeras versiones, hicimos que &lt;a href=&#34;http://hugoruscitti.github.io/huayra-tips/#/actualizar/huayra-curriculum&#34;&gt;la página de actualización&lt;/a&gt; sea muy sencilla, incluyendo los pasos de actualización y algunas recomendaciones:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/03/HuayraTips-2015-03-01-00-08-24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Nuestra idea es que la página cuente lo mínimo e indispensable para que los usuarios puedan actualizar la aplicación rápidamente.&lt;/p&gt;
&lt;p&gt;Obviamente en el futuro nos gustaría que las actualizaciones se puedan hacer con un solo click, así que vamos a seguir trabajando :)&lt;/p&gt;
&lt;h2 id=&#34;cómo-funciona&#34;&gt;¿Cómo funciona?&lt;/h2&gt;
&lt;p&gt;Para que el indicador funcione correctamente tuvimos que construir varias cosas:&lt;/p&gt;
&lt;p&gt;En primer lugar, &lt;a href=&#34;https://github.com/lvm&#34;&gt;Mauro&lt;/a&gt; armó  un &lt;em&gt;webservice&lt;/em&gt; al que se le pueden hacer preguntas para conocer las versiones de los paquetes en huayra.&lt;/p&gt;
&lt;p&gt;Por ejemplo, si pedimos &lt;a href=&#34;http://devel.huayra.conectarigualdad.gob.ar/pkg/version/huayra-curriculum&#34;&gt;esta ruta con navegador&lt;/a&gt;, el &lt;em&gt;webservice&lt;/em&gt; nos retornará la información mas reciente del paquete  &lt;strong&gt;huayra-currilum&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/03/huayra-curriculum-2015-03-01-00-21-36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La segunda tarea consistió en armar un indicador de versión para cada una de las aplicaciones de huayra:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/03/Huayra-Motion-2015-03-01-00-34-08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y por último, para completar el circuito de actualización completo, armamos un sitio con el tutorial para actualizar aplicaciones. Haciendólo personalizable por cada aplicación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hugoruscitti.github.io/huayra-tips/#/actualizar/huayra-curriculum&#34;&gt;http://hugoruscitti.github.io/huayra-tips/#/actualizar/huayra-curriculum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Y acá un dato curioso: el sitio lo armé con ember, para que sea sencillo personalizar cada página, así que si incluís &lt;code&gt;?debug&lt;/code&gt; al final de la URL anterior vas a ver la separación entre modelo y contenido :)&lt;/p&gt;
&lt;h2 id=&#34;ideas-a-futuro&#34;&gt;Ideas a futuro&lt;/h2&gt;
&lt;p&gt;Hasta ahora logramos algo interesante, podemos tener la seguridad de que las nuevas versiones no van a pasar desapercibidas por mucho tiempo.&lt;/p&gt;
&lt;p&gt;Sin dudas el canal más directo para informar a los usuarios es la misma aplicación, pero creemos que se puede hacer mejor.&lt;/p&gt;
&lt;p&gt;Una de las cosas que me gustaría lograr es que las aplicaciones se puedan actualizar de forma más directa, como hace la aplicación de escritorio de &lt;a href=&#34;https://www.spotify.com/ar/&#34;&gt;spotify&lt;/a&gt; o el cliente gráfico de &lt;a href=&#34;https://github.com/&#34;&gt;github&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/03/687474703a2f2f6769746875622d696d616765732e73332e616d617a6f6e6177732e636f6d2f626c6f672f323031312f6d61632d73637265656e73686f74732f757067726164652e706e67.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es decir, las dos aplicaciones tienen un enfoque ideal de actualización (al menos para mí), porque descargan la actualización automáticamente y luego informan al usuario que puede &amp;ldquo;reiniciar&amp;rdquo; la aplicación para usar la nueva versión.&lt;/p&gt;
&lt;p&gt;La otra idea que me queda en mente por investigar, es una forma sencilla de integrar el sistema de versiones de github, y hacer mas sencillo mirar hacia atrás y ver el historial de todas las versiones publicadas.&lt;/p&gt;
&lt;p&gt;En fin, queda mucho por investigar, pero avanzamos :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¡ huayra-mu !</title>
      <link>https://www.examplelab.com.ar/posts/2015-02-09-llega-huayra-mu/</link>
      <pubDate>Mon, 09 Feb 2015 16:31:56 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2015-02-09-llega-huayra-mu/</guid>
      <description>&lt;p&gt;Hoy quiero presentarles una aplicación nueva, diseñada especialmente para el nuevo huayra 3.0, &lt;a href=&#34;https://github.com/hugoruscitti/huayra-mu&#34;&gt;huayra-mu&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/preview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La herramienta está orientada principalmente a programadores y diseñadores, porque permite crear la estructura inicial de un proyecto con mucha facilidad, siguiendo buenas prácticas y de manera muy rápida.&lt;/p&gt;
&lt;p&gt;La idea es simple, &lt;a href=&#34;https://github.com/hugoruscitti/huayra-mu&#34;&gt;huayra-mu&lt;/a&gt; se inicia desde una terminal, pregunta el nombre del proyecto, la tecnología a utilizar y listo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/2015-02-07-19_10_49.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El proyecto generado quedará guardado dentro de un directorio, en donde podemos encontrar los archivos iniciales para comenzar a trabajar.&lt;/p&gt;
&lt;h2 id=&#34;motivación&#34;&gt;Motivación&lt;/h2&gt;
&lt;p&gt;Cuando comenzamos un proyecto, hay muchas tareas que son comunes a casi cualquier proyecto: hacemos un repositorio, creamos los directorios iniciales, construimos los archivos de configuración, armamos los scripts para realizar los paquetes instalables, etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Hacer estas tareas iniciales por cada proyecto se hace algo tedioso y en muchos casos genera proyectos muy diferentes entre sí, o incompletos.&lt;/p&gt;
&lt;p&gt;Imagina estas tareas siendo realizadas una y otra vez, por cada nuevo proyecto&amp;hellip; ¿no sería bueno resolver esas tareas una sola vez?.&lt;/p&gt;
&lt;p&gt;El objetivo de &lt;a href=&#34;https://github.com/hugoruscitti/huayra-mu&#34;&gt;huayra-mu&lt;/a&gt; es que podamos hacer esa tarea inicial una sola vez y de manera óptima, reuniendo buenas prácticas y logrando consistencia en la estructura de nuestras aplicaciones.&lt;/p&gt;
&lt;h2 id=&#34;plantillas-incluidas&#34;&gt;Plantillas incluidas&lt;/h2&gt;
&lt;p&gt;Las plantillas son simplemente los modelos de aplicación inicial que te ofrece &lt;a href=&#34;https://github.com/hugoruscitti/huayra-mu&#34;&gt;huayra-mu&lt;/a&gt; al crear un nuevo proyecto. En esta primer etapa de la aplicación hicimos 4 plantillas, pero esperamos poder agregar algunas más conforme la aplicación se empiece a utilizar.&lt;/p&gt;
&lt;p&gt;Las plantillas que incluimos permiten hacer aplicaciones de escritorio con &lt;a href=&#34;http://nwjs.io/&#34;&gt;nwjs&lt;/a&gt;, videojuegos con &lt;a href=&#34;http://pilas-engine.com.ar/&#34;&gt;pilas-engine&lt;/a&gt; y presentaciones con &lt;a href=&#34;http://lab.hakim.se/reveal-js/&#34;&gt;reveal.js&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;html5&lt;/li&gt;
&lt;li&gt;emberjs&lt;/li&gt;
&lt;li&gt;pilas-engine&lt;/li&gt;
&lt;li&gt;reveal&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seguramente hay muchas otras tecnologías interesantes para sugerir, pero optamos por estas 4 para comenzar, además de que las conocemos y nos sienta bien recomendarlas sin dudarlo :)&lt;/p&gt;
&lt;h2 id=&#34;un-ejemplo-de-uso&#34;&gt;Un ejemplo de uso&lt;/h2&gt;
&lt;p&gt;A modo de ilustración, hagamos un pequeño proyecto de videojuego usando  &lt;a href=&#34;data/plantillas/nwjs-ember-seed&#34;&gt;huayra-mu&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;¿Que necesitamos?:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El primer paso es abrir una terminal y ejecutar el comando &lt;strong&gt;mu&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/huayra-mu-2015-02-07-20-42-16.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En pantalla tenemos que escribir el nombre de nuestro juego y luego elegir &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/huayra-mu-2015-02-07-20-46-12.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego se van a mostrar las instrucciones para comenzar a trabajar en el proyecto:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/ppp-2015-02-13-12-40-27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Si escribís esos pasos, la aplicación va a iniciar inmediatamente:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd mi-juego
make ejecutar_linux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/huayra-3---beta-febrero---32-bits--Running--2015-02-13-12-53-34.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;¿Pero qué hizo &lt;strong&gt;mu&lt;/strong&gt; por nosotros?, si abrimos &lt;em&gt;caja&lt;/em&gt; o comenzamos a navegar el contenido del directorio van a aparecernos varias cosas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/huayra-3---beta-febrero---32-bits--Running--2015-02-13-12-56-42.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mu&lt;/strong&gt; generó dos directorios, uno para el código (directorio &lt;code&gt;src&lt;/code&gt;) y otro para las imágenes y sonidos (el directorio &lt;code&gt;data&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Así que podríamos empezar a programar ahí mismo, editando o creando archivos nuevos en src.&lt;/p&gt;
&lt;p&gt;Por ejemplo, en mi equipo puedo abrir el editor &lt;strong&gt;geany&lt;/strong&gt; y comenzar a editar el archivo &lt;code&gt;src/juego&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/huayra-3---beta-febrero---32-bits--Running--2015-02-13-13-06-35.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ah, por cierto, si usaste &lt;a href=&#34;http://pilas-engine.com.ar/&#34;&gt;pilas-engine&lt;/a&gt; antes, vas a notar una novedad interesante en esta plantilla: cada vez que guardes el código, la ventana de pilas va  a detectar el cambio y se va actualizar sola. ¡No hace faltar cerrar y abrir la ventana!&lt;/p&gt;
&lt;h2 id=&#34;más-comandos&#34;&gt;Más comandos&lt;/h2&gt;
&lt;p&gt;Todos los proyectos que genera &lt;strong&gt;mu&lt;/strong&gt; vienen con una serie de comandos para hacer cosas típicas, como ejecutar la aplicación, publicar una nueva versión o incluso empaquetarla en un archivo &lt;code&gt;.deb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para ver estos comandos, lo único que tienes que hacer es llamar al comando &lt;code&gt;make&lt;/code&gt; dentro del directorio del proyecto:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/02/huayra-3---beta-febrero---32-bits--Running--2015-02-13-13-13-54.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ideas&#34;&gt;¿Ideas?&lt;/h2&gt;
&lt;p&gt;Me encantaría conocer qué otras tecnologías podemos agregar, ¿te animas a sugerirnos alguna?. ¿Qué otras tareas se pueden automatizar para ayudar a los desarrolladores?.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>La renovación de pilas-engine</title>
      <link>https://www.examplelab.com.ar/posts/2015-01-21-la-renovacion-de-pilas-engine/</link>
      <pubDate>Wed, 21 Jan 2015 02:26:10 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2015-01-21-la-renovacion-de-pilas-engine/</guid>
      <description>&lt;p&gt;Estamos muy cerca de lanzar la versión &lt;code&gt;0.91&lt;/code&gt; de &lt;em&gt;pilas-engine&lt;/em&gt;, así que me pareció buena idea compartir en el blog las características más importantes de esta nueva versión y contarte el por qué de estos cambios.&lt;/p&gt;
&lt;p&gt;Esta es una versión muy especial, principalmente porque añadimos muchos cambios en la estructura completa del motor.&lt;/p&gt;
&lt;p&gt;Por supuesto no hice estos cambios solo. Irving, Quique Porta, Fernando Salamero, Walter Velazquez y el equipo de HuayraLinux hicieron posible esta nueva versión.&lt;/p&gt;
&lt;h2 id=&#34;por-qué-refactorizar&#34;&gt;¿Por qué refactorizar?&lt;/h2&gt;
&lt;p&gt;En las primeras versiones del motor, &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; no era una herramienta que incluía manual, interfaz gráfica o intérprete. &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; era sólo un módulo de python que podía ser utilizado desde la consola estándar de python.&lt;/p&gt;
&lt;p&gt;Por ese motivo, algunas cosas eran globales y estaban pensadas para tener un solo punto de salida: el cierre del proceso (mediante &amp;ldquo;sys.exit&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image04.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero cuando el proyecto comenzó a crecer, nos dimos cuenta que a muchos chicos no les resultaba muy atractivo el intérprete estándar de python, y con mucha razón: el intérprete de python no tiene colores, no cuenta con autocompletado, los errores están en inglés etc &amp;hellip;&lt;/p&gt;
&lt;p&gt;Así que poco a poco fuimos implementando nuestro propio intérprete python, una ventana que sirva de punto inicial y muchas cosas más. Por eso, al seguir en esa dirección, pilas comenzó a convertirse en un entorno de desarrollo, incorporando un manual, ejemplos, modos para realizar depuraciones y todo eso buscando una experiencia uniforme para los sistemas Linux, Mac y Windows.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero en este punto, se hacía muy difícil construir arriba de la arquitectura inicial, necesitábamos abordar un enfoque diferente: usando componentes que pudieramos poner a prueba con tests y reduciendo los &lt;em&gt;hacks&lt;/em&gt; al mínimo&amp;hellip;&lt;/p&gt;
&lt;p&gt;Incluso hace unos años, cuando armé el proyecto &lt;em&gt;patín&lt;/em&gt; tuve problemas similares al querer re-iniciar pilas&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ahora-pensando-en-integrarse&#34;&gt;Ahora, pensando en integrarse&lt;/h2&gt;
&lt;p&gt;A diferencia de la primer arquitectura, donde muchas variables eran globales al módulo, en esta nueva versión buscamos representar a &lt;strong&gt;pilas&lt;/strong&gt; como un objeto, y no como un módulo.&lt;/p&gt;
&lt;p&gt;La idea de “hablar” con &lt;strong&gt;pilas&lt;/strong&gt; como un objeto es poder &lt;em&gt;iniciar&lt;/em&gt;, &lt;em&gt;pausar&lt;/em&gt;, &lt;em&gt;reiniciar&lt;/em&gt; o descartar el contexto de &lt;strong&gt;pilas&lt;/strong&gt; tantas veces como sea necesario. Además nos permitirá integrarlo con mayor facilidad a otras interfaces.&lt;/p&gt;
&lt;p&gt;Este es un ejemplo en donde se inicializa pilas como un componente para una interfaz:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import pilasengine

pilas = pilasengine.iniciar()
widget = pilas.obtener_widget()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En este punto, podríamos usar el objeto “widget” dentro del intérprete:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esta facilidad de integración también simplifica un poco la tarea de empaquetado para otras plataformas, gnu/linux no dá muchos problemas, pero en Mac osx y Windows aparecen varios problemas: la forma en la que inicializamos el intérprete producía errores difíciles de capturar, teníamos que lidiar con manejo de múltiples instancias en memoria de pilas y procesos para sortear este problema de diseño.&lt;/p&gt;
&lt;h2 id=&#34;un-solo-motor-pyqt&#34;&gt;Un solo motor: pyqt&lt;/h2&gt;
&lt;p&gt;Una de las cosas que había planificado inicialmente en pilas es soportar varias bibliotecas por debajo; o &amp;ldquo;engines&amp;rdquo; como se les suele decir.&lt;/p&gt;
&lt;p&gt;Pilas utilizaba SFML, pyqt y en algún momento soportó pyglet, según el programador seleccione. Era una forma de proveer mayor soporte a distintos equipos y hacer de &lt;strong&gt;pilas&lt;/strong&gt; una especie de “capa” que unifica el uso de multimedia para videojuegos, como una plataforma de abstracción y simplificación.&lt;/p&gt;
&lt;p&gt;Lo cierto es que luego de varias versiones comenzó a notarse el costo de mantener varios motores&amp;hellip; y después de todo, fuimos notando que pyqt podía resolver muy bien todas las necesidades que teníamos en mente. No tenía mucho sentido invertir tiempo en mantener otros motores&amp;hellip;&lt;/p&gt;
&lt;p&gt;Sin embargo, como nos focalizamos en pyqt y nunca decidimos abandonar el resto de los motores oficialmente, la arquitectura de pilas quedó con mucho código pensado para soportar otros motores. Llegamos al punto en donde el diseño es algo más complejo de lo que necesitamos, así que me pareció buena idea aprovechar la posibilidad para simplificarlo.&lt;/p&gt;
&lt;p&gt;Al simplificarlo, ahora pilas ya no tiene un atributo &amp;ldquo;motor&amp;rdquo;, el código de manejo de imágenes, sonidos y eventos quedó mucho más simple, todo usando pyqt y pygame solamente para audios (solo porque phonon, el plugin para gestionar sonidos en qt, no funciona en varios casos).&lt;/p&gt;
&lt;p&gt;Este es un ejemplo de esa inicialización en la nueva clase Pilas.Observa que ahora solo tenemos un punto de selección para el motor, puede tener aceleración gráfica o no:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image00.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto es algo bastante contundente si tenías en mente el modo de funcionamiento de pilas hace unos años, ahora es mucho mas simple y hasta dan ganas de añadirle cosas :)&lt;/p&gt;
&lt;h2 id=&#34;notificaciones&#34;&gt;Notificaciones&lt;/h2&gt;
&lt;p&gt;Ahora el motor utiliza archivos de &lt;strong&gt;log&lt;/strong&gt; como las aplicaciones web tradicionales, podrías ver el funcionamiento completo del motor mirando el archivo de log que produce pilas y emitiendo tus propios mensajes.&lt;/p&gt;
&lt;p&gt;Para inicializar el reporte de errores tenemos que inicializar pilas con el flag “habilitar_mensajes_log”:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import pilasengine

pilas = pilasengine.iniciar(habilitar_mensajes_log=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Y por un terminal tendríamos que ver cada uno de los mensajes que nos permiter ver &amp;ldquo;qué&amp;rdquo; está haciendo pilas en cada momento.&lt;/p&gt;
&lt;p&gt;Este &lt;em&gt;flag&lt;/em&gt; también se puede cambiar en cualquier momento, llamando a:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pilas.habilitar_mensajes_log(False)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;o bien:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pilas.habilitar_mensajes_log(False)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pienso que esta funcionalidad puede ser útil para conocer “qué” hace pilas internamente en cada momento, e incluso nos permitiría a futuro hacer distintos tipos de log. Ahora solo existe este tipo de “log” en consola, pero podríamos hacer uno que guarde un archivo en disco, o que imprima en una ventana de pyqt, algo similar a lo que hace el navegador web cuando encuentra errores:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;manejo-de-errores&#34;&gt;Manejo de errores&lt;/h2&gt;
&lt;p&gt;Otro punto a mejorar en las versiones anteriores de &lt;em&gt;pilas&lt;/em&gt; era el manejo de errores. Porque inicialmente nunca habíamos pensando exactamente el flujo de errores y notificaciones para el programador. Cuando pilas fallaba, la aplicación entera podía quedar &amp;ldquo;congelada&amp;rdquo; o cerrarse de forma abrupta&amp;hellip;&lt;/p&gt;
&lt;p&gt;Ahora, cada vez que hay un error, &lt;strong&gt;pilas&lt;/strong&gt; detiene su bucle principal y pone un cartel con el motivo del error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto ayuda a eliminar por completo los efectos colaterales que teníamos con respecto a los errores dentro del bucle de pilas, esos errores que ocurrían y se imprimían una y otra vez en la consola o volvían inestable todo el proceso.&lt;/p&gt;
&lt;p&gt;Al mismo tiempo hace completamente compatible la experiencia de tener un error en distintos sistemas operativos. Hasta ahora, cuando teníamos un error, había que mirar la consola si estábamos en GNU/Linux, ver el diálogo modal en Windows o atender los mensajes de sistema si estábamos en OSX …&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Este nuevo sistema de notificación de errores está implementado como una escena nueva, que se puede encontrar en el archivo &lt;code&gt;pilasengine/escenas/error.py&lt;/code&gt;. Básicamente es una escena con el fondo Plano y dos actores de texto que muestran la excepción. Tal vez en el futuro pongamos algo mas de divertido para anunciar el error: &lt;a href=&#34;http://www.intertech.com/Blog/funny-computer-error-messages/&#34;&gt;http://www.intertech.com/Blog/funny-computer-error-messages/&lt;/a&gt; (en busca de inspiración…)&lt;/p&gt;
&lt;h2 id=&#34;livereload-y-prototipado&#34;&gt;Livereload y prototipado&lt;/h2&gt;
&lt;p&gt;Con estos cambios es más sencillo y limpio reiniciar &lt;strong&gt;pilas&lt;/strong&gt;, así que podemos implementar livereload y acelerar el prototipado de juegos. Por ejemplo, en el siguiente video estoy editando un script sencillo, cada vez que guardo el archivo pilas lo reconoce y lo vuelve a ejecutar completo:&lt;/p&gt;
&lt;iframe width=&#34;960&#34; height=&#34;720&#34; src=&#34;//www.youtube.com/embed/BrLq25JsYk8?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;inicializadores-de-actores-y-escenas&#34;&gt;Inicializadores de actores y escenas&lt;/h2&gt;
&lt;p&gt;Algo característico de pilas, es que construir actores y escenas es muy simple, podemos escribir:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pilas.actores.Aceituna()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y el actor aparece inmediatamente en pantalla. En muchas otras bibliotecas de juegos necesitamos guardar una referencia al objeto y luego “agregarlo” a una lista de sprites a dibujar o árbol de nodos.&lt;/p&gt;
&lt;p&gt;Para hacer que esta característica se conserve, necesitamos poder vincular el actor creado con el objeto pilas automáticamente. La forma que descubrí para hacer esto me parece bastante útil, aunque es un poco rara…&lt;/p&gt;
&lt;p&gt;Cuando el programador escribe “pilas.actores.Aceituna()” en lugar de estar invocando directamente a la clase Actor, ahora “Actor()” podría ser un método:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;De esta forma, al crear un actor podemos invocar a su constructor internamente y producir la vinculación.&lt;/p&gt;
&lt;p&gt;Otra cosa útil de este enfoque, es que podemos simplificar la creación de nuevos actores. No va a ser necesario re-definir los constructores. Podemos decirle a cualquier chico “para implementar un actor, construí una clase con estos dos métodos”, no hace falta _ &lt;em&gt;init&lt;/em&gt; _ :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from pilasengine import Actor

class NuevActor(Actor):

    def iniciar(self):
        […]

    def actualizar(self):
        […]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esta idea también podríamos llevarla a pilasweb, para que crear actores no necesite anteponer “new” y las sintaxis sean lo más parecidas posibles.&lt;/p&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;Aprovechando la refactorización, comencé a pulir algunos tests y terminé haciendo una batería de tests más robusta y completa.&lt;/p&gt;
&lt;p&gt;Ejecutando “make” podemos ver el comando disponible para ejecutar los test y otras cosas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image05.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ahora cuando cambiamos el código de pilas, tenemos la posibilidad de corroborar que la mayor parte de la biblioteca continúa funcionando correctamente.&lt;/p&gt;
&lt;p&gt;Mi intensión es hacer que estos tests funcionen bien sobre “travis-ci.org”, así podemos tener tests automáticos cada vez que hacemos “push” sobre github, de la misma forma que ocurre con pilasweb.&lt;/p&gt;
&lt;p&gt;Este es un ejemplo de travis ejecutando tests de un cambio que introdujo irving:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;otras-ideas-para-pensar&#34;&gt;Otras ideas para pensar…&lt;/h2&gt;
&lt;p&gt;¿Podremos implementar estas mejoras y hacerlas retro-compatibles?, ¿qué otras cosas podríamos mejorar?, ¿Nos ayudaría a unificar la interfaz entre pilas y pilas-web?.&lt;/p&gt;
&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;
&lt;p&gt;Mientras escribía este documento, hice algunas pruebas y bocetos sobre el siguiente repositorio, si todo sale bien, se volverá el código principal de la próxima versión de pilas-engine:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hugoruscitti/python-pilas-experimental&#34;&gt;https://github.com/hugoruscitti/python-pilas-experimental&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Puede ser útil para consultar dudas o ver el progreso de estas ideas. Hay varias cosas implementadas, pero va avanzando&amp;hellip;&lt;/p&gt;
&lt;p&gt;PD: Ningún método, módulo o actor de pilas fue dañado mientras se escribió este documento.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Escalando imágenes con node-webkit</title>
      <link>https://www.examplelab.com.ar/posts/2015-01-06-escalando-imagenes-con-node-webkit/</link>
      <pubDate>Tue, 06 Jan 2015 18:37:43 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2015-01-06-escalando-imagenes-con-node-webkit/</guid>
      <description>&lt;p&gt;En este artículo quiero mostrar cómo se pueden procesar imágenes de manera rápida y multiplataforma desde &lt;a href=&#34;https://github.com/rogerwang/node-webkit&#34;&gt;node-webkit&lt;/a&gt;, usando &lt;a href=&#34;http://www.imagemagick.org/&#34;&gt;ImageMagick&lt;/a&gt; y &lt;a href=&#34;http://emberjs.com/&#34;&gt;emberjs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ImageMagick&lt;/em&gt; es un conjunto de herramientas para procesar imágenes: escalar, recortar, convertir y aplicar efectos principalmente.&lt;/p&gt;
&lt;h1 id=&#34;un-pequeño-ejemplo&#34;&gt;Un pequeño ejemplo&lt;/h1&gt;
&lt;p&gt;Para mostrar cómo combinar estas dos tecnologías, armé un proyecto mas pequeño a modo de ejemplo. Está disponible en el repositorio &lt;a href=&#34;https://github.com/hugoruscitti/image-resizer-node-webkit&#34;&gt;hugoruscitti/image-resizer-node-webkit&lt;/a&gt; de mi cuenta en github.&lt;/p&gt;
&lt;p&gt;La aplicación simplemente convierte la imagen que enviemos a 2 tamaños diferentes, y lo informa en pantalla. No importa cuan grande sea la imagen, el trabajo pesado lo hará imagemagick :)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/animacion.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;paso-a-paso&#34;&gt;Paso a paso&lt;/h1&gt;
&lt;p&gt;Veamos paso a paso la realización de este prototipo usando ember, node-webkit y la integración de ImageMagick.&lt;/p&gt;
&lt;h2 id=&#34;estructura-inicial&#34;&gt;Estructura inicial&lt;/h2&gt;
&lt;p&gt;Para armar el ejemplo comencé con la &lt;a href=&#34;https://github.com/hugoruscitti/node-webkit-ember-seed&#34;&gt;estructura inicial del proyecto&lt;/a&gt; que te había comentado en el &lt;a href=&#34;http://examplelab.com.ar/usando-ember-cli-con-node-webkit/&#34;&gt;post anterior&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Luego integré &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;bootstrap&lt;/a&gt; y un tema de &lt;a href=&#34;http://bootswatch.com/&#34;&gt;bootswatch&lt;/a&gt; con los comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install --save-dev ember-cli-bootswatch
ember generate ember-cli-bootswatch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y agregando el nombre del tema &lt;a href=&#34;http://bootswatch.com/lumen/&#34;&gt;lumen&lt;/a&gt; en el archivo &lt;code&gt;app.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;[...]
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EmberApp&lt;/span&gt;({
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ember-cli-bootswatch&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lumen&amp;#39;&lt;/span&gt;
});
[...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Con esto, la aplicación ya tiene esta apariencia:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/node-webkit-ember-seed-2015-01-03-00-18-14.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;creando-la-interfaz&#34;&gt;Creando la interfaz&lt;/h2&gt;
&lt;p&gt;Para indicarle a la aplicación la imagen que tiene que procesar hay muchas opciones, pero me pareció que la mas sencilla es tener una zona dentro de la aplicación para soltar el archivo y listo, algo así como hace &lt;a href=&#34;http://www.mirovideoconverter.com/&#34;&gt;Miro Video Converter&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/Miro-Video-Converter-2015-01-03-00-30-24.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero algo mas básico, porque en este caso alcanza con tener la zona para soltar archivos y un pequeño espacio para mostrar mensajes:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image-resizer-node-webkit-2015-01-03-17-41-00.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Hacer la interfaz usando las herramientas que brinda &lt;em&gt;emberjs&lt;/em&gt; es bastante práctico, primero armé dos componentes. Uno para representar la zona donde se pueden soltar archivos y otra para los mensajes.&lt;/p&gt;
&lt;p&gt;Estos son los comandos que hacen el código inicial de los componentes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ember generate component iresize-dropzone
ember generate component iresize-messages
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image-resizer-node-webkit-2015-01-03-00-40-48.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego, para componer la interfaz armé la ruta &lt;code&gt;index&lt;/code&gt; con:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ember g route index
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y luego edité el archivo &lt;code&gt;app/templates/index.hbs&lt;/code&gt; para mostrar estos dos componentes nuevos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{iresize-dropzone}}
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;hr&lt;/span&gt;/&amp;gt;
{{iresize-messages}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;incorporando-archivos&#34;&gt;Incorporando archivos&lt;/h2&gt;
&lt;p&gt;Para poder colocar archivos en la aplicación hay que escribir un poco de código para atender los eventos de arrastrar y soltar archivos sobre la ventana.&lt;/p&gt;
&lt;p&gt;En el wiki de node-webkit hay un ejemplo que &lt;a href=&#34;https://github.com/rogerwang/node-webkit/wiki/Dragging-files-into-page&#34;&gt;tomé de referencia&lt;/a&gt;. Hace exactamente lo que quiero, y con un ejemplo. Lo único diferente, es que en este caso lo necesito encapsular dentro del componente :&lt;/p&gt;
&lt;script src=&#34;http://gist-it.sudarmuthu.com/github/hugoruscitti/image-resizer-node-webkit/blob/master/app/components/iresize-dropzone.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;Con esto ya tenemos div especial, que se pinta de color cuando estamos por soltar archivos y atiende el evento &lt;code&gt;drop&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/arrastrar.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;incorporando-imagemagick&#34;&gt;Incorporando ImageMagick&lt;/h2&gt;
&lt;p&gt;Para incorporar ImageMagick lo mas sencillo es instalar un paquete de node llamado &lt;a href=&#34;https://github.com/yourdeveloper/node-imagemagick&#34;&gt;imagemagick&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install imagemagick --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Este módulo simplemente ofrece una interfaz para acceder a los comandos de ImageMagick, pero no incluye ningún binario o biblioteca para compilar, es simplemente un &lt;em&gt;wrapper&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Por ejemplo, en mi equipo tengo instalado ImageMagick, y estos son los dos binarios que puedo usar desde la biblioteca:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;➤ which identify
/usr/local/bin//identify
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;➤ which convert
/usr/local/bin//convert
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Así que para convertir o identificar un archivo primero tengo que requerir el módulo, configurar las rutas y luego utilizarlo. Acá hay un ejemplo de invocación:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/index-html-2015-01-03-03-10-36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;incorporando-binarios&#34;&gt;Incorporando binarios&lt;/h2&gt;
&lt;p&gt;Ahora bien, que nuestra aplicación dependa de tener instalado ImageMagick en el equipo no es lo que buscamos, esto podría ser válido en un sistema con dependencias de software como &lt;em&gt;GNU/Linux&lt;/em&gt;, pero en windows (por ejemplo) no es nada común&amp;hellip; el usuario espera que la aplicación funcione sin instalar nada adicional.&lt;/p&gt;
&lt;p&gt;Así que vamos a incorporar imageMagick &amp;ldquo;dentro&amp;rdquo; de nuestra aplicación:&lt;/p&gt;
&lt;p&gt;Lo primero es descargar los binarios de ImageMagick tanto para windows como para OSX. En mi caso descargué ambos en sus versiones de 32 bits y los &lt;a href=&#34;https://www.dropbox.com/sh/hy5mg0ouvbx126u/AABJoKLgswbrBOc9aqxtYCsFa?dl=0&#34;&gt;subí a dropbox&lt;/a&gt; eliminando algunos archivos opcionales para hacerlo mas liviano.&lt;/p&gt;
&lt;p&gt;Luego los incorporé al directorio &lt;code&gt;public&lt;/code&gt;, que usa ember para colocar cualquier archivo estático. Algo así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/public-2015-01-03-13-01-31.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y luego podemos reproducir la misma prueba de antes, pero ahora usando los binarios internos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/index-html-2015-01-03-13-12-50.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;encapsulando-imagemagick&#34;&gt;Encapsulando ImageMagick&lt;/h2&gt;
&lt;p&gt;Para que el código de nuestra aplicación quede sencillo y fácil de comprender, podemos hacer un módulo y colocar ahí todo el código relacionado con ImageMagick:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ember generate util resizer
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2015/01/image-resizer-node-webkit-2015-01-03-13-37-44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El código del módulo es un poco largo, pero simplemente obtiene la ruta a los binarios (dependiendo de la plataforma) y luego retorna el resultado en forma de promesa:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hugoruscitti/image-resizer-node-webkit/blob/master/app/utils/resizer.js&#34;&gt;https://github.com/hugoruscitti/image-resizer-node-webkit/blob/master/app/utils/resizer.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;de esta forma, desde el controlador podemos convertir imágenes invocando al módulo &lt;code&gt;resizer&lt;/code&gt; así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resizer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;image-resizer-node-webkit/utils/resizer&amp;#39;&lt;/span&gt;;

&lt;span style=&#34;color:#a6e22e&#34;&gt;resizer&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;resize&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;input_path&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;output_path&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;).
        &lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;) {
          &lt;span style=&#34;color:#a6e22e&#34;&gt;self&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;messages&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;pushObject&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Creando &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;output&lt;/span&gt;);
        }).
        &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;) {
        	&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;reason&lt;/span&gt;);
        });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusiones&#34;&gt;Conclusiones&lt;/h2&gt;
&lt;p&gt;ImageMagick y node-webkit tienen un montón de cosas para seguir investigando, con este simple ejemplo pude resolver un problema particular, pero seguramente hay muchas otras aplicaciones que necesiten algo similar.&lt;/p&gt;
&lt;p&gt;Si te resulta útil lo que viste acá, ¡comentalo!.&lt;/p&gt;
&lt;p&gt;Te dejo un link al repositorio en donde está todo el código de &lt;a href=&#34;https://github.com/hugoruscitti/image-resizer-node-webkit&#34;&gt;este mini-ejemplo&lt;/a&gt;, los &lt;a href=&#34;https://www.dropbox.com/sh/hy5mg0ouvbx126u/AABJoKLgswbrBOc9aqxtYCsFa?dl=0&#34;&gt;binarios de ImageMagick&lt;/a&gt; alivianados listos para utilizar y &lt;a href=&#34;https://www.dropbox.com/sh/2iivinhqt9h4r5i/AACCKszLJ6S-8ZlJr2mboUBla?dl=0&#34;&gt;los binarios de la aplicación generada&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¡Saludos!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Usando ember-cli con node-webkit</title>
      <link>https://www.examplelab.com.ar/posts/2014-12-13-usando-ember-cli-con-node-webkit/</link>
      <pubDate>Sat, 13 Dec 2014 08:38:28 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-12-13-usando-ember-cli-con-node-webkit/</guid>
      <description>&lt;p&gt;Hace unas semanas estoy muy entusiasmado con &lt;a href=&#34;http://emberjs.com/&#34;&gt;emberjs&lt;/a&gt; y la posibilidad de incorporarlo en las aplicaciones desktop que desarrollamos en  &lt;a href=&#34;http://huayra.conectarigualdad.gob.ar&#34;&gt;huayra&lt;/a&gt; y &lt;a href=&#34;http://www.conectarigualdad.gob.ar/&#34;&gt;conectar igualdad&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/0cf15665a9146ba852bf042b0652780a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://emberjs.com/&#34;&gt;emberjs&lt;/a&gt; es un framework javascript para construir aplicaciones web, en cierta manera es similar a &lt;a href=&#34;https://angularjs.org/&#34;&gt;angularjs&lt;/a&gt;, pero con un &lt;a href=&#34;http://eviltrout.com/2013/06/15/ember-vs-angular.html&#34;&gt;enfoque diferente&lt;/a&gt; y algunas herramientas fantásticas como &lt;a href=&#34;http://www.ember-cli.com/&#34;&gt;ember-cli&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mi sorpresa principal fue encontrarme que &lt;a href=&#34;http://www.ember-cli.com/&#34;&gt;ember-cli&lt;/a&gt;, no funcionaba junto a node-webkit inmediatamente. Me llevó varias horas comprender el motivo y poder resolverlo, así que en este post voy a resumir lo que aprendí y lo quiero compartir con ustedes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: Si queres tomar un atajo, todo los pasos que realizo acá están en un repositorio que armé para iniciar proyectos llamado &lt;a href=&#34;https://github.com/hugoruscitti/node-webkit-ember-seed&#34;&gt;node-webkit-ember-seed&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;instalando-ember-cli&#34;&gt;Instalando ember-cli&lt;/h2&gt;
&lt;p&gt;Para desarrollar aplicaciones con ember es aconsejable usar una herramienta llamada &lt;a href=&#34;(http://www.ember-cli.com/)&#34;&gt;ember-cli&lt;/a&gt;, ya que nos permite crear fácilmente la estructura de la aplicación inicial, ejecutar tests y construir componentes fácilmente.&lt;/p&gt;
&lt;p&gt;Para instalarlo hay que ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g ember-cli
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;o bien:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo npm install -g ember-cli
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Si no tenés npm, tendrías &lt;a href=&#34;http://examplelab.com.ar/como-instalar-nodejs-en-huayra-linux/&#34;&gt;que instalar nodejs&lt;/a&gt; antes (npm es el gestor de paquetes que incluye nodejs).&lt;/p&gt;
&lt;h2 id=&#34;creando-un-proyecto-de-ejemplo&#34;&gt;Creando un proyecto de ejemplo&lt;/h2&gt;
&lt;p&gt;Para listar los pasos y mostrar como integrarlo a node-webkit, tomemos un directorio de ejemplo y vamos a construir una aplicación dentro.&lt;/p&gt;
&lt;p&gt;Estos son los comandos para iniciar el proyecto:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ejemplo
cd ejemplo
ember init ejemplo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Con esos comandos, ember va a comenzar a instalar todas
las dependencias:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/dependencias.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En este punto, podríamos probar la aplicación creada directamente
desde el navegador usando el comando &lt;code&gt;serve&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ember serve
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/serve.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y cualquier cambio que hagamos se va a ver directamente en el navegador, sin necesidad de reiniciar el servidor o actualizar el navegador :)&lt;/p&gt;
&lt;h2 id=&#34;integrando-a-node-webkit&#34;&gt;Integrando a node-webkit&lt;/h2&gt;
&lt;p&gt;Para crear la aplicación node-webkit, necesitamos construir el archivo &lt;code&gt;package.json&lt;/code&gt; con la definición del proyecto y compilar la aplicación.&lt;/p&gt;
&lt;p&gt;El archivo que tenemos que crear tiene que llamarse &lt;a href=&#34;https://github.com/hugoruscitti/node-webkit-ember-seed/blob/master/public/package.json&#34;&gt;&lt;code&gt;public/package.json&lt;/code&gt;&lt;/a&gt; y
puede tener este contenido:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;main&amp;quot;: &amp;quot;app://localhost/index.html&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;ejemplo&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;,
  &amp;quot;window&amp;quot;: {
    &amp;quot;title&amp;quot;: &amp;quot;Ejemplo&amp;quot;,
    &amp;quot;width&amp;quot;: 800,
    &amp;quot;height&amp;quot;: 500,
    &amp;quot;toolbar&amp;quot;: true,
    &amp;quot;position&amp;quot;: &amp;quot;center&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luego tenemos que asegurarnos de colocar las rutas como &lt;code&gt;node-webkit&lt;/code&gt; las espera en el archivo &lt;code&gt;config/environment.js&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/config.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Posiblemente ni siquera tengas que cambiarlas, al menos en la versión que utilizo aquí de &lt;code&gt;ember-cli&lt;/code&gt; no hizo falta.&lt;/p&gt;
&lt;p&gt;Por último, tenemos que generar el proyecto con &lt;code&gt;ember build&lt;/code&gt; y probar la aplicación
con &lt;code&gt;open -a nodewebkit dist&lt;/code&gt; (en mac) o &lt;code&gt;nw dist&lt;/code&gt; (en huayra/linux):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/prueba-nw.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;el-bug&#34;&gt;El bug&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Nos faltaría un solo paso, aún, porque si pulsamos el botón para abrir las herramientas de desarrollo de nodewebkit vamos a ver un error así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/error.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El problema se origina porque &lt;code&gt;ember-cli&lt;/code&gt; re-define la función &lt;code&gt;require&lt;/code&gt; que espera usar node-webkit, así que podemos hacer
algunos cambios en el archivo &lt;code&gt;app/index.html&lt;/code&gt; para resolverlo.&lt;/p&gt;
&lt;p&gt;Lo ideal es que tanto &lt;code&gt;ember-cli&lt;/code&gt; y &lt;code&gt;node-webkit&lt;/code&gt; puedan acceder a su propia función &lt;code&gt;require&lt;/code&gt;, así que redefiní la función de modo tal que responda tal y como espera cada uno:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/12/patch.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Este es el contenido &lt;code&gt;app/index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IE=edge&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Ejemplo&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1&amp;#34;&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_nodewebkit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;);

      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;is_nodewebkit&lt;/span&gt;) {
        window.&lt;span style=&#34;color:#a6e22e&#34;&gt;node_require&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;;
      }
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;

    {{content-for &amp;#39;head&amp;#39;}}

    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;assets/vendor.css&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;assets/pilas-engine-bloques.css&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
    {{content-for &amp;#39;body&amp;#39;}}

    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;assets/vendor.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;assets/pilas-engine-bloques.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;

    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_nodewebkit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;);

      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;is_nodewebkit&lt;/span&gt;) {
        window.&lt;span style=&#34;color:#a6e22e&#34;&gt;ember_require&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;;

        window.&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;) {
          &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;ember_require&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;);
          } &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;node_require&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;);
          }
        }
      }
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;

  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;activando-live-reload-con-node-wekbit&#34;&gt;Activando live reload con node-wekbit&lt;/h2&gt;
&lt;p&gt;Por último, hay una forma de actividad el modo &lt;code&gt;live-reload&lt;/code&gt; en &lt;code&gt;node-webkit&lt;/code&gt;, la idea es agregar una sentencia dentro
del archivo &lt;code&gt;app/index.html&lt;/code&gt; para actualizar node-webkit así:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&#39;livereload.js&#39;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y luego crear el archivo &lt;code&gt;public/livereload.js&lt;/code&gt; con este contenido:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#a6e22e&#34;&gt;fs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;watchFile&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nw.gui&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;Window&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;reloadIgnoringCache&lt;/span&gt;();
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;De esa forma, cada vez que cambiemos un archivo desde el editor, &lt;a href=&#34;&#34;&gt;ember-cli&lt;/a&gt; va a detectar los cambios, se va a iniciar la re-compilación, nuestro script encontrará que se actualizó algo y lanzará la actualización de toda la aplicación:&lt;/p&gt;
&lt;iframe width=&#34;1280&#34; height=&#34;720&#34; src=&#34;//www.youtube.com/embed/BFDwHhcKOjs?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;En fin, nada mal, se vuelve bastante productivo prototipar aplicaciones así, veremos que tal va para las nuevas aplicaciones que tenemos en mente en &lt;a href=&#34;http://huayra.conectarigualdad.gob.ar&#34;&gt;huayra&lt;/a&gt; y &lt;a href=&#34;http://www.conectarigualdad.gob.ar/&#34;&gt;conectar-igualdad&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¡Saludos!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Presentando huayra-caripela</title>
      <link>https://www.examplelab.com.ar/posts/2014-06-27-presentando-caripela/</link>
      <pubDate>Fri, 27 Jun 2014 22:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-06-27-presentando-caripela/</guid>
      <description>&lt;p&gt;Hace unas semanas empezamos a realizar una aplicación nueva:  &lt;em&gt;huayra-caripela&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Es una aplicación muy sencilla, que sirve para hacer avatares y personalizar las preferencias de tu usuario en &lt;em&gt;huayra linux&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/Caripela_2014_06_22_19_20_12_2014_06_22_19_20_24.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Como se puede ver en la captura, &amp;ldquo;caripela&amp;rdquo; te muestra una galería de objetos en pantalla para armar un rostro, con muchas posibles combinaciones:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/Caripela_2014_06_22_18_44_52_2014_06_22_18_47_20.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/Caripela_2014_06_22_18_50_45_2014_06_22_18_50_48.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;iframe width=&#34;960&#34; height=&#34;720&#34; src=&#34;//www.youtube.com/embed/B6qsvYkTTAA?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;por-qué&#34;&gt;¿Por qué?&lt;/h2&gt;
&lt;p&gt;Pensamos que sería buena idea contar con una aplicación que te permita dibujar fácilmente, realizar un avatar representativo y que puedas darle un toque personal a tu configuración de usuario.&lt;/p&gt;
&lt;p&gt;En &lt;em&gt;huayra&lt;/em&gt; el perfíl de usuario se ve en varios lados, por ejemplo en la pantalla inicial de acceso y en huayra-compartir:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/huayra_rc4__Running__2014_06_22_19_21_44_2014_06_22_19_22_17.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/huayra_rc4__Running__2014_06_22_19_28_08_2014_06_22_19_28_27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;y-cómo-está-hecho&#34;&gt;¿Y cómo está hecho?&lt;/h2&gt;
&lt;p&gt;Usamos varias herramientas y algunas prácticas que aprendimos hace unas semanas, imaginá que hicimos esta aplicación en muy poquitos días, prototipando y aprendiendo sobre la marcha.&lt;/p&gt;
&lt;p&gt;Usamos &lt;a href=&#34;http://fabricjs.com/&#34;&gt;fabric.js&lt;/a&gt; para que los chicos puedan manipular cada parte del personaje que quieren construir. &lt;a href=&#34;http://fabricjs.com/&#34;&gt;fabric.js&lt;/a&gt;  actúa sobre el canvas de HTML5 y agrega controles a cada objeto, además nos brinda una API para exportar todas las figuras a diferentes formatos de imágenes, como .PNG o .SVG, entre otras características más.&lt;/p&gt;
&lt;p&gt;Otras herramientas que usamos fueron &lt;a href=&#34;https://github.com/rogerwang/node-webkit&#34;&gt;nodewebkit&lt;/a&gt;, &lt;a href=&#34;https://angularjs.org/&#34;&gt;angularjs&lt;/a&gt; y &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;bootstrap&lt;/a&gt;, al igual que hicimos con otras aplicaciones como huayra-motion y huayra-compartir.&lt;/p&gt;
&lt;p&gt;Internamente la aplicación, &amp;ldquo;lee&amp;rdquo; un directorio de imágenes SVG que representan a cada una de las piezas que podrías usas para realizar las caripelas. Así que para agregar nuevas piezas simplemente se pueden copiar mas archivos SVG dentro de esa carpeta.&lt;/p&gt;
&lt;h2 id=&#34;y-si-fuera-web&#34;&gt;¿Y si fuera web?&lt;/h2&gt;
&lt;p&gt;Si bien la aplicación es offline, también experimentamos con crear una versión online, donde todos podamos crear nuestras &amp;ldquo;Caripelas&amp;rdquo; y compartirlas sin necesidad de instalar nada, todo funciona desde el navegador:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;http://dev-losersjuegos.com.ar:9599/&#39; target=&#39;_black&#39;&gt;Ingresar a caripela on-line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Obviamente esta versión online es sólo un experimento, lo creamos para evaluar el costo de llevar un aplicación como &lt;em&gt;caripela&lt;/em&gt; a un webserver y experimentar con &lt;a href=&#34;http://sailsjs.org/&#34;&gt;sailsjs&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/Caripela_2014_06_22_19_04_02_2014_06_22_19_04_06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;descarga-e-instalación&#34;&gt;Descarga e instalación&lt;/h2&gt;
&lt;p&gt;Actualmente la aplicación se puede descargar  desde &lt;a href=&#34;https://github.com/hugoruscitti/caripela&#34;&gt;github&lt;/a&gt; e incluso se puede instalar en huayra con el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install caripela
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y luego va a estar visible en el menú:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/huayra_rc4__Running__2014_06_22_19_12_27_2014_06_22_19_12_55.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y la versión online que mencionamos antes también está en &lt;a href=&#34;https://github.com/hugoruscitti/caripelaweb&#34;&gt;github&lt;/a&gt;, solo que esta versión online es un poco mas compleja de hacer andar (requiere node, sailsjs etc&amp;hellip;):&lt;/p&gt;
&lt;h2 id=&#34;ideas-a-futuro&#34;&gt;Ideas a futuro&lt;/h2&gt;
&lt;p&gt;¿Que te gustaría ver en las siguientes versiones de &lt;em&gt;huayra-caripela&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Seguramente en estos días estemos agregando algunas mejoras y actualizando algunos detalles que nos quedaron en el tintero. Cualquier sugerencia o idea que quieras compartir con nosotros vamos a estar super agradecidos de escucharla ;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hackatón de Program.AR</title>
      <link>https://www.examplelab.com.ar/posts/2014-06-11-llego-program-ar/</link>
      <pubDate>Wed, 11 Jun 2014 01:07:26 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-06-11-llego-program-ar/</guid>
      <description>&lt;p&gt;Este viernes se realizó al hackatón del primer foro regional &lt;code&gt;&amp;lt;program.AR\&amp;gt;&lt;/code&gt; en la universidad de Quilmes.&lt;/p&gt;
&lt;p&gt;La experiencia estuvo increible:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/10454306_245544275652369_1875185198295326733_n.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/BpcrF_oIIAAkQyb.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/0000033340.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al evento asistimos el equipo completo de &lt;em&gt;huayra&lt;/em&gt; y muchos amigos de la comunidad educativa: los chicos de &lt;em&gt;educ.ar&lt;/em&gt;, &lt;em&gt;sadosky&lt;/em&gt;, &lt;em&gt;Jefatura de Gobierno&lt;/em&gt; y &lt;em&gt;pyar&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El evento estuvo espectacular, y si bien nos quedamos con ganas de programar un poco mas de tiempo, la ocasión sirvió para conocernos, debatir ideas y divertirnos.&lt;/p&gt;
&lt;h3 id=&#34;los-proyectos&#34;&gt;Los proyectos&lt;/h3&gt;
&lt;p&gt;Durante el hackatón se &lt;a href=&#34;http://progamba1.hackdash.org/&#34;&gt;realizaron varios proyectos&lt;/a&gt;, había grupos de 5 o 6 personas trabajando juntas en cada una de las ideas.&lt;/p&gt;
&lt;p&gt;Yo me sumé al equipo que estába haciendo la aplicación &lt;a href=&#34;https://github.com/ajchambeaud/escritorio-educativo&#34;&gt;escritorio educativo&lt;/a&gt;, ya que me encanta la idea de seguir aprendiendo sobre &lt;a href=&#34;https://github.com/rogerwang/node-webkit&#34;&gt;nodewebkit&lt;/a&gt; y la &lt;a href=&#34;http://datosabiertos.educ.ar/&#34;&gt;api pública de educ.ar&lt;/a&gt;. Así se veía la aplicación al finalizar la jornada:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/huayra_rc4__Running__2014_06_08_00_16_54_2014_06_08_00_17_48.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y al momento del cierre, cada uno de los equipos tuvo la oportunidad de mostrar el avance de cada idea. Por ejemplo, en esta foro está &lt;em&gt;Ainu&lt;/em&gt; mostrando la aplicación en la que trabajamos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/BpeQZZQIcAIkdRP.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;talleres&#34;&gt;Talleres&lt;/h3&gt;
&lt;p&gt;Durante el evento también se realizaron en simultáneo varios talleres sobre videojuegos, robótica, huayra y matemáticas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/BpdoTGPCEAAPiT4.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Aquí también el equipo de huayra estuvo a full, porque realizó cuatro talleres, uno de programación con python orientado a matemáticas, otro de &lt;a href=&#34;http://www.pilas-engine.com.ar/&#34;&gt;pilas-engine&lt;/a&gt; y dos de &lt;a href=&#34;http://huayra.conectarigualdad.gob.ar/&#34;&gt;huayra&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/taller.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/taller2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;para-mas-información-&#34;&gt;Para mas información &amp;hellip;&lt;/h3&gt;
&lt;p&gt;Te dejo algunos links útiles con más información sobre el evento:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mincyt.gob.ar/noticias/se-realizo-con-exito-el-primer-foro-programar-10092&#34;&gt;Nota del sitio Ministerio de CYT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.telam.com.ar/notas/201406/66213-se-desarrollo-el-hackaton-de-datos-publicos-futbol-y-educacion-de-programar.html?utm_content=buffer0acd6&amp;amp;utm_medium=social&amp;amp;utm_source=twitter.com&amp;amp;utm_campaign=buffer&#34;&gt;Nota en telam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ah, también está el sitio oficial de &lt;a href=&#34;http://program.ar&#34;&gt;program.ar&lt;/a&gt;, con tutoriales de pilas-engine y todo :)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jun/Program_AR_2014_06_07_23_53_32_2014_06_07_23_53_57.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Este es sólo el primero de varios foros regionales &lt;strong&gt;Program.AR&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;¡Espero poder asistir a muchos más!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>¡Empezó el curso online de pilas!</title>
      <link>https://www.examplelab.com.ar/posts/2014-05-26-empezo-el-curso-online-de-pilas/</link>
      <pubDate>Mon, 26 May 2014 02:49:18 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-05-26-empezo-el-curso-online-de-pilas/</guid>
      <description>&lt;p&gt;Esta semana arrancó la clase 3 del curso online de &lt;a href=&#34;http://pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;, un tutorial completo de programación, orientado a jóvenes que quieren crear sus propios videojuegos.&lt;/p&gt;
&lt;p&gt;El curso está online gracias a &lt;a href=&#34;http://www.educ.ar/&#34;&gt;educ.ar&lt;/a&gt;, que nos capacitó y puso a nuestra disposición un sin-fin de herramientas y apoyo.&lt;/p&gt;
&lt;h2 id=&#34;-y-cómo-es-&#34;&gt;¿ Y cómo es ?&lt;/h2&gt;
&lt;p&gt;El curso va dirigido a jóvenes de escuelas secundarias, con ganas de aprender a realizar sus propios videojuegos; programando, diseñando e incluso haciendo sus propios gráficos.&lt;/p&gt;
&lt;p&gt;El curso está online desde hace unas semanas; &lt;a href=&#34;http://www.educ.ar/&#34;&gt;educ.ar&lt;/a&gt; tiene una plataforma web que permite a los chicos ingresar y tomar talleres de todo tipo: diseño, robótica, música, y videojuegos :)&lt;/p&gt;
&lt;p&gt;Hay mas información al respecto &lt;a href=&#34;http://www.educ.ar/sitios/educar/noticias/ver?id=122825&#34;&gt;por aquí&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cada curso está dividido en clases, el de pilas-engine consta de 8 clases, cada una con video-tutoriales, ejercicios y varios recursos para hacer consultas y presentar las actividades:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/Untitled_2014_05_22_20_55_45_2014_05_22_20_55_47.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es interesante mencionar que las clases se publican cada semana, así que se genera un ritmo de trabajo copado, ya que durante la semana los chicos van realizando las actividades y nos cuentan su progreso.&lt;/p&gt;
&lt;h2 id=&#34;video-tutoriales&#34;&gt;Video tutoriales&lt;/h2&gt;
&lt;p&gt;Un componente super importante en el material de la clase son los videos-tutoriales.&lt;/p&gt;
&lt;p&gt;Las clases giran en torno a los video-tutoriales, hay textos y guías también, pero el contenido que se desarrolla está dividido en 3  4 videos por clase.&lt;/p&gt;
&lt;p&gt;Acá hay dos ejemplares para que te puedas dar una idea; este es teórico:&lt;/p&gt;
&lt;iframe width=&#34;960&#34; height=&#34;720&#34; src=&#34;//www.youtube.com/embed/1xkyGKJXdVA?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;y el otro un poco más práctico:&lt;/p&gt;
&lt;iframe width=&#34;960&#34; height=&#34;720&#34; src=&#34;//www.youtube.com/embed/PaiP0v7AHqQ?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;clase-especial-a-cargo-de-wally&#34;&gt;Clase especial a cargo de Wally&lt;/h2&gt;
&lt;p&gt;Para darle un toque especial, el curso también viene con una clase &lt;em&gt;bonus&lt;/em&gt; a cargo de Walter Velazquez, mostrando cómo realizar las imágenes para el videojuego y varios &lt;em&gt;tips&lt;/em&gt; para lograr imágenes pulidas y profesionales:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/TVJP___Clase_4___Video_2___Bocetado_y_retoques_mov_2014_04_07_16_33_24_2014_04_07_16_33_36.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Por cierto, creo que es una de las mejores clases. En breve intentará publicarla a todo el mundo :)&lt;/p&gt;
&lt;h2 id=&#34;ideas-a-futuro&#34;&gt;Ideas a futuro&lt;/h2&gt;
&lt;p&gt;Hacer el curso me hizo pensar varias en cosas, cuando quiero mostrar ideas o diseñar alguna herramienta pienso inmediatamente es escribir un texto o blog post, pero &amp;hellip; ¿no debería pensar en videos directamente?.&lt;/p&gt;
&lt;p&gt;Por supuesto hacer videos es mucho mas difícil que escribir, pero es un medio mucho mas rico también; sobretodo cuando la herramienta es tan visual como pilas.&lt;/p&gt;
&lt;p&gt;De hecho, hace rato venimos &lt;a href=&#34;http://foro-pilasengine.com.ar/t/curso-en-youtube-con-pilas-y-python-estaria-padre/48&#34;&gt;conversando sobre realizar más videotutoriales&lt;/a&gt; de pilas-engine, así que ya creo que es el momento.&lt;/p&gt;
&lt;p&gt;¡En breve arrancaremos con los video tutoriales de pilas-engine!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inventing on Principle en español</title>
      <link>https://www.examplelab.com.ar/posts/2014-05-04-inventing-on-principle-en-espanol/</link>
      <pubDate>Sun, 04 May 2014 00:23:57 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-05-04-inventing-on-principle-en-espanol/</guid>
      <description>&lt;p&gt;&lt;em&gt;Bret Victor&lt;/em&gt; dió una charla impresionante llamada &lt;strong&gt;Inventing on Principle&lt;/strong&gt;, invitando a las personas a descubrir un principio, algo que los guíe, una causa por que pelear.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/bret_victor___inventing_on_principle_1280x720_mp4_2014_05_03_15_27_37_2014_05_03_15_27_39.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es difícil resumir el potencial y lo inspirador de su enfoque. Sus ideas son transformadoras y valiosas para todos los programadores, artistas y creativos del mundo.&lt;/p&gt;
&lt;p&gt;Por ese motivo &lt;a href=&#34;https://github.com/JuloWaks/Subtitulos-Bret-Victor&#34;&gt;realizamos una traducción&lt;/a&gt; al español de su charla con un grupo de amigos. Hicimos un gran trabajo, nos llevó varios días realizarlo, y hoy pudimos terminar la compaginación y ponerlo online.&lt;/p&gt;
&lt;p&gt;El video completo ya está disponible en youtube para que los puedas ver:&lt;/p&gt;
&lt;iframe width=&#34;960&#34; height=&#34;720&#34; src=&#34;//www.youtube.com/embed/e7QYMgSk9s0?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Y el proyecto de traducción en github también &lt;a href=&#34;https://github.com/JuloWaks/Subtitulos-Bret-Victor&#34;&gt;está disponible&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;cómo-empezó&#34;&gt;¿Cómo empezó?&lt;/h3&gt;
&lt;p&gt;La idea de traducir el video de &lt;em&gt;bret&lt;/em&gt; era uno de los proyectos que había propuesto para &lt;a href=&#34;http://python.org.ar/PyCamp/2014&#34;&gt;pycamp 2014&lt;/a&gt;. Algo que siempre quise hacer, y que por suerte gustó a otras personas que se unieron a participar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/IMG41704_JPG___Flickr__Intercambio_de_fotos_2014_05_03_16_15_58_2014_05_03_16_16_18.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Obviamente en &lt;a href=&#34;http://python.org.ar/PyCamp/2014&#34;&gt;pycamp&lt;/a&gt; solo comenzamos, el trabajo mas grande de traducción se hizo luego, dia a dia.&lt;/p&gt;
&lt;h3 id=&#34;el-equipo&#34;&gt;El equipo&lt;/h3&gt;
&lt;p&gt;Esta traducción no hubiera sido posible sin el trabajo y colaboración de varias personas, al final del video coloqué una placa con el nombre de todos los que participamos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/subtitulos_inventing_on_principle_key_2014_05_03_16_03_50_2014_05_03_16_04_07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;incluso github tiene unas &lt;a href=&#34;https://github.com/JuloWaks/Subtitulos-Bret-Victor/graphs/contributors?from=2014-03-15&amp;amp;to=2014-04-26&amp;amp;type=a&#34;&gt;métricas&lt;/a&gt; sobre el equipo.&lt;/p&gt;
&lt;p&gt;Al principio comenzamos dividiendo la traducción en partes y registrando todo en github, pero luego nos resultó mas útil utilizar un board en &lt;a href=&#34;http://trello.com&#34;&gt;trello&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/trello.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y poco a poco, completando los subítulos, llegó el momento de componerlo nuevamente en un video y publicarlo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/Untitled_2_2014_05_03_14_29_34_2014_05_03_14_29_36.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/May/Sin_tC_tulo_key_2014_05_03_14_29_20_2014_05_03_14_29_23.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;agradecimientos&#34;&gt;Agradecimientos&lt;/h3&gt;
&lt;p&gt;Me siento muy contento de haber participado de la traducción, estoy enormente agradecido a todos los que participaron conmigo en la traducción.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&#34;https://github.com/chuna&#34;&gt;Melina&lt;/a&gt;, &lt;a href=&#34;https://github.com/pablocelayes&#34;&gt;Pablo&lt;/a&gt; y &lt;a href=&#34;https://github.com/JuloWaks&#34;&gt;Julian&lt;/a&gt;, ¡¡¡ muchisimas gracias !!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>StopMotion de &#34;yie ar kung-fu&#34;</title>
      <link>https://www.examplelab.com.ar/posts/2014-04-19-stopmotion_kungfu/</link>
      <pubDate>Sat, 19 Apr 2014 21:29:49 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-04-19-stopmotion_kungfu/</guid>
      <description>&lt;p&gt;Esta semana estuvimos haciendo nuestro primer mini corto de &lt;strong&gt;stomotion&lt;/strong&gt; con &lt;em&gt;Walter Velazquez&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/nueva.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Hicimos un pequeño homenajeando al videojuego &amp;ldquo;yie ar kung-fu&amp;rdquo;, un juego que habíamos jugado miles de veces cuando eramos chicos, usando la consola &lt;em&gt;family game&lt;/em&gt; (también llamada NES).&lt;/p&gt;
&lt;p&gt;Así se veía el mítico videojuego original en sus días de gloria:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/Yie_Ar_Kung_Fu__V1_2___J__201304102158068.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Nuestra idea era homenajearlo con una animación de &lt;em&gt;stopmotion&lt;/em&gt;, usando personajes de papel y &lt;a href=&#34;http://www.examplelab.com.ar/se-viene-huayra-motion/&#34;&gt;huayra-motion&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;recursos&#34;&gt;Recursos&lt;/h2&gt;
&lt;p&gt;Empezamos definiendo rápidamente la idea de la animación, &lt;em&gt;Walter&lt;/em&gt; ya tenía en mente las secuencias principales y los materiales para utilizar.&lt;/p&gt;
&lt;p&gt;El primer dia estuvimos imprimiendo y recortando todos los &lt;em&gt;Sprites&lt;/em&gt; del juego. En principio teníamos las dos pantallas principales, todos los movimientos de dos personajes y un plano en papel de un family game tipo papertoy:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/2014_04_08_20_00_35.jpeg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/_imagen_807.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/DSCN2250.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El componente principal de la animación era un &amp;ldquo;televisor&amp;rdquo; armado con un soporte metálico y una cubierta de papel:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/2014_04_08_20_00_12.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/2014_04_08_20_03_08.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;La idea de ese televisor, era &amp;ldquo;sostener&amp;rdquo; a los &lt;em&gt;sprites&lt;/em&gt; y permitirnos hacer las animaciones. Cada &lt;em&gt;sprite&lt;/em&gt; tenía un imán en la parte de atrás, así que podíamos pegarlo a la pantalla como si se tratara de un imán de heladeras:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/2014_04_08_20_01_03.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/DSCN2244.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;paso-a-paso&#34;&gt;Paso a paso&lt;/h2&gt;
&lt;p&gt;El segundo día estuvimos realizando varios ajustes a la cámara, usamos el mismo trípode que nos prestó la gente de &lt;em&gt;huayra&lt;/em&gt; y ajustamos el programa de captura de imágenes:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/DSCN2246.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/2014_04_08_20_22_52.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Apr/DSCN2254.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Capturar cuadro a cuadro toda la animación no fué tan laborioso, llevó unas horas pero fue muy divertido. A cada rato repetíamos la animación para ver cómo quedaba.&lt;/p&gt;
&lt;h2 id=&#34;el-resultado&#34;&gt;¡El Resultado!&lt;/h2&gt;
&lt;p&gt;Esta es la versión generada con efectos de sonido y algunos arreglos:&lt;/p&gt;
&lt;iframe width=&#34;960&#34; height=&#34;720&#34; src=&#34;//www.youtube.com/embed/bYPDYj5-4v8?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;cosas-que-aprendimos&#34;&gt;Cosas que aprendimos&lt;/h2&gt;
&lt;p&gt;Algo que no tuvimos en cuenta cuando empezamos es la importancia de la cámara y la iluminación.&lt;/p&gt;
&lt;p&gt;Quiero decir, teníamos en mente que no era un detalle menor, y anteriormente nos habían aconsejado cómo iluminar la escena. Pero no teníamos la experiencia personal de ver &amp;ldquo;cómo quedaba&amp;rdquo; si nos equivocábamos o que limitaciones de la cámara ibamos a poder evitar o no.&lt;/p&gt;
&lt;p&gt;De todas formas creo que lo mas satisfactorio es sentir que hicimos un lindo trabajo: nos divertimos un montón, realizamos algo que nos deja mucho aprendizaje, ¡ y ganas de hacer &lt;em&gt;stomotion&lt;/em&gt; en el futuro !&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Taller de stop-motion en huayra</title>
      <link>https://www.examplelab.com.ar/posts/2014-03-30-taller-de-stop-motion-en-huayra/</link>
      <pubDate>Sun, 30 Mar 2014 05:51:10 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-03-30-taller-de-stop-motion-en-huayra/</guid>
      <description>&lt;p&gt;El viernes pasado armamos con los chicos de huayra un taller de &lt;strong&gt;stopmotion&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;En el taller &lt;a href=&#34;http://maleficomics.blogspot.com.ar/&#34;&gt;Claudio Andaur&lt;/a&gt; resumió en una animación muy ilustrativa 3 técnicas de stopmotion. Primero nos mostró como trabajar mediante &lt;em&gt;sustitución&lt;/em&gt; usando unas figuras de papel que había preparado:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/imagen_5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego nos ejemplificó el principio de &lt;a href=&#34;http://www.evl.uic.edu/ralph/508S99/squash.html&#34;&gt;squash y stretch&lt;/a&gt;, haciendo una animación con una pelotita de plastilina que rebotaba por el escenario (¿ era tiro oblícuo al final ?):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/__1_2014_03_29_13_13_34_2014_03_29_13_13_41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/optimizado.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y por último realizó una pequeña animación usando un muñeco que el mismo había construido, con madera, telgopor, alambres y plastilina:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/SAM.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Si bien el trípode andaba medio flojo, y algunas imágenes salieron medio movidas, ¡ ver la animación en vivo fue genial !&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/__1_2014_03_29_13_00_12_2014_03_29_13_00_37.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Aquí está la animación que se armó.&lt;/p&gt;
&lt;p&gt;Ojo, teníamos una cámara muy viejita y poca iluminación, apenas nos estamos armando de materiales:&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;480&#34; src=&#34;//www.youtube.com/embed/zK43m4hflt0?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;mejoras-ideas-y-planes&#34;&gt;Mejoras, ideas y planes&lt;/h2&gt;
&lt;p&gt;Además, reunirnos en un taller fue la ocasión ideal para conversar y ver juntos algunas cosas nuevas de &lt;a href=&#34;http://www.examplelab.com.ar/se-viene-huayra-motion/&#34;&gt;huayra-motion&lt;/a&gt;, descubrir el contexto exacto en donde se necesitan algunas características y para qué.&lt;/p&gt;
&lt;p&gt;Pensamos juntos cómo se podría encarar un taller, las herramientas a utilizar y cómo &amp;ldquo;mecharlo&amp;rdquo; usando la aplicación.&lt;/p&gt;
&lt;p&gt;Y obviamente, como suele pasar en las demos, hay  oportunidad de encontrarle bugs a la aplicación y tomar nota para corregirlos :)&lt;/p&gt;
&lt;h2 id=&#34;las-fotos-&#34;&gt;¡ Las fotos !&lt;/h2&gt;
&lt;p&gt;Este es el compilado de las fotos que tomamos durante el taller:&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;480&#34; src=&#34;//www.youtube.com/embed/p5CMPI-KuiQ?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;En fin, el taller me resultó espectacular, me quedé super entusiasmado imaginando todas las posibilidades y actividades que podemos hacer mediante &lt;strong&gt;stopmotion&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Nos sirvió para pensar juntos cómo realizar futuros talleres y divertirnos un montón.&lt;/p&gt;
&lt;p&gt;Y obviamente quedamos &amp;ldquo;manija&amp;rdquo; programando y planificando algunas mejoras para &lt;strong&gt;huayra-motion&lt;/strong&gt;, con muchas ideas nuevas, espero escribir pronto sobre eso.&lt;/p&gt;
&lt;p&gt;Hagamos más talleres así, ¡Gracias Huayra!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Se viene huayra-motion ...</title>
      <link>https://www.examplelab.com.ar/posts/2014-03-05-se-viene-huayra-motion/</link>
      <pubDate>Wed, 05 Mar 2014 17:42:52 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-03-05-se-viene-huayra-motion/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Huayra-motion&lt;/strong&gt; es una de las novedades que tenemos preparadas para el lanzamiento de  &lt;strong&gt;huayra 2&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/huayra_2_beta__Running__2014_03_04_23_01_32_2014_03_04_23_01_41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Un programa que te permite crear películas y cortos animados usando la técnica de &lt;a href=&#34;http://es.wikipedia.org/wiki/Stop_motion&#34;&gt;stop-motion&lt;/a&gt; de manera sencilla y divertida.&lt;/p&gt;
&lt;p&gt;En este post te voy a contar las características principales y un poquito de historia sobre el proyecto.&lt;/p&gt;
&lt;h2 id=&#34;funcionalidades&#34;&gt;Funcionalidades&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;huayra-motion&lt;/strong&gt; tiene varias funcionalidades, pero se van desplegando a medida que utilizas el programa.&lt;/p&gt;
&lt;p&gt;Cuando abrís el programa aparece un asistente que te guia en los primeros pasos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/huayra_2_beta__Running__2014_03_04_23_13_28_2014_03_04_23_13_30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Lo hicimos super simple, apenas queremos agregarle algunos proyectos de ejemplo para que sea mas ilustrativo en el primer inicio.&lt;/p&gt;
&lt;p&gt;Luego, cuando inicias un proyecto, hay 4 partes principales en la interfaz:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/huayra_2_beta__Running__2014_03_04_23_15_01_2014_03_04_23_17_48.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;1 - Un área de previsualización.
2 - El panel de ajustes, tiene capas, efectos y opciones.
3 - Las operaciones básicas.
4 - Una línea de tiempo, con un cursor indicando el cuadro actual.&lt;/p&gt;
&lt;p&gt;En este caso abrí una animación muy básica que armé con lo único que tenía a mano en el bar donde suelo ponerme a escribir el blog.&lt;/p&gt;
&lt;p&gt;Con solo ajustar la cámara web y pulsando el botón &amp;ldquo;capturar&amp;rdquo; se pueden hacer cosas sencillas en poco tiempo.&lt;/p&gt;
&lt;h2 id=&#34;exportación-simple&#34;&gt;Exportación simple&lt;/h2&gt;
&lt;p&gt;Una de la cosas que agregamos recientemente es la posibilidad de exportación directa a video y animaciones GIF:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/huayra_2_beta__Running__2014_03_04_23_10_42_2014_03_04_23_10_44.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mi intención es añadir más opciones y un previsualizado rápido. Como estamos utilizando la herramienta &lt;em&gt;FFMPEG&lt;/em&gt; por detrás, tenemos un montón de parámetros disponibles para ajustar la calidad y el tamaño del video a generar.&lt;/p&gt;
&lt;p&gt;Incluso nos gustaría implementar la posibilidad de subir videos a youtube o vimeo directamente.&lt;/p&gt;
&lt;p&gt;Este es el resultado de la animación exportada como GIF desde la aplicación:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/animado.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Claramente no soy un talentoso del stopmotion ñ_ñ pero estoy seguro de que muchos chicos en las escuelas si lo son, y huayra-motion seguramente les va a resultar de mucha utilidad.&lt;/p&gt;
&lt;h2 id=&#34;pensada-para-integrarse&#34;&gt;Pensada para integrarse&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;huayra-motion&lt;/strong&gt; también se puede integrar con otras aplicaciones del ecosistema Linux. Por ejemplo, podrías usar &lt;a href=&#34;http://www.openshot.com&#34;&gt;Open Shot&lt;/a&gt; para integrar los cuadros en un video o &lt;a href=&#34;http://audacity.sourceforge.net&#34;&gt;Audacity&lt;/a&gt; para componer los efectos de sonido.&lt;/p&gt;
&lt;p&gt;Todos los cuadros de animación se guardan como archivos &lt;em&gt;.png&lt;/em&gt; individuales, así que se pueden leer y modificar desde casi cualquier programa multimedia.&lt;/p&gt;
&lt;h2 id=&#34;cómo-surgió-huayra-motion&#34;&gt;¿Cómo surgió huayra-motion?&lt;/h2&gt;
&lt;p&gt;Iván y Claudio, del equipo de diseño en huayra, tenían esta idea en mente hace tiempo: Hacer un programa que permita enseñar y construir películas usando la técnica de stopmotion, una herramienta que sea libre y sencilla de utilizar.&lt;/p&gt;
&lt;p&gt;Además, en &lt;a href=&#34;http://www.conectarigualdad.gob.ar/&#34;&gt;conectar igualdad&lt;/a&gt; se realizan de manera periódica varias actividades y talleres sobre stopmotion y composición de video, así que veíamos en esta herramienta una forma de contribuir a los talleres y un desafio divertido de resolver.&lt;/p&gt;
&lt;p&gt;Al principio pensamos en hacerle mejoras a un software existente, llamado &lt;a href=&#34;http://linuxstopmotion.org/&#34;&gt;linux-stopmotion&lt;/a&gt;, pero al tiempo surgió otra idea: &amp;ldquo;Hacer nuestra propia versión desde cero&amp;rdquo; :)&lt;/p&gt;
&lt;h2 id=&#34;desde-cero&#34;&gt;¿Desde cero?&lt;/h2&gt;
&lt;p&gt;Sé que muchas personas no se sienten cómodas pensando en hacer software desde cero; en cambio yo si me siento cómodo, para mí es bueno encarar aplicaciones desde cero, y por suerte los chicos de huayra también comparten esa visión.&lt;/p&gt;
&lt;p&gt;Hay algo profundamente útil en empezar algo nuevo, podés conocer en detalle cada pieza del programa, volverte mejor diseñador y programador. Porque si haces un programa desde cero todo puede elegirse: herramientas, diseño, características, componentes, funcionalidad, ¡todo!.&lt;/p&gt;
&lt;p&gt;No hay &lt;a href=&#34;http://es.wikipedia.org/wiki/Deuda_t%C3%A9cnica&#34;&gt;deuda técnica heredada&lt;/a&gt; cuando haces un programa desde cero, si el programa tiene bugs o puntos flojos no es culpa de alguien mas, son tus bugs, y esa situación por si sola se convierte en un aprendizaje enorme.&lt;/p&gt;
&lt;p&gt;Por supuesto iniciar proyectos desde cero es mucho más difícil que buscar algo prefabricado y modificarlo, pero eligiendo hacer algo desde cero te ves obligado a buscar un diseño simple,  objetivo y funcional.&lt;/p&gt;
&lt;h2 id=&#34;prototipando-con-node-webkit&#34;&gt;Prototipando con node-webkit&lt;/h2&gt;
&lt;p&gt;Al igual que pasó con &lt;a href=&#34;http://www.examplelab.com.ar/presentanto-huayra-compartir/&#34;&gt;huayra-compartir&lt;/a&gt;, aquí hicimos algunas pruebas y experimientos para ver que nos podía resultar mejor y resultó ser node-webkit.&lt;/p&gt;
&lt;p&gt;A fin del año pasado había hecho un trabajo freelance junto a unos amigos, usando  django y algunas cosas de html5 como angularjs y captura de video con &lt;a href=&#34;http://www.html5rocks.com/en/tutorials/getusermedia/intro/&#34;&gt;getUserMedia&lt;/a&gt;. Así que me animé a poner en práctica ese conocimiento e intentar un prototipo enteramente usando &lt;em&gt;html5&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La primer versión se veía así:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/test.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero luego de hacer algunos retoques sentí que se podía simplificar un poco más. También por esos días Claudio me sugirió que la barra superior (tipo header) no aportaba mucho, ¡y tenía razón!, así que la quité.&lt;/p&gt;
&lt;p&gt;El resultado me parece mucho mejor ahora:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Mar/salero_animado_2014_03_05_01_25_40_2014_03_05_01_25_49.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Hay más espacio para desplegar componentes, cámaras adicionales y pestañas.&lt;/p&gt;
&lt;h2 id=&#34;el-modo-colaborativo&#34;&gt;El modo colaborativo&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;huayra-motion&lt;/strong&gt; incorpora un modo colaborativo, la aplicación puede funcionar en &lt;em&gt;red&lt;/em&gt;, haciendo que los chicos puedan trabajar en equipo sobre uno o varios proyectos.&lt;/p&gt;
&lt;p&gt;Este modo no es muy complejo en sí, pero es algo innovador si pensamos en otras aplicaciones de escritorio para Linux: casi todas las aplicaciones funcionan de manera aislada, un usuario por programa/proyecto.&lt;/p&gt;
&lt;p&gt;El modo colaborativo de &lt;em&gt;huayra-motion&lt;/em&gt; es apenas una nueva incursión en algo colaborativo desde el diseño. Es algo que también estamos investigando en &lt;a href=&#34;http://examplelab.com.ar/presentanto-huayra-compartir/&#34;&gt;huayra-compartir&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La aplicación inicializa un webserver sencillo realizado con &lt;a href=&#34;http://expressjs.com&#34;&gt;express&lt;/a&gt; y  &lt;a href=&#34;http://socket.io&#34;&gt;socket.io&lt;/a&gt; al que se puede conectar cualquier netbook o PC para compartir su cámara web.&lt;/p&gt;
&lt;p&gt;Así, podrías tener &lt;strong&gt;huayra-motion&lt;/strong&gt; en una netbook y usar otras computadoras como cámaras secundarias, todas como recursos para el mismo proyecto.&lt;/p&gt;
&lt;p&gt;Creo que podemos mejorar un montón acá. Pensar aplicaciones multi-usuarios y colaborativas es super desafiante, hay un montón de bibliotecas y patrones de diseño que ya no nos sirven, y por supuesto hay muchas nuevas ideas y investigaciones que tenemos por explorar&amp;hellip;&lt;/p&gt;
&lt;p&gt;Pienso que es una de los desafíos técnicos que tenemos en el equipo de huayra por delante: descentralizar aplicaciones, pero buscando hacerlas colaborativas entre sí.&lt;/p&gt;
&lt;h2 id=&#34;interface-casi-no-modal&#34;&gt;Interface &amp;ldquo;casi&amp;rdquo; no-modal&lt;/h2&gt;
&lt;p&gt;Una de las cosas que nos dio varios dolores de cabeza, pero que me gustaría conservar, es el funcionamiento no-modal.&lt;/p&gt;
&lt;p&gt;La aplicación no te invita a fragmentar tu modo de trabajar, no tiene un modo reproducción y un modo edición completamente separados, o un panel de preferencias que te interrumpe hasta que guardas los resultados.&lt;/p&gt;
&lt;p&gt;Por el contrario, mientras la aplicación funciona podés hacer ajustes, seguir capturando fotos o consultar los atajos de teclado:&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;480&#34; src=&#34;//www.youtube.com/embed/xZIgKShW0po?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Pienso que este enfoque es mucho útil a la hora de trabajar, te permite observar y construir de manera más fluida, sin interrupciones o demoras.&lt;/p&gt;
&lt;p&gt;Lamentablemente algunas cosas siguen siendo bloqueantes para los usuarios en este momento, por ejemplo cuando exportas una película el programa te hace esperar hasta que el video está listo. Aunque creo que si seguimos investigando, podemos hacerlo funcionar de otra manera.&lt;/p&gt;
&lt;h2 id=&#34;invitación&#34;&gt;Invitación&lt;/h2&gt;
&lt;p&gt;Estamos ansiosos conocer la recepción de los jóvenes en las escuelas, en el equipo creemos que &lt;em&gt;huayra-motion&lt;/em&gt; tiene un buen camino por delante, hay muchos detalles por pulir, y funcionalidades que aún están en pleno diseño, así que escribimos código todos los días para mejorar la herramienta poco a poco.&lt;/p&gt;
&lt;p&gt;¿Nos ayudas a mejorar &lt;strong&gt;huayra-motion&lt;/strong&gt;?, ¿Qué te gustaría ver en la próxima versión de la aplicación?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/HuayraLinux/huayra-stopmotion&#34;&gt;https://github.com/HuayraLinux/huayra-stopmotion&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interrumpiendo al programador</title>
      <link>https://www.examplelab.com.ar/posts/2014-02-28-interrumpiendo-al-programador/</link>
      <pubDate>Fri, 28 Feb 2014 22:56:09 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-02-28-interrumpiendo-al-programador/</guid>
      <description>&lt;p&gt;Esta simple caricatura explica el impacto de las interrupciones en la cabeza de un programador:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/3uyRWGJ.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Presentando huayra-compartir</title>
      <link>https://www.examplelab.com.ar/posts/2014-02-20-presentanto-huayra-compartir/</link>
      <pubDate>Thu, 20 Feb 2014 13:14:26 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-02-20-presentanto-huayra-compartir/</guid>
      <description>&lt;p&gt;Esta semana quiero presentarles un software que estamos escribiendo en conectar igualdad. Es una aplicación que vamos a incluir en el sistema operativo &lt;strong&gt;huayra GNU/Linux 2.0&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/parallaxvieww.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;huayra-compartir&lt;/strong&gt; es una herramienta que permite intercambiar archivos de manera muy sencilla; la aplicación puede descubrir a todos los equipos en la red automáticamente, ofrece una interfaz de usuario muy simple y no necesita acceso a Internet para funcionar:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/huayra_2_generador_de_paquetes__beta___Running__2014_02_01_19_49_36.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El software surgió de una idea que teníamos en el equipo hace tiempo; por suerte los primeros prototipos salieron tan bien que arrancamos con todo!&lt;/p&gt;
&lt;h3 id=&#34;secciones&#34;&gt;Secciones&lt;/h3&gt;
&lt;p&gt;La aplicación tiene tres funcionalidades importantes: te permite ver a los equipos conectados en la red, navegar por los archivos compartidos e iniciar descargas.&lt;/p&gt;
&lt;p&gt;La sección &lt;strong&gt;amigos&lt;/strong&gt; te permite ver a todos los equipos en la red que utilizan &lt;strong&gt;huayra-compartir&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Por ejemplo, en esta captura, Ignacio estába compartiendo archivos en dos computadoras:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/huayra_2_generador_de_paquetes__beta___Running__2014_02_01_19_55_13-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego hay una vista de archivos. Por ejemplo si existe un equipo en la red bajo el nombre Hugo y hago click sobre él aparece la siguiente pantalla:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/huayra_2_generador_de_paquetes__beta___Running__2014_02_01_20_01_09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cada vez que hacés click sobre un archivo, se inicia una descarga dentro de la sección &lt;strong&gt;descargas&lt;/strong&gt;. De forma tal que la interfaz nunca te interrumpe, podés seguir navegando y seleccionando mas cosas para bajar.&lt;/p&gt;
&lt;p&gt;Así se ve la sección &lt;strong&gt;descargas&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/huayra_2_generador_de_paquetes__beta___Running__2014_02_01_20_02_32.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;su-versión-predecesora&#34;&gt;Su versión predecesora&lt;/h3&gt;
&lt;p&gt;Esta aplicación no es algo completamente nuevo. Bah, en realidad es casi todo nuevo, excepto la &amp;ldquo;idea&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;huayra-compartir&lt;/strong&gt; es la secuela de una aplicación llamada &lt;strong&gt;compartir-web&lt;/strong&gt; (que se incluía en la primer versión de huayra-linux).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;compartir-web&lt;/strong&gt; ofreciá algo muy parecido, te permitía colocar archivos en una carpeta y desde cualquier equipo de la red podía verlos y descargarlos.&lt;/p&gt;
&lt;p&gt;Por ejemplo, cuando ingresabas a localhost, o el puerto 80 con la ip del equipo te aparecería en pantalla lo siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/huayra_2_generador_de_paquetes__beta___Running__2014_02_01_20_09_41.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Lo diferente en esta nueva versión es que cuenta con una interfaz de usuario propia, donde se descubren los equipos automáticamente. Pero la idea general es muy similar.&lt;/p&gt;
&lt;p&gt;Otra diferencia es la plataforma de implementación. Antes se utiliza &lt;strong&gt;lighttpd&lt;/strong&gt; para servir los archivos y &lt;strong&gt;chromium&lt;/strong&gt; para visualizarlos. Ahora todo está sobre &lt;strong&gt;node-webkit&lt;/strong&gt; encapsulando a &lt;em&gt;express&lt;/em&gt;, &lt;em&gt;angularjs&lt;/em&gt;, &lt;em&gt;bootstrap&lt;/em&gt;, y algunas cosas mas !&lt;/p&gt;
&lt;p&gt;Pienso que esta nueva versión es algo mas sencilla de utilizar, pero naturalmente reconozco que también es mucho mas compleja&amp;hellip; es un balance algo raro, el enfoque que usabamos antes era mucho mas sólido.&lt;/p&gt;
&lt;h2 id=&#34;cómo-está-implementado&#34;&gt;¿Cómo está implementado?&lt;/h2&gt;
&lt;p&gt;Para implementar la aplicación usamos varias ideas y tecnologías diferentes.&lt;/p&gt;
&lt;p&gt;Intentaré resumirte los conceptos principales de la solución por si lo querés investigar y ayudarnos a mejorarlo ;)&lt;/p&gt;
&lt;h3 id=&#34;node-webkit-como-plataforma&#34;&gt;Node-webkit como plataforma&lt;/h3&gt;
&lt;p&gt;La aplicación completa está implementada sobre &lt;a href=&#34;https://github.com/rogerwang/node-webkit&#34;&gt;node-webkit&lt;/a&gt;, una plataforma para construir aplicaciones nativas usando HTML5 + nodejs.&lt;/p&gt;
&lt;p&gt;Si nunca viste node-webkit, tal vez te resulte útil ver una charla que di hace tiempo llamada: &lt;a href=&#34;http://www.youtube.com/watch?v=TzDhzayO_uk&#34;&gt;Haciendo aplicaciones complejas de manera simple (con node-webkit)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;interfaz-con-css-y-html&#34;&gt;Interfaz con CSS y HTML&lt;/h3&gt;
&lt;p&gt;La interfaz está construida utilizando HTML, el famoso framework CSS &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;bootstrap&lt;/a&gt; y un &lt;em&gt;theme&lt;/em&gt; que había comprado hace unos meses en el sitio &lt;a href=&#34;https://wrapbootstrap.com/&#34;&gt;wrapbootstrap&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Luego, la estructura de aplicación y todas las interacciones las realizamos mediante &lt;a href=&#34;http://angularjs.org&#34;&gt;angularjs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Aquí se ve un ejemplo de intercambio de vistas que utilizamos para el panel principal:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/ScreenFlow2.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;el-formato-de-intercambio&#34;&gt;El formato de intercambio&lt;/h3&gt;
&lt;p&gt;Para que los equipos puedan exponer sus archivos compartidos usamos el microframework &lt;a href=&#34;http://expressjs.com&#34;&gt;express&lt;/a&gt; y un formato de intercambio muy simple: &lt;strong&gt;json&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Si querés visualizar cómo se ve el formato de intercambio, lo mas sencillo es abrir un navegador y apuntar a la url que muestra la consola de &lt;strong&gt;huayra-compartir&lt;/strong&gt; cuando se inicia:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/Huayra_Compartir_2014_02_13_23_25_49.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Así es como se ve el formato de datos desde un navegador tradicional:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/192_168_1_101_9110_2014_02_13_23_28_27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;A su vez, el atributo &amp;ldquo;archivos&amp;rdquo; de la respuesta nos da una URL para acceder a los archivos compartidos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/_2014_02_13_23_31_45.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esta forma de construir las rutas y exponerlas como datos (&lt;em&gt;à la&lt;/em&gt; &lt;a href=&#34;http://en.wikipedia.org/wiki/HATEOAS&#34;&gt;hypermedia&lt;/a&gt;) nos ayudó un montón a depurar y visualizar lo que la aplicación efectivamente cuando las cosas no funcionába como esperábamos.&lt;/p&gt;
&lt;p&gt;Además, este formato de datos &amp;ldquo;enlazados&amp;rdquo; se pueden navegar de manera muy sencilla si instalás en tu navegador la extensión &lt;a href=&#34;https://chrome.google.com/webstore/detail/chklaanhfefbnpoihckbnefhakgolnmc&#34;&gt;JSON View&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;descubriendo-equipos-con-polo&#34;&gt;Descubriendo equipos con &amp;ldquo;polo&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;Para descubrir los equipos comencé investigando  varias bibliotecas en &lt;a href=&#34;http://npmjs.org&#34;&gt;npmjs.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Casi todas las bibliotecas que probé hacían prácticamente lo mismo, ofrecián una capa de abstracción sobre zeroconf/bonjour/mdns.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;mdns&lt;/em&gt; me pareció una de las mas completas y funcionales, pero luego de varias pruebas y experimentos cambié mi elección por una alternativa mas sencilla llamada &amp;ldquo;polo&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;En &lt;strong&gt;Polo&lt;/strong&gt;, la idea general es que cada equipo tiene la posiblidad realizar un anuncio de inicialización de servicio (llamado &amp;ldquo;up&amp;rdquo;) en la red local. Emitir un mensaje de aviso de este tipo sirve para que todos los equipos en la red reciban la noticia y los datos para comenzar a usar ese servicio.&lt;/p&gt;
&lt;p&gt;Esto me pareció espectacular, imaginá: podés iniciar un servicio tipo webserver, luego hacer un anuncio en la red y corroborar que todos los equipos subscriptos se enterarán al instante.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Feb/2014_02_19_23_08_28.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Así funciona el corazón de &lt;strong&gt;huayra-compartir&lt;/strong&gt;,  cada cliente inicia un webserver (que expone los archivos que comparte el equipo), luego hace un anuncio en la red y por último se pone a escuchar las notificaciones en la red.&lt;/p&gt;
&lt;p&gt;Para instalar &lt;code&gt;polo&lt;/code&gt; en nodewebkit usamos &lt;code&gt;npm&lt;/code&gt; así:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; npm install polo --save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hay unos ejemplos básicos de utilizanción de polo en el &lt;a href=&#34;https://www.npmjs.org/package/polo&#34;&gt;repositorio oficial de npm&lt;/a&gt;, es mucho mas sencillo de usar de lo que parece al principio.&lt;/p&gt;
&lt;h2 id=&#34;a-futuro-&#34;&gt;A futuro &amp;hellip;&lt;/h2&gt;
&lt;p&gt;Hay varias cosas que nos gustaría implementar en las próximas versiones: estaría buenisimo tener un chat, poder descargar carpetas completas con un solo click, añadir gráficas de la red, etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Cuando mostramos el software en la oficina volaron mil ideas, y saltaron algunos bugs también (naturalmente).&lt;/p&gt;
&lt;p&gt;Te invito a visitar el repositorio del proyecto, me gustaría que nos cuentes que cosas le agregarías o te gustaría cambiar.&lt;/p&gt;
&lt;p&gt;Seguramente vamos a estar implementando mas cosas por ahí pronto:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/HuayraLinux/huayra-compartirweb&#34;&gt;https://github.com/HuayraLinux/huayra-compartirweb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;¡Saludos!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como instalar nodejs en huayra-linux</title>
      <link>https://www.examplelab.com.ar/posts/2014-01-29-como-instalar-nodejs-en-huayra-linux/</link>
      <pubDate>Wed, 29 Jan 2014 21:04:56 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-01-29-como-instalar-nodejs-en-huayra-linux/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Importante:&lt;/strong&gt; &lt;strong&gt;En huayra 3.0 se incluyó nodejs de forma nativa, así que estas instrucciones no son necesaria, solamente son útiles para versiones anteriores a la huayra 3.0 u otros sistemas que no incluyan nodejs.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nodejs&lt;/strong&gt; es una de las herramientas que estoy utilizando en &lt;em&gt;huayra&lt;/em&gt; como plataforma para las aplicaciones nuevas, como &lt;a href=&#34;https://github.com/HuayraLinux/huayra-compartirweb&#34;&gt;huayra-compatir&lt;/a&gt;, &lt;a href=&#34;https://github.com/HuayraLinux/huayra-stopmotion&#34;&gt;huayra-motion&lt;/a&gt; y el &lt;a href=&#34;https://github.com/HuayraLinux/huayra-visor-manual&#34;&gt;visor de manual&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hoy lamentablemente no tenemos &lt;strong&gt;nodejs&lt;/strong&gt; como paquete pre-instalado en la distribución, así que para tenerlo funcionando hay que hacer algunos pasos previos.&lt;/p&gt;
&lt;p&gt;Además, como &lt;em&gt;huayra&lt;/em&gt; está basado en la rama estable de &lt;em&gt;Debian&lt;/em&gt;, hay varios paquetes como &lt;strong&gt;nodejs&lt;/strong&gt; o &lt;strong&gt;npm&lt;/strong&gt; que solamente podemos instarlos mediante backports.&lt;/p&gt;
&lt;h3 id=&#34;instalando-nodejs&#34;&gt;Instalando nodejs&lt;/h3&gt;
&lt;p&gt;Primero vamos a comenzar abriendo una terminal y editando el archivo &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/huayra_2_generador_de_paquetes__beta___Running__2014_01_29_15_20_16.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Para editar el archivo podés escribir:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;luego agregá esta linea al principio del archivo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://ftp.debian.org/debian wheezy-backports main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Después hay que actualizar el listado de software disponible e instalar todo lo necesario:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install nodejs nodejs-legacy curl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Por último, para instalar &lt;strong&gt;npm&lt;/strong&gt; hay que ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl https://www.npmjs.org/install.sh | sudo sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;probando-que-todo-funcione-bien&#34;&gt;Probando que todo funcione bien&lt;/h3&gt;
&lt;p&gt;¡Listo!, ahora desde una terminal vas a poder usar los comandos &lt;strong&gt;node&lt;/strong&gt; o &lt;strong&gt;npm&lt;/strong&gt; tranquilamente.&lt;/p&gt;
&lt;p&gt;Acá incluyo un pequeño ejemplo sobre cómo obtener las interfaces de red directamente desde el intérprete de &lt;strong&gt;nodejs&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/salida.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;es todo :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>_why: La historia de un genio post-moderno</title>
      <link>https://www.examplelab.com.ar/posts/2014-01-25-_why-una-historia-de-un-genio-post-moderno/</link>
      <pubDate>Sat, 25 Jan 2014 22:01:47 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-01-25-_why-una-historia-de-un-genio-post-moderno/</guid>
      <description>&lt;div class=&#39;nota&#39;&gt;
  &lt;p&gt;Esta es una traducción de un &lt;a href=&#34;http://www.smashingmagazine.com/2010/05/15/why-a-tale-of-a-post-modern-genius/&#34;&gt;artículo&lt;/a&gt; publicado por &lt;a href=&#34;http://www.smashingmagazine.com/&#34;&gt;Smash Magazine&lt;/a&gt; en el 2010.&lt;/p&gt;
  &lt;p&gt;Hice esta traducción hace un buen tiempo junto a Rocio Viñas, pero nunca la había publicado. &lt;/p&gt;
  &lt;p&gt;¡Que la disfruten!&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Why the Lucky Stiff (o _Why para ser mas breves) fue uno de los programadores mas brillantes e inspiradores de estos tiempos. Se volvió famoso  mediante una serie de blogs y una cantidad increible de proyectos open-source que mantuvo durante mas de 7 años.&lt;/p&gt;
&lt;p&gt;La popularidad de _Why creció junto con la popopularidad del lenguaje de programación Ruby. Cuando el éxito del framework Rails se disparó en el año 2005, un numeroso grupo de jóvenes desarrolladores empezaron a querer aprender más sobre Ruby, y ahí fue cuando la mayoría de ellos se encontró con &lt;a href=&#34;http://mislav.uniqpath.com/poignant-guide/&#34;&gt;La conmovedora guía para Ruby de Why&lt;/a&gt;, una guia Creative Commons que contenía todas las características de su autor: una mente artística e inquieta con una visión muy diferente acerca de la programación.&lt;/p&gt;
&lt;p&gt;Incluso aquellos que no llegaron a leer la Guía de _Why, no podrían programar en Ruby sin un toque de la brillantez de _Why. Para ese entonces él había creado varias bibliotecas que eran partes funtamentales de las tareas cotidianas de programación en ruby, como por ejemplo Hpricot, un parser HTML con una API que de algúna manera se parece al estílo de manipulación de DOM de jquery.&lt;/p&gt;
&lt;p&gt;Tal vez hayan notado que nos referimos a _Why en pasado. Así que la pregunta es, ¿desapareció?  Si. Por lo mucho que vale para nosotros, solamente tenemos su presencia online: &amp;ldquo;Why the lucky stiff&amp;rdquo;. Nadie supo su nombre real o cual es su trabajo, ni siquiera de dónde vino. En agosto del 2009, cerró casi todas sus cuentas online y sitios web, incluyendo sus repositorios de software, con todo el código que cientos de programadores esperaban usar como dependecias.&lt;/p&gt;
&lt;p&gt;Su desaparición ha dejado una horda de códigos huérfanos. Y mientras que nadie sabe bien por qué hizo lo que hizo, hay teorías sólidas, las más fuertes son que su identidad real se descubrió, por muy raro que suene.&lt;/p&gt;
&lt;p&gt;Este artículo cuenta las historias de este artista post-moderno, que la gente llegó a conocer como &lt;em&gt;Why the Lucky Stiff&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“¿No es loco? … uno hace algunos dibujos en su casa o graba un poco de música en el sótano y de repente sos famoso en todo el mundo.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;_Why, en conversación con Geoffrey Grosenbach&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;profesor-freelance-sin-previo-aviso&#34;&gt;Profesor freelance (sin previo aviso)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/the_foxes_4b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;(Decí algo en vos alta! Tal ves el lo use como un ejemplo! -¿Cómo qué? ¿Cómo “chunky bacon”?)&lt;/p&gt;
&lt;p&gt;En su blog, _Why se describe como un “profesor freelance”, aun cuando el nunca tomó trabajos para enseñar, ya sean freelance o cualquier otros. El dió esta descripción de su actividad en una presentación del evento &amp;ldquo;Art &amp;amp;&amp;amp; Code&amp;rdquo;. Dijo que el enseña “solamente en citas no planeadas”. Como él explica, significa que enseña arbitrariamente a chicos y adolescentes en cualquier espacio, cuandoquiera que la oportunidad se presente. El cuenta la historia de un día normal, mientras iba al trabajo en un tren y trabajando en un código: un grupo de chicos que jugaba cerca miraba lo que el hacía. Estaban intrigados cuando descubrieron que hacía una especie de “hackeo”. El les mostró lo que estaba haciendo (un juego simple), y ellos empezaron a jugar con el código, esa fue su primera clase.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/baby.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;(Televisión en vivo en el año 2012: “Gracias a la guía de Why &amp;hellip; incluso los bebés pueden aprender Ruby! Es así de simple! &amp;hellip;  &lt;code&gt;class&amp;lt;&amp;lt;self!!”&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;A pesar de lo esotérica que parezca su técnica de aprendizaje, está respaldada por argumentos fuertes y significativos. Estos argumentos los explaya en su ensayo &amp;ldquo;&lt;a href=&#34;http://www.advogato.org/article/671.html&#34;&gt;The Little coder’s predicament&lt;/a&gt;&amp;rdquo; y más tarde en el “&lt;a href=&#34;https://github.com/hacketyhack/hacketyhack/wiki/The-Hackety-Manifesto&#34;&gt;Manifiesto de Hackety Hack&lt;/a&gt;”. La idea general de estos ensayos es que en los días primitivos de las computadoras, máquinas como el Commodore 64 eran fácilmente programables; un niño podía jugar con ella, generar sonidos mediante códigos y crear juegos simples. Pero en la actualidad, las computadoras son increíblemente más poderosas y proporcionalmente menos &amp;ldquo;hackeables&amp;rdquo;. Esta “hackeabilidad” que _Why identifica, y el proceso de descubrir como “controlar una computadora”, es el momento en el que nacen muchos programadores brillantes. Como por ejemplo, es exactamente así como Linus Torvalds, creador de Linux, empezó a programar.&lt;/p&gt;
&lt;p&gt;“Hackety Hack” es un manifiesto no solo en palabras sino también en código. Es un software que funciona en Windows/Mac y sirve como una plataforma donde los chicos pueden escribir programas muy fácilmente. Hace posible crear un blog en 6 lineas de código, o tu propio cliente de mensajería en otras pocas líneas.&lt;/p&gt;
&lt;p&gt;Aquí hay un video de la presentación de _why en el evento Art &amp;amp;&amp;amp; Code, donde habla acerca de la escencia de la programación y su motivación por Hackety Hack. Asegúrate de no perderte la parte donde presenta su juego de cartas, Kaxxt, y explica la naturaleza de programar.&lt;/p&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/5047563&#34; width=&#34;500&#34; height=&#34;275&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href=&#34;http://vimeo.com/5047563&#34;&gt;ART &amp;&amp; CODE Symposium: Hackety Hack, why the lucky stiff&lt;/a&gt; from &lt;a href=&#34;http://vimeo.com/sfci&#34;&gt;STUDIO for Creative Inquiry&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un dia _Why apareció inesperadamente en mi casa para una comida. Le ofrecí llevarlo a su hotel o casa con mi auto, pero el insistió en tomar el autobús y encontrar su propia manera de llegar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;Geoffrey Grosenbach&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;la-conmovedora-guía-de-why-para-ruby&#34;&gt;(La conmovedora) Guía de Why para Ruby.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/2007_cover_shut.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Además de enseñar sin previo aviso, _Why ha sido famoso por su tutorial de introducción al lenguaje de programación Ruby, llamado “La guía (conmovedora) de _Why para Ruby”. La guía conmovedora es completamente diferente a lo que uno esperaría de un libro dedicado a un lenguaje de programación. Es en parte una guía técnica, pero en mayor medida es una novela de humor subconsciente, llena de dibujos animados, que te enseñan a escribir programas en Ruby. La guía está licenciada bajo la Creative Commons y se puede ver a través de HTML o descargar como PDF.&lt;/p&gt;
&lt;p&gt;No solamente se convirtió en un hit de culto en la comunidad Ruby, sino que también tuvo impacto en muchos programadores alrededor del mundo. Lo que es aún más poderoso, &amp;ldquo;the poignant guide&amp;rdquo; ayudo a formar la cultura de muchas personas que eran nuevas en programación. Su inspiración puede ser vista en proyectos como “&lt;a href=&#34;http://learnyouahaskell.com&#34;&gt;Learn you a Haskell for great good&lt;/a&gt;” y en programadores como Ryan Dahl (creador de NODE.JS). Sus cómic y su arte también dejaron su marca en la gente.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/leahculvertattoo.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;_Why escribió un segundo libro, una guía tutorial, tipo referencia rápida para su proyecto “Shoes”. Shoes es una herramienta para construir interfaces de usuario gráficas (GUI) que puede ser usada para crear aplicaciones de escritorio de manera sencilla, con la sintaxis de Ruby. El libro se llama “Nobody Knows Shoes” (nadie sabe sobre Shoes) y es otra obra maestra. Concebido impreso y en PDF, el diseño de la editorial de  NKS (Nobody Knows Shoes) es todo un logro: consistente (aunque raramente organizado), y legible (a pesar de ser caótico). El libro empieza con un montaje de una figura moviéndose “alrededor” del libro mientras que otro personaje clama: “Midas, no deberías caminar hacía allá!! […]NooooOOO, estás a punto de chocarte con un libro sobre nerds y  computacióóón …” La última página del libro dice, “Midas conoce Shoes”. Esta es sólo una de las casi sencillas bromas que son tan comunes de él.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/shoes.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;“El maravilloso regalo de Shoes”: (10 primeros puntos escenciales):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;PARA&amp;rdquo; pronunciado como Anna Apera.&lt;/li&gt;
&lt;li&gt;y 3. Son stacks &amp;amp; flows (muy muy importante)&lt;/li&gt;
&lt;li&gt;BOTÓN&lt;/li&gt;
&lt;li&gt;Imágen (totalmente fácil)&lt;/li&gt;
&lt;li&gt;Editar-Linea (puede hablar sobre cajas editables brevemente)&lt;/li&gt;
&lt;li&gt;LINK (igualito al de la página web web web)&lt;/li&gt;
&lt;li&gt;Ocho es papel tapiz;&lt;/li&gt;
&lt;li&gt;Shoes.url; y finalmente&amp;hellip;&lt;/li&gt;
&lt;li&gt;Clear o borrar (incluye una discusión sobre añadir, pre-añadir, etc.)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Aprecio sus elogios, pero me cuesta creer que le guste mi arte a alguien.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Definitivamente voy a morir sin ser reconocido,  y sólo unos pocos verán el trabajo que hago. Pero me gusta mucho que sea así !!! Una de las peores cosas que una persona puede tener en la vida es reconocimiento. Pero una palmada en la cabeza es muy, muy malo también. He tenido algunas palmadas en la cabeza, y también he vomitado sangre algunas veces en el camino.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;Why the Lucky Stiff&lt;/cite&gt;, en respuesta a un email de Fábio Akita&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;blogging&#34;&gt;Blogging&lt;/h3&gt;
&lt;p&gt;_why mantenía varios blogs. En su página principal &amp;ldquo;whytheluckystiff.net&amp;rdquo; almacenaba sus pensamientos, caricaturas, poemas y otras historias. Las categorías del blog eran “historias” “comics” “incidentes” “cuartetos” “hackeo” y “juegos de cinco minutos para gemelos que no tienen su otro gemelo con ellos y una ilimitada colección de animales”. Era también donde el guardaba links hacia todas sus otras creaciones, como libros y blogs.&lt;/p&gt;
&lt;p&gt;Cuando Ruby era todavía virtualmente desconocido fuera de Japón, _why creó un blog llamado RedHanded, en el cual difundía el lenguaje, discutía sus cualidades y consolidaba la comunidad. El sitio web fue cerrado después de que Ruby creciera y particularmente después del boom del material para la orientación en Ruby, lanzado en los Estados Unidos.&lt;/p&gt;
&lt;p&gt;El blog servía a su propósito muy bien. Se podían encontrar entrevistas y comentarios de gente que más tarde se convertiría en celebridades de la web, como David Heinemeir Hansson, creador del framework Ruby on Rails y fundador de 37 signals. David fue el blanco de varias bromas de _Why a lo largo del camino.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/hackety_org_header.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Hackety.org era el blog en el cual _Why hablaba sobre temas de programación en el contexto de su manifiesto del Hacker.  Allí, demostró su increíble conocimiento de código y hackeo, creando motores de juegos simples o bibliotecas procesadoras de imágenes y sonidos. También es una lectura para disfrutar de la programación por geeks y amantes del arte &lt;em&gt;underground&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Otro blog relativamente desconocido de _Why era de imágenes únicamente, que contenía preciosos scraps de galerías complicadas de encontrar. El blog pobremente podía ser definido, a pesar de que las palabras “eerie” ; “surreal” y “kitsch” aparecían frecuentemente. Se llamaba “&lt;a href=&#34;http://web.archive.org/web/*/whytheluckystiff.net/quiet/&#34;&gt;what a quiet stiff&lt;/a&gt;”.&lt;/p&gt;
&lt;p&gt;_Why fue el que acuñó el término “Tumblelog”, refiriéndose al blog &lt;a href=&#34;http://anarchaia.org/&#34;&gt;Anarchaia&lt;/a&gt; por &lt;a href=&#34;http://chneukirchen.org/&#34;&gt;Christian Neukirchen&lt;/a&gt;. En su blog RedHanded, el declaró, “Blogguear ha mutado en formas más simples (especialmente en variantes como link –y mob- y aud-y video), pero no creo que jamás haya visto un blog como el de Chris Neukirchen, Anarchia, en donde se funden un puñado de formas dispares de citación (links, citas, flickrings) en un largo, estrecho y distraído tumblelog.&lt;/p&gt;
&lt;h4 id=&#34;música&#34;&gt;Música&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/poignantguide_soundtrack.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El soundtrack de la guía (conmovedora) de why para ruby (Hecho sin esfuerzos por The Thirsty Cups)&lt;/p&gt;
&lt;p&gt;Además de escribir el libro, crear las caricaturas y hacer el sitio web para la Guía Conmovedora, _Why creó con sus manos &amp;ldquo;The Thirsty Cups&amp;rdquo; (las copas sedientas), un soundtrack donde cada canción acompaña a un  capítulo de la Guía. Innecesario sería decir que el estilo de la música es ampliamente imaginativo, divertido e impredecible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pocas personas saben que el realizó un álbum para que acompañe la Guía Conmovedora de Why para Ruby. Una de mis canciones favoritas del álbum es la del segundo capítulo: “&lt;a href=&#34;http://web.archive.org/web/20070703051421/http://poignantguide.net/sdtrk/chap%202%20-%20this%20book%20is%20made%20(of%20rabbits%20and%20lemonade).mp3&#34;&gt;Este libro está hecho (de conejos y Limonada).&lt;/a&gt;”( “This Book Is Made (of Rabbits and Lemonade).”)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Nada capta el ethos artístico de _Why mejor que ésta canción.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;John Resig en ejohn.org&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Siendo un gran fanático de la música, _Why creó una biblioteca muy interesante de Ruby para generar música de 8 bits. Se llama bloopsaphone, y como ejemplo uno puede tocar el tema de Los Simpsons con este pequeño código:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;require ‘rubygems’
require ‘bloops’

b = Bloops.new
b.tempo = 180
sound = b.sound Bloops::SQUARE
sound.volume = 0.4
sound.sustain = 0.3
sound.attack = 0.1
sound.decay = 0.3
b.tune sound, “32 + C E F# 8:A G E C – 8:A 8:F# 8:F# 8:F# 2:G”
b.play
sleep 1 while !b.stopped?
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Mi primera experiencia viendo a _Why en persona fue en el año 2005 en FOSCON en Portland, Oregon. Fue en una reunión abierta de Rubystas en una tarde, durante el transcurso de la conferencia de OSCON.
Nos conocimos en la parte trasera del taller de reciclaje de computación FreeGeek, un lugar perfecto. Uno camina entre estántes llenos de equipos viejos de computación y partes listas para ser reconstruídas y donadas a personas. _Why y su banda, un trío, se subieron al escenario y tocaron un repertorio de canciones originales con letras humorísticas sobre Ruby. Durante ello, su laptop se quedó sin batería, y le trajeron un cargador de batería del taller de reciclado.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Como es de esperarse de un no-conformista con la Rubycomunidad, el tenía una laptop con Linux, mientras que la mayoría tenía su sistema Apple. Mientras el conectaba el cargador, las luces disminuyeron y la laptop resaltó con brillantéz. Nosotros estábamos seguros de que iba a prenderse en llamas, pero sobrevivió.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Como también hizo en muchos otros conciertos, el no estaba ahí solamente para cantarle a la audiencia. Escribió un servidor al que la audiencia podía conectarse con su intérprete de Ruby (Drb en realidad) y cambiar los colores que aparecían en la pantalla del escenario. Captó varias risotadas mientras que chisporroteaba de vida.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Todavía recuerdo ese evento como uno de los más importantes de cualquier Conferencia de Ruby en la que haya estado.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;Geoffrey Grosenbach&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;no-con-un-bang&#34;&gt;No con un “Bang”…&lt;/h4&gt;
&lt;p&gt;Why the lucky stiff desapareció en Agosto del 2009. Casi todas sus cuentas de Internet fueron cerradas, todos sus sitios web se desactivaron, incluso los códigos que el lanzó como open-source fueron eliminados. El motivo real de su desaparición es y será por siempre un misterio, pero la mejor pista es que su identidad podría haber sido finalmente descubierta.&lt;/p&gt;
&lt;p&gt;La gente ha juntado suficiente evidencia para estar seguros sobre su verdadero nombre y ocupación. Se encontraron nuevos contenidos en Internet y nuevas bandas de música. Todos los detalles personales que el trató de conservar como privados, se volvieron públicos: el nombre de su esposa, el nombre de su hermana. Y con esto, el desapareció.&lt;/p&gt;
&lt;p&gt;La gente respondió de diferentes maneras. Algunos lo entendieron, otros lo desaprobaron.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ver la eliminación completa de su persona online no me sorprende terriblmente. Allá en el 2007, _Why cerró su blog más importante (RedHanded). Ese evento si me shockeó de verdad, pero me ayudó a entenderlo mejor como persona. El blog, aunque el haya puesto años de trabajo en el y la gente lo identificara con el fuertemente, era inmaterial. Ya no se sentía como el lugar correcto para hablar, así que el se mudó a otro lugar, abandonando el viejo sitio.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;John Resig, creador de jQuery&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sacar todos tus códigos de la red y borrar enteramente tu persona sin algúna advertencia o ayudando a la gente a tomar proyectos en los que pasaron años invirtiendo es una acción bastante estúpida. Es algo duro decirlo así, pero me siento muy violentado sobre esto, porque mientras que yo respeto la idea de impermanencia, no tengo respeto por alguien que tiene tan poco agradecimiento hacia las inversiones y sentimientos de otras personas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;Zed Shaw, creador del servidor Mongrel Web server&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A pesar de las diferentes repercusiones de su decisión al borrar su prescencia y su trabajo, todos los que conocieron a _Why comparten la tristeza por su ausencia.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why the Lucky stiff era una parte importante en la comunidad Ruby. El ayudó a darnos ese inusual carácter y sentido de la imaginación y diversión. Estoy muy triste de ver irse a _Why. Estoy seguro que ha tenido sus razones, pero aún así es una gran pérdida.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;David Heinemeier Hansson&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Su suicidio virtual, como la muerte auto-inducida de un amigo o de un ser amado, deja un indescriptible agujero dentro mío. No me gusta, no estaba listo para ello, y no me parece justo que el lo haya hecho. Sin embargo, como un personaje real de un comic, aún muerto el continuará siendo mi musa para crear cosas divertidas que existen solamente para ser brillantes e interesantes. Larga vida al coding por diversión. Gracias _Why&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;Dr. Nic&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Para _Why: Gracias por traernos tu código y arte a través de estos años. Ha sido ampliamente apreciado, mucho mas de lo que imaginas. Por favor continua disfrutando tu vida y brindando tu alegría y extravagancia. A otros alrededor del mundo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;John Resig&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Desafortunadamente, el decidió irse, y no hay explicación oficial para ello. El sólo se fue. Después de todo lo que hizo, pienso que nadie puede demandar nada de el :-) Pero lo extrañaremos porque el fue un programador excepcional.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;Fábio Akita&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;lo-que-podemos-aprender-de-_why&#34;&gt;Lo que podemos aprender de _why&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/why.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Why the Lucky Stiff era por sobre todas las cosas un artista que trató de hacer una obra de arte con cualquier cosa que el hacía, tanto una presentación como un programa escrito en C. El inspira a las personas porque planeó todo lo que hizo con una estética propia de su pensamiento.&lt;/p&gt;
&lt;h4 id=&#34;diversión&#34;&gt;Diversión&lt;/h4&gt;
&lt;p&gt;La lección más importante que la gente dice haber aprendido del lenguaje de programación Ruby es una lección que el código de _Why incorpora en el corazón de su código: Programar (o lo que sea que hagas) debería ser divertido. Debe haber alegría en tu oficio, y hay un valor preciado en mejorar y juguetear con ello.&lt;/p&gt;
&lt;h4 id=&#34;pathos&#34;&gt;Pathos&lt;/h4&gt;
&lt;p&gt;Pathos es “el poder de evocar sentimientos”. Es también uno de los tres modos de persuasión en retórica. Si lo que haces no evoca sentimientos en las personas, entonces seguramente esté muerto. El trabajo de _Why ciertamente no conformaba a todos, pero la gente no podía, y todavía no puede, ser indiferente a ello.&lt;/p&gt;
&lt;h4 id=&#34;no-temas-correr-riesgos&#34;&gt;No temas correr riesgos&lt;/h4&gt;
&lt;p&gt;Aquí es donde _Why se pone controversial. Contrario a lo que la mayoría de los desarrolladores creen y respaldan, el estilo de programación de _Why no era limpio, legible o testeado. Todo lo opuesto. Esto le daría escalofrios a la mayoría de los programadores de metodologías ágiles, pero _Why tenía un argumento, y esta carta que escribió en el 2005 lo explica claramente.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yo no escribo test para mis códigos. No escribo muchos comentarios. Cambio de estilos muy frecuentemente. Y a la mayoría de ellos, les doy la espalda a la forma predominante de “coding”, porque eso iría en contra de la esencia misma de experimentación. Acortado: todo lo que hago es no darle importancia.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Entonces, mi manera de medir un gran programador es diferente de algún pensamiento predominante en el tema. Me gustaría escuchar lo que Matz diría sobre esto. Debería preguntárselo, en serio.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Admiro a los programadores que toman riesgos. Ellos no están asustados de escribir códigos peligrosos o “malísimos”. Si te preocupas demasiado sobre ser limpio y prolijo, no puedes derribar las barreras (no lo creo!). También admiro a programadores que se rehúsan a quedarse con una idea sobre “la manera en que es el mundo”. Estos programadores ignoran el protocolo y procedimiento. Me gusta mucho Autrijus Tang porque el toma todos los idiomas y todos los procedimientos. No hay una manera incorrecta en su mundo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Como sea, uno dice que quiere ser mejor. Es decir, es todo lo que se necesita. Uno se siente conducido, se comprométe con ello. Podría escribir scripts cortos para compartir con la gente en la web. Pequeños scripts de Ruby, de programas en Rails o &lt;a href=&#34;http://viewsourcecode.org/why/redhanded/inspect/hereIsMousehole12.html&#34;&gt;MouseHole&lt;/a&gt;, scripts para mostrar. Veinte líneas acá y allá, y pronto la gente está empujándote y estás compitiendo por construir esos scripts y pensar tu estilo, nuevas innovaciones y esas cosas.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;_why&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;_Why está defendiendo aquí una idea que ha sido evocada por diferentes personas en diferentes modos. El punto no trata sobre si hay que escribir “tests” o no. El punto es, no tengas miedo de correr riesgos. Si estás familiarizado con el trabajo de &lt;a href=&#34;http://99u.com/articles/6249/seth-godin-the-truth-about-shipping&#34;&gt;Seth Godin&lt;/a&gt;, reconocerás que _Why se trata sobre todo de “mostrar”. El solo crea cosas y las pone allí afuera en lo salvaje, sin temer lo que la gente pensará, ni si su código es visto cómo “malísimo” o “poco profesional”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/Quote_by_Why_The_Lucky_Stiff__when_you_don_t_create_things__you_become_define____2014_01_21_14_39_21.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cuando no creas cosas, te conviertes en algo definido por tus gustos más que por tu habilidad. Tus gustos sólo alejan y excluyen a las personas, así que creá.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;cite&gt;Why the Lucky Stiff&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>FMSL 2013</title>
      <link>https://www.examplelab.com.ar/posts/2014-01-19-misol-2013/</link>
      <pubDate>Sun, 19 Jan 2014 21:52:52 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-01-19-misol-2013/</guid>
      <description>&lt;p&gt;El mes pasado tuve la posibilidad de asistir y participar como orador del &lt;a href=&#34;http://fmsl.com.ar/&#34;&gt;Festival Misionero de Software Libre&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/DyB948J38XY&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;La experiencia fué alucinante, viajé junto a &lt;em&gt;Héctor Sanchez&lt;/em&gt; desde Buenos Aires, y allá en misiones nos recibió &lt;em&gt;Josi Guaimas&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Les dejo algunas de las fotos que tomaron los organizadores del evento:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0722-1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0606-1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0734-1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0620-1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0351-1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0542-2.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0488-1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0691_19_11_45.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0407-1.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/DSC_0648-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;¡ Mil agradecimientos a &lt;em&gt;Josi Guaimas&lt;/em&gt; y a todos los que hicieron posible el festival !!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paneles animados</title>
      <link>https://www.examplelab.com.ar/posts/2014-01-11-paneles-animados/</link>
      <pubDate>Sat, 11 Jan 2014 17:15:41 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2014-01-11-paneles-animados/</guid>
      <description>&lt;p&gt;Hace unos dias, implementé animaciones en los paneles de &lt;strong&gt;huayra-stopmotion&lt;/strong&gt;. Al principio opté por usar la forma mas rudimentaria de mostrar y ocultar paneles, pero luego descubrí como implementarlo usando css3 y un poquito de javascript:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/stopmotion.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En este post me gustaría contarte cómo lo implementé, ya que puede resultarte útil a la hora de hacer algo similar.&lt;/p&gt;
&lt;p&gt;Acá está la versión completa en jsfiddle:&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/hugoruscitti/TVBHC/embedded/result,js,html,css&#34; allowfullscreen=&#34;allowfullscreen&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;el-layout&#34;&gt;El layout&lt;/h2&gt;
&lt;p&gt;Para mantener el maquetado lo mas sencillo posible, vamos a crear tres contenedores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un contenedor superior para el botón &amp;ldquo;alternar panel&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Un panel principal.&lt;/li&gt;
&lt;li&gt;Un panel alternativo que se pueda ocultar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Así queda:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/estado_1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego, si el usuario pulsa el botón &amp;ldquo;alternar panel&amp;rdquo;, se debería ocultar el panel derecho:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/estado_2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Básicamente, armé los contenedores como bloques &lt;code&gt;div&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34; data-lang=&#34;prettyprint&#34;&gt;&amp;lt;body&amp;gt;

		&amp;lt;div id=&#39;botones&#39;&amp;gt;
			&amp;lt;a href=&#39;&#39; id=&#39;alternar&#39; class=&#39;boton&#39;&amp;gt;alternar panel&amp;lt;/a&amp;gt;
		&amp;lt;/div&amp;gt;

		&amp;lt;div id=&#39;contenedor&#39; class=&#39;contenedor&#39;&amp;gt;Panel principal&amp;lt;/div&amp;gt;
		&amp;lt;div id=&#39;panel&#39; class=&#39;panel&#39;&amp;gt;Panel Alternativo&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y en la hoja de estilos asigné posicionamiento absoluto y tamaño fijo a la clase &lt;code&gt;panel&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34; data-lang=&#34;prettyprint&#34;&gt;	&amp;lt;style&amp;gt;

	.panel {
    	border: 1px solid #ff175e;
    	position: absolute;
    	top: 30px;
    	bottom: 0;
    	right: 0;
    	width: 300px;
    	text-align: center;
	}

	.contenedor {
		margin-top: 30px;
		text-align: center;
		margin-right: 300px;
		border: 1px solid gray;
	}

	&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Por cierto, también me aseguré de hacer que el contenedor principal tenga un margen derecho para que no se solape con el panel lateral.&lt;/p&gt;
&lt;h2 id=&#34;controles-de-visibilidad&#34;&gt;Controles de visibilidad&lt;/h2&gt;
&lt;p&gt;Para ocultar y mostrar paneles podemos simplemente usar css.&lt;/p&gt;
&lt;p&gt;Podemos crear una clase para representar el panel invisible (desplazado hacia la izquierda) y aplicarselo a un elemento del dom usando javascript.&lt;/p&gt;
&lt;p&gt;Por ejemplo, para el panel lateral, hay dos clases importantes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;panel&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
}

.&lt;span style=&#34;color:#a6e22e&#34;&gt;panel-invisible&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;right&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;-300&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es decir, ocultar el panel es simplemente moverlo a la izquierda, tantos pixeles como tenga de ancho, así queda fuera de la pantalla completamente.&lt;/p&gt;
&lt;p&gt;Luego, para mostrar y ocultar dinámicamente, agregué un botón que asigna o quita la clase &amp;ldquo;panel-invisible&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;botonAlternar&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alternar&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#a6e22e&#34;&gt;botonAlternar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;panel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;panel&amp;#34;&lt;/span&gt;);
  &lt;span style=&#34;color:#a6e22e&#34;&gt;panel&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;panel-invisible&amp;#34;&lt;/span&gt;);
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;animaciones-al-ocultar-y-mostrar&#34;&gt;Animaciones al ocultar y mostrar&lt;/h2&gt;
&lt;p&gt;Hasta ahora el panel debería ocultarse o mostrarse inmediatamente, sin animación alguna.&lt;/p&gt;
&lt;p&gt;Este comportamiento produce un aspecto un poco extraño, no se puede percibir que el panel se oculta por la parte derecha de la pantalla, desaparece de manera abrupta.&lt;/p&gt;
&lt;p&gt;Acá es donde podemos aplicar una transición css3:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/interpolaciones.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;de-donde-viene-esta-idea&#34;&gt;¿De donde viene esta idea?&lt;/h2&gt;
&lt;p&gt;En realidad, de dos lados:&lt;/p&gt;
&lt;p&gt;Por un lado, cuando empecé a probar &lt;strong&gt;xcode&lt;/strong&gt; noté que los paneles se podían mostrar y ocultar con un selector muy simple:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/botones.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Básicamente tienes estos tres botones para alternar los paneles auxiliares. Acá los podés ver en acción:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2014/Jan/xcode.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El otro lugar que me invitó a pensar un poco sobre animaciones en interfaces de usuario, es este video video:&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/TMe0WnkF1Lc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Creo que el video es impresionante, muy recomendable.&lt;/p&gt;
&lt;h2 id=&#34;links-recomendados&#34;&gt;Links recomendados&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions&#34;&gt;Mozilla: Using CSS transitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mir.aculo.us/2013/10/10/how-to-create-a-web-app-that-looks-like-a-ios-7-native-app-part-2-behavior/&#34;&gt;How to create a web app that looks like a iOS 7 native app - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Automatizando lanzamientos en node-webkit</title>
      <link>https://www.examplelab.com.ar/posts/2013-12-26-automatizando-lanzamientos-con-node-webkit/</link>
      <pubDate>Thu, 26 Dec 2013 01:15:39 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2013-12-26-automatizando-lanzamientos-con-node-webkit/</guid>
      <description>&lt;p&gt;Existe una tarea para &lt;strong&gt;grunt&lt;/strong&gt; que nos permite  automatizar el empaquetado de nuestras aplicaciones para cada plataforma: &lt;a href=&#34;https://npmjs.org/package/grunt-node-webkit-builder&#34;&gt;grunt-node-webkit-builder&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Esto es super útil, imaginá que podés tener tu aplicación lista para distribuir en linux, windows y mac en unos minutos&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;instalación&#34;&gt;Instalación&lt;/h2&gt;
&lt;p&gt;El primer paso es instalarnos la tarea para grunt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install grunt-node-webkit-builder --save
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luego tenemos que agregar algunas reglas a nuestro archivo &lt;strong&gt;GruntFile.js&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Por ejemplo, mi archivo &lt;strong&gt;GruntFile.js&lt;/strong&gt; a la hora de comenzar un proyecto nuevo se ve así:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-prettyprint&#34; data-lang=&#34;prettyprint&#34;&gt;module.exports = function (grunt) {
    grunt.initConfig({
      nodewebkit: {
                    options: {
                              build_dir: &#39;./webkitbuilds&#39;,
                              mac: true,
                              win: true,
                              linux32: true,
                              linux64: true
                  },
                  src: [
                    &#39;./app/**/*&#39;,
                    &#39;./node_modules/**/*&#39;,
                  ]
              },
      });

      grunt.loadNpmTasks(&#39;grunt-node-webkit-builder&#39;);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Luego, para empaquetar la aplicación en todos los sistemas que definimos anteriormente tenemos que ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;grunt nodewebkit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;La tarea &lt;code&gt;nodewebkit&lt;/code&gt; se encarga de bajar las versiones compiladas de nodewebkit justo para empaquetar. Esto demora un buen rato la primera vez, porque tiene que descargar unos &lt;code&gt;300 MB&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/build.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Por último, el resultado del empaquetado va a estar dentro del directorio &amp;ldquo;releases&amp;rdquo;. Listo para distribuir:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Dec/resultado.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y listo, ahora cada vez que quieras hacer un release, lo único que hay que ejecutar es el comando &lt;code&gt;grunt nodewebkit&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Encuentro Linux en Temuco, Chile</title>
      <link>https://www.examplelab.com.ar/posts/2013-11-18-encuentro-linux-en-temuco-chile/</link>
      <pubDate>Mon, 18 Nov 2013 10:58:16 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2013-11-18-encuentro-linux-en-temuco-chile/</guid>
      <description>&lt;p&gt;Este mes tuve la posibilidad de participar de un evento muy interesante llamado Encuentro Linux, en la ciudad de Temuco:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0661_JPG.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0636_JPG.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es la primera vez que visito Temuco, y de principio a fin estuvo espectacular, la Universidad de la Frontera en donde se realizó el evento es muy linda, está rodeada de jardines y espacios comunes grandes y cómodos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0646_JPG.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0642_JPG.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0633_JPG.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El evento comenzó el dia jueves, tuve la oportunidad de dar una charla sobre pilas-engine y al dia siguiente otra sobre node-webkit. Asistí a otras charlas muy buenas, una sobre git, opencv y django.&lt;/p&gt;
&lt;p&gt;Pude grabar mis dos charlas, al menos solo el escritorio y el audio. Si las quieren ver están disponibles aquí y en mi &lt;a href=&#34;http://www.youtube.com/user/hugoruscitti&#34;&gt;canal de youtube&lt;/a&gt;:&lt;/p&gt;
&lt;h3 id=&#34;charla-como-desarrollar-videojuegos-con-pilas-engine&#34;&gt;Charla: Como desarrollar videojuegos con pilas-engine&lt;/h3&gt;
&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/fr9ijYdB4Tc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;charla-haciendo-aplicaciones-complejas-de-manera-simple&#34;&gt;Charla: Haciendo aplicaciones complejas de manera simple&lt;/h3&gt;
&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/TzDhzayO_uk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;c06e755032170131a8f91e7b7986a513&#34; data-ratio=&#34;1.41436464088398&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;Luego aprovechamos a conocer algunos lugares para almorzar y caminar un poco, no saqué muchas fotos, pero me llevo unos recuerdos super buenos y alegría de conocer personas muy copadas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/1426424_736118509749425_288751624_n.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/1460313_736118079749468_107199091_n.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/1455858_736118406416102_1058160263_n.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0663_JPG.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0684_JPG.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ojalá se repita un evento así en breve, mil gracias a los organizadores por ponerse al hombro todo el evento, estuvo espectacular y siento que todos los que asistimos quedamos super emocionados y contentos con el evento.&lt;/p&gt;
&lt;p&gt;¡¡ Gracias Encuentro Linux !!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Semana de la juventud en Bariloche</title>
      <link>https://www.examplelab.com.ar/posts/2013-11-03-semana-de-la-juventud-en-bariloche/</link>
      <pubDate>Sun, 03 Nov 2013 23:32:32 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2013-11-03-semana-de-la-juventud-en-bariloche/</guid>
      <description>&lt;p&gt;Esta semana tuve la oportunidad de viajar a Bariloche para dar un taller sobre &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; a chicos de escuelas secundarias.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_05612.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El evento estuvo espectacular, los chicos armaron stands, participaron de talleres de edición de videos con openshot, competencias de fútbol tenis, bailes y mucho más:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0580.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0585.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0590.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0542.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Y por si fuera poco, el &lt;a href=&#34;http://es.wikipedia.org/wiki/Centro_C%C3%ADvico_Bariloche&#34;&gt;centro cívico&lt;/a&gt; de la ciudad de &lt;strong&gt;Bariloche&lt;/strong&gt; es espectacular, la vista al &lt;em&gt;Lago Nahuel Huapi&lt;/em&gt; es increible:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0567_JPG.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0579_JPG.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ojalá pueda visitar nuevamente bariloche con un taller de &lt;strong&gt;pilas-engine&lt;/strong&gt; renovado.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Nov/IMG_0606_JPG.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pilas en pycon 2013 Rosario</title>
      <link>https://www.examplelab.com.ar/posts/2013-11-01-pilas-en-pycon-2013-rosario/</link>
      <pubDate>Fri, 01 Nov 2013 21:24:50 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2013-11-01-pilas-en-pycon-2013-rosario/</guid>
      <description>&lt;p&gt;Esta semana publiqué el video de mi charla sobre &lt;strong&gt;pilas-engine&lt;/strong&gt; en el evento &lt;a href=&#34;http://ar.pycon.org/2013&#34;&gt;PyCon 2013&lt;/a&gt; de la ciudad de Rosario.&lt;/p&gt;
&lt;p&gt;Aquí estan las diapositivas:&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;3bca4350246c013116920a063b0afe2f&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;y el video:&lt;/p&gt;
&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/tXA2BgzrvzA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Haciendo un cargador de juegos python</title>
      <link>https://www.examplelab.com.ar/posts/2012-08-18-haciendo-un-cargador-de-juegos-python/</link>
      <pubDate>Sat, 18 Aug 2012 15:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2012-08-18-haciendo-un-cargador-de-juegos-python/</guid>
      <description>&lt;p&gt;Si escribes juegos usando python, seguramente te has encontrado en problemas al distribuir juegos sobre windows.&lt;/p&gt;
&lt;p&gt;Python es un gran lenguaje, pero cuando se utiliza con varias bibliotecas
sobre Windows termina siendo algo difícil de transportar de un equipo a otro, y si quieres
presentar tus juegos a muchas personas eso termina convirtiendose en un problema.&lt;/p&gt;
&lt;p&gt;En este artículo veremos una alternativa para empaquetar y distribuir nuestros juegos sobre windows de
manera bastante sencilla, crearemos varios cargadores de juegos para bibliotecas como &lt;a href=&#34;http://www.pygame.org&#34;&gt;pygame&lt;/a&gt;, &lt;a href=&#34;http://cocos2d.org&#34;&gt;cocos2d&lt;/a&gt; y
&lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;un-adelanto-para-impacientes&#34;&gt;Un adelanto para impacientes&lt;/h2&gt;
&lt;p&gt;Si quieres usar cargadores, pero no seguir paso a paso estas instrucciones, ve a la página de github de este proyecto y descarga las versiones listas para utilizar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hugoruscitti/cargador_de_juegos/downloads&#34;&gt;Descargar los cargadores de juegos desde github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hugoruscitti/cargador_de_juegos&#34;&gt;Ver código de los cargadores en github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;que-es-un-cargador-de-juegos&#34;&gt;¿Que es un cargador de juegos?&lt;/h2&gt;
&lt;p&gt;Un cargador de juegos es un archivo ejecutable &lt;code&gt;.exe&lt;/code&gt; que incluye un intérprete de python y todas las bibliotecas necesarias para ejecutar juegos.&lt;/p&gt;
&lt;p&gt;Este intérprete es independiente del juego, lo unico que sabe hacer es &lt;em&gt;&amp;ldquo;ejecutar un archivo .py&amp;rdquo;&lt;/em&gt;, así que los cargadores se hacen una sola vez y luego se comparten, ya sea entre proyectos o entre programadores.&lt;/p&gt;
&lt;p&gt;Entonces, lo interesante de un cargador, es que podemos entregarlo a nuestros usuarios junto al código de
nuestro juego y listo, van a poder jugar sin necesidad de configurar o instalar nada mas&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;comenzando&#34;&gt;Comenzando&lt;/h2&gt;
&lt;p&gt;Para iniciar, vamos a comenzar con un sistema windows que no tiene python ni otras
bibliotecas instaladas, solo para comenzar desde el principio.&lt;/p&gt;
&lt;p&gt;Mi recomendación es que utilices &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;virtual box&lt;/a&gt;, así todo tu entorno permanece independiente de las pruebas que realicemos.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/desktop.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;paso-a-paso&#34;&gt;Paso a paso&lt;/h1&gt;
&lt;p&gt;Primero debes instalado python 2.6.6, la ultima versión binaria para windows está en:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.python.org/download/releases/2.6.6/&#34;&gt;http://www.python.org/download/releases/2.6.6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Asegurate de instalar python en el directorio &lt;code&gt;c:\Python26&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/instala_python.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Luego tendríamos que instalar &lt;code&gt;cx-freeze&lt;/code&gt; para la versión &lt;code&gt;2.6&lt;/code&gt;. El sitio de descargas es:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cx-freeze.sourceforge.net&#34;&gt;http://cx-freeze.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ten en cuenta que aquí estoy usando python &lt;em&gt;2.6&lt;/em&gt;, aunque las mismas instrucciones podrían
funcionar con versiones mas nuevas también.&lt;/p&gt;
&lt;h2 id=&#34;creando-el-cargador-básico&#34;&gt;Creando el cargador básico&lt;/h2&gt;
&lt;p&gt;Nuestro primer cargador solamente incluirá la biblioteca estándar de python y &lt;code&gt;Tkinter&lt;/code&gt; para manejo de interfaz gráfica.&lt;/p&gt;
&lt;p&gt;Construye un archivo llamado &lt;code&gt;cargador.py&lt;/code&gt; y el siguiente contenido:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import tkMessageBox
import Tkinter
import imp
import sys
import os

window = Tkinter.Tk()
window.wm_withdraw()

if not os.path.exists(&#39;run.py&#39;):
    tkMessageBox.showerror(&amp;quot;Error&amp;quot;, &amp;quot;No se encuentra el archivo run.py&amp;quot;)
    sys.exit(1)

try:
    imp.load_source(&amp;quot;__main__&amp;quot;, &amp;quot;run.py&amp;quot;)
except Exception, e:

    tkMessageBox.showerror(&amp;quot;Error&amp;quot;, e)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Este programa solamente va a buscar y ejecutar un archivo llamado &lt;code&gt;run.py&lt;/code&gt;, y si no lo encuentra va a emitir un mensaje de error:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/error.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;generando-el-archivo-ejecutable&#34;&gt;Generando el archivo ejecutable&lt;/h2&gt;
&lt;p&gt;El siguiente paso es &lt;em&gt;compilar&lt;/em&gt; nuestro cargador para que se pueda ejecutar de manera independiente.&lt;/p&gt;
&lt;p&gt;Tenemos que crear dos archivos, &lt;code&gt;setup.py&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from cx_Freeze import setup
from cx_Freeze import Executable

exe = Executable(
        script=&amp;quot;cargador.py&amp;quot;,
        base=&amp;quot;Win32GUI&amp;quot;,
)

setup(
    name=&amp;quot;Cargador&amp;quot;,
    version=&amp;quot;0.1&amp;quot;,
    description=&amp;quot;Un cargador de juegos&amp;quot;,
    executables=[exe],
)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y &lt;code&gt;crear_ejecutable.bat&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;c:\Python26\python.exe setup.py build
pause
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;tendríamos que tener un directorio similar al siguiente:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/archivos.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ahora tienes que ejecutar el archivo &lt;code&gt;crear_ejecutable.bat&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En pantalla debería aparecer todo el proceso de generación del ejecutable:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/compilando-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Al final de la compilación, se habrá generado una carpeta con el
ejecutable del cargador:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/build-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;probando-el-cargador&#34;&gt;Probando el cargador&lt;/h2&gt;
&lt;p&gt;Ahora la carpeta &lt;code&gt;build&lt;/code&gt; tendrá todos los archivos para incluir, excepto el de nuestro programa.&lt;/p&gt;
&lt;p&gt;Hagamos un programa sencillo, algo llamado &lt;code&gt;run.py&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import tkMessageBox
import Tkinter

root = Tkinter.Tk()
root.withdraw()
tkMessageBox.showinfo(&amp;quot;Hola&amp;quot;, &amp;quot;Bienvenido al primer programa de ejemplo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Listo, ahora solo hay que colocarlo en la carpeta &lt;code&gt;build&lt;/code&gt; y ejecutar el nuevo archivo &lt;code&gt;cargador.exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/exito.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;versión-2-añadiendo-soporte-para-pygame&#34;&gt;Versión 2: añadiendo soporte para pygame&lt;/h2&gt;
&lt;p&gt;Hasta ahora, tenemos lo principal del cargador de juegos. Aunque no incluye muchas bibliotecas que utilizamos para realizar videojuegos.&lt;/p&gt;
&lt;p&gt;Hagamos un pequeño cambio para agregar soporte a &lt;a href=&#34;http://www.pygame.org&#34;&gt;pygame&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Primero tenemos de asegurarnos de tener instalada la biblioteca &lt;a href=&#34;http://www.pygame.org&#34;&gt;pygame&lt;/a&gt;, para nuestra versión de python (2.6) y luego tenemos que editar el archivo &lt;code&gt;setup.py&lt;/code&gt; y colocar en la primer linea lo siguiente:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import pygame
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;por último, tendríamos que ejecutar nuevamente el archivo &lt;code&gt;crear_ejecutable.bat&lt;/code&gt; y revisar la carpeta &lt;code&gt;build&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Puedes verlo con mas detalle en &lt;a href=&#34;https://github.com/hugoruscitti/cargador_de_juegos/tree/master/cargador_pygame&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;versión-3-con-soporte-para-cocos2d&#34;&gt;Versión 3: con soporte para Cocos2D&lt;/h2&gt;
&lt;p&gt;Para crear un cargador especial de &lt;a href=&#34;http://cocos2d.org&#34;&gt;cocos2d&lt;/a&gt; necesitamos instalar &lt;a href=&#34;http://www.pyglet.org&#34;&gt;pyglet&lt;/a&gt;, &lt;a href=&#34;http://pypi.python.org/pypi/numpy&#34;&gt;numpy&lt;/a&gt; y luego &lt;a href=&#34;http://cocos2d.org&#34;&gt;cocos2d&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Una vez concluido el proceso de instalación, tendríamos que volver
a editar el archivo &lt;code&gt;setup.py&lt;/code&gt; e incluir a &lt;a href=&#34;http://cocos2d.org&#34;&gt;cocos2d&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import cocos
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Y listo, ahora solo queda ejecutar &lt;code&gt;crear_ejecutable.bat&lt;/code&gt;, copiar el archivo
&lt;code&gt;avbin.dll&lt;/code&gt; de &lt;a href=&#34;http://avbin.github.com/AVbin/Download.html&#34;&gt;avbin&lt;/a&gt; dentro del directorio &lt;code&gt;build&lt;/code&gt;, agregar todas las imagenes que
necesite el juego y distribuir nuestro cargador:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/cocos2d.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Puedes verlo con mas detalle en &lt;a href=&#34;https://github.com/hugoruscitti/cargador_de_juegos/tree/master/cargador_cocos2d&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;version-con-soporte-para-pilas-engine&#34;&gt;Version con soporte para pilas-engine&lt;/h2&gt;
&lt;p&gt;Siguiendo las &lt;a href=&#34;http://pilas-engine.com.ar/doc/tutoriales/instalacion/windows_xp.rst&#34;&gt;instrucciones de instalación&lt;/a&gt; para &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; sobre windows, instalamos
pyqt4, box2D y luego &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Es importante tener en cuenta que box2D necesita un &lt;a href=&#34;http://www.losersjuegos.com.ar/foro/viewtopic.php?f=26&amp;amp;t=1526#p6985&#34;&gt;pequeño cambio&lt;/a&gt; como nos indicó barajas en el foro de losersjuegos.&lt;/p&gt;
&lt;p&gt;Una vez concluido el proceso de instalación, tendríamos que volver
a editar el archivo &lt;code&gt;setup.py&lt;/code&gt; e incluir a &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import pilas
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A diferencia de los anteriores, &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; necesita varios archivos de
recursos para funcionar correctamente. Vé al directorio donde se encuentra
el código fuente de &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; en tu equipo, y copia el directorio &lt;code&gt;data&lt;/code&gt;
completamente dentro del directorio &lt;code&gt;build&lt;/code&gt; que contiene al cargador (y
el archivo &lt;code&gt;run.py&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Ahora sí, ejecutando el cargador obtendremos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/pilas1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;y cuando pulsemos el botón &amp;ldquo;OK&amp;rdquo; aparecerá:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/pilas2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Puedes ver un ejemplo de cargador &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; en &lt;a href=&#34;https://github.com/hugoruscitti/cargador_de_juegos/tree/master/cargador_pilas&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;finalizando&#34;&gt;Finalizando&lt;/h2&gt;
&lt;p&gt;Los cargadores de juegos son una gran oportunidad para distribuir juegos y hacerlos mucho mas accesibles a los usuarios.&lt;/p&gt;
&lt;p&gt;Espero que este documento te resulte útil, y recuerda que tenemos un repositorio en &lt;a href=&#34;https://github.com/hugoruscitti/cargador_de_juegos&#34;&gt;github&lt;/a&gt; con la última versión de los cargadores. Estás invitado a participar del desarrollo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vagrant para entornos web</title>
      <link>https://www.examplelab.com.ar/posts/2012-07-27-vagrant/</link>
      <pubDate>Fri, 27 Jul 2012 15:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2012-07-27-vagrant/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://vagrantup.com&#34;&gt;vagrant&lt;/a&gt; es una herramienta ideal para programadores de aplicaciones web. Permite tener entornos configurados, independientes y fáciles de compartir.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;El objetivo de este &lt;strong&gt;post&lt;/strong&gt; es recomendar la herramienta y compartir algunos de los comandos que mas utilizo con &lt;a href=&#34;http://vagrantup.com&#34;&gt;vagrant&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;por-qué-usar-vagrant&#34;&gt;¿Por qué usar vagrant?&lt;/h2&gt;
&lt;p&gt;Si desarrollas aplicaciones web, es muy probable que necesites configurar tu entorno instalando bases de datos, bibliotecas, servidores etc.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://vagrantup.com&#34;&gt;vagrant&lt;/a&gt; te permite manejar máquinas virtuales, y mantener los entornos de tu aplicación independientes de tu sistema, o casi.&lt;/p&gt;
&lt;p&gt;Un punto clave del diseño del &lt;a href=&#34;http://vagrantup.com&#34;&gt;vagrant&lt;/a&gt;, es lo que llaman &lt;em&gt;boxes&lt;/em&gt;. Para &lt;a href=&#34;http://vagrantup.com&#34;&gt;vagrant&lt;/a&gt; un &lt;em&gt;box&lt;/em&gt; es un sistema base, con varios componentes como &lt;code&gt;ssh&lt;/code&gt;, &lt;code&gt;ruby&lt;/code&gt; y directorios compatidos.&lt;/p&gt;
&lt;p&gt;Desde el punto de vista del programador, es una muy buena idea, porque ya resuelve la parte tediosa de trabajar con maquinas virtuales y permite comenzar a desarrollar rápidamente.&lt;/p&gt;
&lt;h2 id=&#34;instalación&#34;&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Ingresa en la siguiente web y descaga la versión apropiada para tu sistema operativo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://downloads.vagrantup.com/&#34;&gt;downloads.vagrantup.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El siguiente paso es tener un &lt;em&gt;box&lt;/em&gt; que nos permita
comenzar a construir los entornos.&lt;/p&gt;
&lt;p&gt;Por ejemplo, para instalar un &lt;em&gt;box&lt;/em&gt; de ubuntu 12.04 (32 bits) se puede ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vagrant box add precise32 http://files.vagrantup.com/precise32.box
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hay muchos mas &lt;em&gt;box&lt;/em&gt; disponibles en el sitio &lt;a href=&#34;http://www.vagrantbox.es&#34;&gt;vagrantbox.es&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;creando-una-máquina-virtual&#34;&gt;Creando una máquina virtual&lt;/h2&gt;
&lt;p&gt;Estando dentro del directorio de la aplicación, podemos ejecutar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vagrant init precise32 http://mybox
vagrant up
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El comando &lt;code&gt;init&lt;/code&gt; va a crear un archivo llamado &lt;code&gt;Vagrantfile&lt;/code&gt;, en donde hay varios parámetros de configuración.&lt;/p&gt;
&lt;h2 id=&#34;ingresando-en-el-entorno&#34;&gt;Ingresando en el entorno&lt;/h2&gt;
&lt;p&gt;Con el comando &lt;code&gt;vagrant ssh&lt;/code&gt; puedes ingresar en el entorno.&lt;/p&gt;
&lt;p&gt;Aquí, una de las cosas mas interesantes es que accediendo al directorio &lt;em&gt;/vagrant&lt;/em&gt; puedo acceder a todos los archivos del proyecto original, ideal para servir los archivos de la aplicación web.&lt;/p&gt;
&lt;h2 id=&#34;sitios-recomendados&#34;&gt;Sitios recomendados&lt;/h2&gt;
&lt;p&gt;Para conocer mas sobre &lt;a href=&#34;http://vagrantup.com&#34;&gt;vagrant&lt;/a&gt;, te recomiendo visitar
estos sitios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://railscasts.com/episodes/292-virtual-machines-with-vagrant&#34;&gt;Screencast sobre vagrant en railscasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vagrantup.com&#34;&gt;Sitio oficial de la herramienta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rediseñando los eventos de pilas-engine</title>
      <link>https://www.examplelab.com.ar/posts/2012-02-29-redisenando-los-eventos-de-pilas-engine/</link>
      <pubDate>Wed, 29 Feb 2012 15:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2012-02-29-redisenando-los-eventos-de-pilas-engine/</guid>
      <description>&lt;p&gt;El sistema de eventos de &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; necesitaba
varias mejoras. Desde que lo implementé, siempre tuve
la sensación de que se podía simplificar y mejorar
notablemente.&lt;/p&gt;
&lt;p&gt;Por suerte hoy logré implementar los cambios que quería,
le dediqué varias horas pero valió la pena el esfuerzo, quedó
mucho mejor de lo que esperaba, y en el camino aprendí varias cosas
nuevas.&lt;/p&gt;
&lt;h1 id=&#34;por-qué-es-importante&#34;&gt;¿Por qué es importante?&lt;/h1&gt;
&lt;p&gt;Casi todos los motores de juegos tienen algún sistema de eventos,
de alguna u otra forma se te permite conocer el estado de las
teclas, del mouse etc.&lt;/p&gt;
&lt;p&gt;Pero en &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; la cosa es un poco mas ambiciosa, &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;
va a ser una de las primeras experiencias de programación para
muchas personas, y actualmente hay juegos en desarrollo que van
a crecer y se van a volver mas complejos.&lt;/p&gt;
&lt;p&gt;Por ese motivo, el sistema de eventos (el corazón de los juegos), merece
mucha atención. Tiene que ser un sistema simple, fácil de utilizar y a
la vez flexible.&lt;/p&gt;
&lt;h1 id=&#34;el-problema&#34;&gt;El problema&lt;/h1&gt;
&lt;p&gt;A medida que estás haciendo un juego la cosa se empieza a tornar
compleja. Comienzas a tener contadores, barras de energía, personajes, enemigos etc.&lt;/p&gt;
&lt;p&gt;Incluso si has previsto todas estas cosas antes de empezar, no es
una buena idea diseñar con todo eso en mente. Es mejor ir paso a paso, modificando
lo existente y adaptándolo, progresando mediante prototipos simples y que se
puedan extender.&lt;/p&gt;
&lt;p&gt;Aquí es donde el sistema de eventos de &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; se destaca
de otros, ¿Por qué?.&lt;/p&gt;
&lt;p&gt;Porque los eventos se pueden usar para poner en comunicación a
varios componentes del juego, usando una solución elegante y
muy sofisticada del mundo del software llamada &lt;em&gt;patrón de diseño observador&lt;/em&gt;.&lt;/p&gt;
&lt;h1 id=&#34;un-ejemplo-barras-de-energía&#34;&gt;Un ejemplo: barras de energía&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; está pensado para hacer juegos, así que en lugar de
hablar desde un punto de vista teórico, te voy a comentar cómo
funciona el sistema de eventos en un juego real: &lt;code&gt;Shaolin&#39;s Blind Fury&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En el juego &lt;code&gt;Shaolin&#39;s Blind Fury&lt;/code&gt; hay una barra de energía que
nos permite ver la vitalidad de un enemigo. Esto es útil para conocer
cuanto puede vivir un enemigo mientras luchamos contra él:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/barra.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esta barra solamente muestra la energía del enemigo que estamos
golpeando. Si nos alejamos, y luchamos contra otro enemigo, la misma
barra nos tiene que mostrar la energía del nuevo contrincante.&lt;/p&gt;
&lt;p&gt;Imagina que no conocemos los eventos de pilas, ¿Cómo podríamos mostrar
una barra de energia?: podríamos escribir algo así:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;barra = Energia(un_enemigo)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y luego podríamos hacer que este objeto &lt;code&gt;lea&lt;/code&gt; el atributo
numérico &lt;code&gt;energia&lt;/code&gt; del enemigo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Energia(ActorEnergia):

    def __init__(self, enemigo):
        self.enemigo = enemigo

    def actualizar(self):
        self.progreso = self.enemigo.energia
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si nuestro juego solo tuviera un enemigo, estaríamos perfecto. Pero no, lo
complicado de esta solución es lograr que la misma barra pueda
mostrar la energía de otros enemigos.&lt;/p&gt;
&lt;p&gt;¿Cómo tendría que diseñar las cosas si mi juego tiene mas enemigos?.&lt;/p&gt;
&lt;p&gt;La respuesta inmediata sería: &amp;ldquo;enviarle a la energía una lista de enemigos,
en lugar de uno solo&amp;rdquo;. Pero si hago eso, ¿Cómo hago para que la barra
de energía sepa el momento justo en que he logrado golpear a otro enemigo?.&lt;/p&gt;
&lt;p&gt;Como verás, la solución inicial se va volviendo demasiado complicada, y
tenemos que hacer que la barra de energía sepa cada vez mas cosas
y reciba mas argumentos. Es demasiado amenazante, si seguimos por
este camino se va a poner demasiado complejo&amp;hellip;&lt;/p&gt;
&lt;h1 id=&#34;un-enfoque-distinto-menos-acople&#34;&gt;Un enfoque distinto: menos acople&lt;/h1&gt;
&lt;p&gt;Vamos a cambiar la estrategia, usemos el nuevo sistema de eventos
de &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Claramente necesito saber &amp;ldquo;en qué momento se ha golpeado a un enemigo&amp;rdquo;, así
que mi primer paso es crear un evento que represente eso:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pilas.eventos.cuando_golpean = pilas.eventos.Evento(&amp;quot;cuando golpean&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ese evento, ahora me va a servir para conocer el momento exacto del
golpe.&lt;/p&gt;
&lt;p&gt;La barra de energía necesita &lt;code&gt;observar&lt;/code&gt; a ese evento, porque cuando
ese evento se &lt;code&gt;emita&lt;/code&gt; voy a necesitar redibujar la energía:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Energia(ActorEnergia):

    def __init__(self):
        pilas.eventos.cuando_golpean.conectar(self.actualizar_energia)

    def actualizar(self):
        # ahora no hace nada...
        pass

    def actualizar_energia(self, evento):
        self.progreso = evento.quien.energia
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;De esta forma, la barra queda completamente libre de los enemigos, no
necesita tener una referencia o una lista, no importa. La
barra solamente será notificada cuando el evento &lt;code&gt;cuando_golpean&lt;/code&gt; sea
&lt;code&gt;emitido&lt;/code&gt; por alguien mas.&lt;/p&gt;
&lt;p&gt;Por último, en el código del enemigo quero emitir la señal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Enemigo(Actor):

    def recibir_golpe(self):
        self.energia -= 10

        if self.energia &amp;lt; 0:
            self.morir()

        pilas.eventos.cuando_golpean.emitir(quien=self)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;y listo, ahora cuando un enemigo reciba un golpe, simplemente
emitirá la señal &lt;code&gt;cuando_golpean&lt;/code&gt;. Y en nuestro caso, esa señal
es observada por la &lt;code&gt;Energia&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Algo interesante del ejemplo anterior, es que cuando emitimos
una señal podemos enviar los argumentos que queramos. En este caso usé el
argumento &lt;code&gt;quien&lt;/code&gt;, porque me interesa saber quién recibió el golpe para
mostrar su energía. Puedes mirar el código de la clase Energia para ver cómo estoy
leyendo ese parámetro &lt;code&gt;quien&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ten en cuenta que ahora no importa cuantos enemigos tengamos en
nuestro juego. Tampoco nos limita tener una sola barra de energía, de hecho,
podríamos agregar un contador de puntajes, que nos aumente el puntaje
cada vez que golpeamos a un enemigo. ¿Cómo?, simplemente haciendo que
el puntaje sea un &lt;code&gt;observador&lt;/code&gt; del evento &lt;code&gt;cuando_golpean&lt;/code&gt;, igual que
la energía.&lt;/p&gt;
&lt;h1 id=&#34;otro-ejemplo-pero-sin-código-solo-para-pensar&#34;&gt;Otro ejemplo pero sin código, solo para pensar&lt;/h1&gt;
&lt;p&gt;Imagina lo simple que resulta esta comunicación y cómo nos
puede simplificar el desarrollo:&lt;/p&gt;
&lt;p&gt;Piensa en el juego pacman. Hay un protagonista, muchas pastillas y fantasmas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/pacman.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;En un juego como pacman podríamos crear un evento llamado &lt;code&gt;come_pastilla&lt;/code&gt;,
y emitirlo cada vez que el &lt;code&gt;pacman&lt;/code&gt; toca una pastilla.&lt;/p&gt;
&lt;p&gt;A su vez, a este evento &lt;code&gt;come_pastilla&lt;/code&gt; lo podrían estar observando dos
actores: un &lt;code&gt;contador de puntaje&lt;/code&gt; que se incrementa con cada pastilla y
una &lt;code&gt;escena&lt;/code&gt;, que podría tener un contador sencillo para saber cuando
tiene que pasar al siguiente nivel.&lt;/p&gt;
&lt;p&gt;Otro evento llamado &lt;code&gt;muere_pacman&lt;/code&gt; podría ser observado por un actor
&lt;code&gt;contador de vidas&lt;/code&gt;, que maneje un visor de vidas al costado de la pantalla.&lt;/p&gt;
&lt;p&gt;Y un evento como &lt;code&gt;come_pastilla_especial&lt;/code&gt; podría hacer que todos los
fantasmas observadores de ese evento se pongan azules!&lt;/p&gt;
&lt;h1 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h1&gt;
&lt;p&gt;El nuevo sistema de eventos de pilas es paso adelante, le
va a permitir a muchas personas lograr diseños de video-juegos
mas simples y fáciles de extender.&lt;/p&gt;
&lt;p&gt;Personalmente, estoy contento por las posibilidades técnicas
que ofrece, y además, porque los resultados los estoy
poniendo en práctica ahora mismo con el juego &lt;code&gt;Shaolin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ojalá mi artículo te halla resultado útil, y que los eventos
de &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas-engine&lt;/a&gt; te parezcan una buena idea.&lt;/p&gt;
&lt;p&gt;Gracias!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Como crear grillas de sprites con Gimp</title>
      <link>https://www.examplelab.com.ar/posts/2012-01-14-como-crear-grillas-de-sprites-con-gimp/</link>
      <pubDate>Sat, 14 Jan 2012 15:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2012-01-14-como-crear-grillas-de-sprites-con-gimp/</guid>
      <description>&lt;p&gt;En este artículo veremos cómo crear una grilla de
imágenes para colocar en un videojuego.&lt;/p&gt;
&lt;p&gt;Usaremos &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt; junto a unos complementos que escribí
hace varios meses. Y por último, vamos
a poner esa grilla en acción usando el motor &lt;a href=&#34;http://www.pilas-engine.com.ar&#34;&gt;pilas&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;conceptos-iniciales&#34;&gt;Conceptos iniciales&lt;/h1&gt;
&lt;p&gt;Básicamente, una grilla se utiliza en los videojuegos 2D
para representar todos los cuadros de una animación:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/special-2.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Por ejemplo, en la imagen anterior tenemos 5 cuadros
de animación en la misma imagen (tomado el juego
&lt;a href=&#34;https://github.com/hugoruscitti/sbfury&#34;&gt;sbfury&lt;/a&gt; de losersjuegos).&lt;/p&gt;
&lt;p&gt;En un juego tradicional, podrías tener muchos cuadros
de animación, así que las grillas ayudan a reducir
la cantidad de imágenes drásticamente. Además, facilitan
muchísimo la programación.&lt;/p&gt;
&lt;p&gt;Además, las grillas no solo sirven para animaciones
de personajes, también pueden ser utilizadas para todo
tipo de imágenes.&lt;/p&gt;
&lt;h1 id=&#34;herramientas&#34;&gt;Herramientas&lt;/h1&gt;
&lt;p&gt;Vamos a usar dos herramientas, una es &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt;, un editor
de imágenes muy popular en Gnu/Linux, y un conjunto
de plugins:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/gimp-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;instalar-los-plugins&#34;&gt;Instalar los plugins&lt;/h1&gt;
&lt;p&gt;Vamos a instalar unas extensiones para &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt;. En la
consola de tu equipo escribí los siguientes comandos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd .Gimp-2.6/plug-ins/

wget http://www.losersjuegos.com.ar/_media/software/Gimp/spritetool.zip

unzip spritetool.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Listo, ahora solo hay que reiniciar &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ten en cuenta que hay una descripción mucho mas detallada
de estos complementos en la &lt;a href=&#34;http://www.losersjuegos.com.ar/software/Gimp&#34;&gt;página de losersjuegos&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;comencemos&#34;&gt;Comencemos&lt;/h1&gt;
&lt;p&gt;Vamos a tomar una imagen con varios cuadros de animación
y lo vamos a convertir en una grilla.&lt;/p&gt;
&lt;p&gt;Tomemos la imagen de &lt;em&gt;hannias&lt;/em&gt;, uno de los enemigos del
juego &lt;a href=&#34;https://github.com/hugoruscitti/sbfury&#34;&gt;sbfury&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/hannias.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Este imagen tiene varios cuadros de animación, pero están
desorganizados, no los podemos incorporar en el juego
directamente, necesitamos organizarlo.&lt;/p&gt;
&lt;p&gt;Usando &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt;, vamos a copiar y pegar cada una de los cuadros
que nos interesan en una nueva imagen. Aquí podrías usar
la opción &lt;em&gt;pegar en nueva imagen&lt;/em&gt;.&lt;/p&gt;
&lt;h1 id=&#34;capas&#34;&gt;Capas&lt;/h1&gt;
&lt;p&gt;Ten en cuenta que al momento de pegar, &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt; &lt;strong&gt;no hace&lt;/strong&gt; una nueva
capa. Tienes que pulsar el botón &lt;code&gt;Nueva capa&lt;/code&gt; para que
esto ocurra.&lt;/p&gt;
&lt;p&gt;Por ejemplo, al pegar la ventana de capas me muestra la selección:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/pegar.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pero al momento de pulsar el icono &lt;code&gt;nueva capa&lt;/code&gt; aparecen
las dos capas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/pegar_en_capa.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Es importante tener cada cuadro en su propia capa, esto es lo que
nos va a permitir alinear todos los cuadros de animación y hacerlo
de manera prolija.&lt;/p&gt;
&lt;p&gt;La ventana de capas de &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt; te permitirá organizar las capas, ocultarlas
o incluso modificar la transparencia (bastante útil a la hora de
alinear los cuadros).&lt;/p&gt;
&lt;p&gt;Por ejemplo, acá cambié la transparencia de una de las capas para
lograr la alineación que quería:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/alpha.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ten en cuenta que hay dos atajos de teclas
super útiles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;La tecla &lt;code&gt;TAB&lt;/code&gt; oculta todas las ventanas auxiliares de manera temporal.&lt;/li&gt;
&lt;li&gt;La tecla &lt;code&gt;m&lt;/code&gt; te permite seleccionar la herramienta para trabajar con capas, así que luego de pulsar &lt;code&gt;m&lt;/code&gt; vas a poder mover las capas con el teclado, usando las flechas direccionales.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;arreglo-de-capas&#34;&gt;Arreglo de capas&lt;/h2&gt;
&lt;p&gt;El siguiente paso es hacer que las capas ocupen el área de la
imagen. Esto se puede hacer pulsando el botón derecho sobre el panel
de capas y seleccionando &lt;code&gt;capa al tamaño de la imagen&lt;/code&gt;. Esto
se tiene que hacer en cada una de las capas.&lt;/p&gt;
&lt;h2 id=&#34;generando-la-grilla&#34;&gt;Generando la grilla&lt;/h2&gt;
&lt;p&gt;Ahora si, podemos activar el plugin para convertir nuestras
capas en una grilla.&lt;/p&gt;
&lt;p&gt;Pulsa el botón derecho sobre la ventana de la imagen y seleccionar
&lt;code&gt;Python-fu&lt;/code&gt; → &lt;code&gt;SpriteTool&lt;/code&gt; → &lt;code&gt;Create Sheet&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La imagen se va a convertir en un grilla lista para usar:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/final.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;haciendo-una-prueba-con-pilas&#34;&gt;Haciendo una prueba con pilas&lt;/h2&gt;
&lt;p&gt;Para probar la grilla podemos guardar la imagen cómo un
archivo &lt;code&gt;png&lt;/code&gt; y hacer una prueba usando pilas-engine_:&lt;/p&gt;
&lt;p&gt;Vamos a suponer que nuestro archivo se llama &lt;code&gt;animacion.png&lt;/code&gt;, el
código que nos nos permite ver la animación sería:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import pilas
pilas.iniciar()

grilla = pilas.imagenes.cargar_grilla(&#39;animacion.png&#39;, 3)

animacion = pilas.actores.Animacion(grilla, ciclica=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esta es una imagen de la sesión interactiva de pilas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/prueba.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Amigarse con el manejo de grillas en un videojuego es muy
valioso, hay un montón de trabajo fino que necesitas
hacer, incluso si solamente te dedicas a la programación.&lt;/p&gt;
&lt;p&gt;Ojalá te animes a tomarle la mano a &lt;a href=&#34;http://www.gimp.org/&#34;&gt;gimp&lt;/a&gt;, es un gran
programa y se aprende rápido.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creando intérpretes interactivos con python</title>
      <link>https://www.examplelab.com.ar/posts/2010-07-22-creando-int%C3%A9rpretes-interactivos-con-python/</link>
      <pubDate>Thu, 22 Jul 2010 15:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2010-07-22-creando-int%C3%A9rpretes-interactivos-con-python/</guid>
      <description>&lt;p&gt;Python, al ser un lenguaje dinámico, facilita mucho la creación de intérpretes.&lt;/p&gt;
&lt;p&gt;En este artículo veremos algunas herramientas para que podamos crear nuestro propio intérprete de comandos.
Algo básico con readline&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Readline&lt;/code&gt; es una biblioteca muy popular en GNU/Linux, se puede integrar a casi cualquier programa y permite crear auto-completados de comandos, historiales y búsquedas.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el interprete de comandos Bash utiliza &lt;code&gt;readline&lt;/code&gt; y por lo tanto se puede auto-completar comandos con TAB, recorrer el historial pulsado ARRIBA en el teclado y mas&amp;hellip;&lt;/p&gt;
&lt;p&gt;Para crear un programa interactivo de python usando &lt;code&gt;readline&lt;/code&gt; se puede usar el módulo &lt;code&gt;readline&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import readline

nombres = [&#39;pepe&#39;, &#39;pedro&#39;]

def completer(text, state):
    options = [x for x in nombres if x.startswith(text)]

    try:
        return options[state]
    except IndexError:
        return None

readline.set_completer(completer)
readline.parse_and_bind(&amp;quot;tab: complete&amp;quot;)

while 1:
    print &amp;quot;&amp;quot;
    nombre = raw_input(&amp;quot;Escriba un nombre: &amp;quot;)
    print &amp;quot;Ha ingresado el nombre:&amp;quot;, nombre

    if nombre in nombres:
        print &amp;quot;\t(ya existia este nombre en la lista de autocompletado).&amp;quot;
    else:
        nombres.append(nombre)
        print &amp;quot;\t(agregandolo a la lista de autocompletado).&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;autocompletado-inteligente-con-rlcompleter&#34;&gt;Autocompletado inteligente con rlcompleter&lt;/h2&gt;
&lt;p&gt;Ahora bien, con lo que hemos visto ya podemos crear auto-completado de palabras personalizados. Pero si lo que buscamos es auto-completar código python, necesitarías inspeccionar objetos, módulos o bibliotecas.&lt;/p&gt;
&lt;p&gt;Un módulo conveniente para hacer esta tarea es &lt;code&gt;rlcompleter&lt;/code&gt;, que se encarga de hacer todo este trabajo de sugerencias por nosotros.&lt;/p&gt;
&lt;p&gt;Esto es interesante para hacer interpretes python personalizados, por ejemplo el siguiente intérprete se puede usar para hacer pruebas sobre dos conjuntos:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import rlcompleter
import readline
readline.parse_and_bind(&amp;quot;tab: complete&amp;quot;)

grupo_a = set([1, 2, 3])
grupo_b = set([3, 4, 5])

cmd = None

while cmd not in [&#39;quit&#39;, &#39;exit&#39;]:
    cmd = raw_input(&#39;&amp;gt;&amp;gt; &#39;)
    exec(cmd)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Inicie el script, escriba &lt;code&gt;grup&lt;/code&gt; y luego TAB, en pantalla se tienen que mostrar las referencias que comienzan con &lt;code&gt;grup&lt;/code&gt;. Luego, si escribe grupo_a. y luego TAB puede ver los atributos del objeto señalado por la referencia&lt;/p&gt;
&lt;p&gt;Internamente, &lt;code&gt;rlcompleter&lt;/code&gt; hace todo el trabajo de instronspección por nosotros.&lt;/p&gt;
&lt;h2 id=&#34;atajos-de-teclado&#34;&gt;Atajos de teclado&lt;/h2&gt;
&lt;p&gt;Por último, ten en cuenta que &lt;code&gt;readline&lt;/code&gt; viene con muchos atajos de teclado.&lt;/p&gt;
&lt;p&gt;Tener en mente esto te permite usar mas eficientemente el módulo readline y cualquier aplicación que utilice la biblioteca, por ejemplo bash o ipython.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Atajo&lt;/th&gt;
&lt;th&gt;Acción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CTRL+f&lt;/td&gt;
&lt;td&gt;Mover el cursor un caracter a la derecha.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CTRL+b&lt;/td&gt;
&lt;td&gt;Mover el cursor un caracter a la izquierda.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CTRL+a&lt;/td&gt;
&lt;td&gt;Ir al principio de la linea.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CTRL+e&lt;/td&gt;
&lt;td&gt;Ir al final de la linea.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CTRL+w&lt;/td&gt;
&lt;td&gt;Borrar la última palabra que se escribió.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;↑, ↓&lt;/td&gt;
&lt;td&gt;Navegar por el historial de textos ingresados.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CTRL+r&lt;/td&gt;
&lt;td&gt;Buscar en el historial de textos (hacia atrás).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CTRL-l&lt;/td&gt;
&lt;td&gt;Limpiar la pantalla (sin borrar el texto actual).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TAB&lt;/td&gt;
&lt;td&gt;Autocompletar&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Cocos y pyglet en modo interactivo</title>
      <link>https://www.examplelab.com.ar/posts/2010-06-30-cocos-y-pyglet-en-modo-interactivo/</link>
      <pubDate>Wed, 30 Jun 2010 15:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/posts/2010-06-30-cocos-y-pyglet-en-modo-interactivo/</guid>
      <description>&lt;p&gt;Python tiene una herramienta super interesante para los nuevos programadores: una consola interactiva donde se puede editar, corregir y ejecutar código de manera super sencilla.&lt;/p&gt;
&lt;p&gt;Esto resulta de mucha utilidad cuando quieres dar clases sobre programación o simplemente dar una demostración sobre alguna biblioteca.&lt;/p&gt;
&lt;h2 id=&#34;introducción&#34;&gt;Introducción&lt;/h2&gt;
&lt;p&gt;Lamentablemente la consola de python no se puede usar en cualquier escenario, por ejemplo si quieres dar una demostración de la biblioteca &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt; desde la consola interactiva se te pueden presentar algunos problemas.&lt;/p&gt;
&lt;p&gt;Mediante este artículo intentaré encontrarle una solución a este problema, y en el camino veremos
Una aclaración inicial&lt;/p&gt;
&lt;p&gt;Por cierto, &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt; viene con una consola interactiva que se activa con las teclas &lt;code&gt;&amp;lt;CTRL+I&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Esa consola se ve dentro de la misma ventana de la aplicación y te permite hacer casi todo lo que veremos aquí.&lt;/p&gt;
&lt;p&gt;La diferencia entre esa consola, y la que vamos a tratar de implementar aquí es la siguiente: en este artículo busco intergrar la consola de python tradicional, donde se puede copiar, pegar y autocompletar código.&lt;/p&gt;
&lt;h2 id=&#34;un-prototipo-de-ejemplo-para-descargar&#34;&gt;Un prototipo de ejemplo para descargar&lt;/h2&gt;
&lt;p&gt;La solución que veremos en este artículo me ha servido para realizar un prototipo de ejemplo.&lt;/p&gt;
&lt;p&gt;Si quieres ir viendo el programa en funcionamiento lo puedes descargar de la siguiente dirección:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://examplelab.googlecode.com/hg/interactive_cocos/interactive_cocos.py&#34;&gt;http://examplelab.googlecode.com/hg/interactive_cocos/interactive_cocos.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;donde la imagen que utilizo para representar el objeto animado principal está aquí:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/cara.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cómo-se-utiliza-el-prototipo-de-consola&#34;&gt;¿Cómo se utiliza el prototipo de consola?&lt;/h2&gt;
&lt;p&gt;Primero tienes que descargar el script de la aplicación y ejecutarlo con el siguiente comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python interactive_cocos2d.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luego, se abrirá una pantalla con un sprite que podrás manipular:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/screen_cara.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Por ejemplo, dentro de la consola python tiene dos referencias iniciales: cocos y sprite. Hagamos algo con ellas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;sprite&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rotate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;obteniendo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/rotate.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Esto es útil para mostrar que el objeto en cuestión tiene atributos, y que se pueden manipular de manera sencilla.&lt;/p&gt;
&lt;p&gt;También puedes ejecutar sentencias como &lt;code&gt;help(cocos)&lt;/code&gt; o similares.&lt;/p&gt;
&lt;p&gt;Ahora bien, con este escenario resulta mas interesante hablar sobre una de las características mas lindas que tiene &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt;, el submódulo actions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;media_vuelta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cocos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;actions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RotateBy(&lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
giro_completo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; media_vuelta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;

sprite&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;do(giro_completo)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eso mostrará una animación de rotación completa en 4 segundos. Y como ninguna acción detiene nuesta consola de python, podemos incluso seguir escribiendo mienstras se ejecuta la acción.&lt;/p&gt;
&lt;h2 id=&#34;cómo-funciona&#34;&gt;¿Cómo funciona?&lt;/h2&gt;
&lt;p&gt;A continuación veremos paso a paso la implementación del prototipo que se utiliza mas arriba.&lt;/p&gt;
&lt;h2 id=&#34;objetivo&#34;&gt;Objetivo&lt;/h2&gt;
&lt;p&gt;Quisieramos ejecutar nuestro intérprete de python tradicional en primer plano, y que la ventana de la biblioteca &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt; permanezca en segundo plano.&lt;/p&gt;
&lt;p&gt;Esto nos facilitaría jugar con la biblioteca, conocer sus funciones y manipular sprites de manera interactiva.
Un primer paso: ¿usamos hilos?&lt;/p&gt;
&lt;p&gt;Como queremos poner en funcionamiento una ventana de &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt; y al mismo tiempo tener un intérprete, podríamos usar dos hilos: Uno para el interprete que recibe los comandos del usuario y otro para la biblioteca &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;el-problema-hilos-y-opengl&#34;&gt;El problema: Hilos y OpenGL&lt;/h2&gt;
&lt;p&gt;Lo malo de este enfoque es que opengl (la biblioteca base debajo de &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt;) define un contexto y espera que todas las llamadas de opengl se hagan desde el mismo hilo que ha creado el contexto. Y esto es un problema, porque en realidad para nuestro escenario lo ideal sería manipular opengl desde un hilo (la consola) y ver los cambios en otro hilo (el de cocos).&lt;/p&gt;
&lt;p&gt;Entonces, al parecer tenemos como restricción que todo lo que actúa directamente sobre opengl tiene que ejecutarse dentro del mismo hilo que utiliza cocos.&lt;/p&gt;
&lt;h2 id=&#34;el-modelo-propuesto&#34;&gt;El modelo propuesto&lt;/h2&gt;
&lt;p&gt;Podemos tener dos hilos en ejecución, y una cola de mensajes que permite derivar todo el código a ejecutar dentro del hilo de cocos.&lt;/p&gt;
&lt;p&gt;Este es un gráfico de la solución propuesta:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/2013/Oct/esquema.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;creando-un-prototipo&#34;&gt;Creando un prototipo&lt;/h2&gt;
&lt;p&gt;El programa principal solamente tiene que poner en funcionamiento a los tres componentes juntos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Cola de mensajes que se utiliza para llevar comandos al hilo.&lt;/span&gt;
queue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Queue()

&lt;span style=&#34;color:#75715e&#34;&gt;# Hilo que ejecuta la funcionalidad de cocos.&lt;/span&gt;
app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Application(queue)
app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()

&lt;span style=&#34;color:#75715e&#34;&gt;# Interprete de comandos que envia todas las lineas que se escriben&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# directamente a la cola de mensajes que consume el hilo.&lt;/span&gt;
cmd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CommandLine(app, queue)
cmd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cmdloop()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Donde queue es la cola que se utiliza para enviar o delegar todas las cadena de texto que ingresa el usuario.&lt;/p&gt;
&lt;h2 id=&#34;el-intérprete&#34;&gt;El intérprete&lt;/h2&gt;
&lt;p&gt;Para crear el intérprete que acepta los comandos del usuario he utilizado la clase Cmd del módulo cmd:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CommandLine&lt;/span&gt;(cmd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Cmd):

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, app, queue):
        cmd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Cmd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(self, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TAB&amp;#39;&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;queue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; queue
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; app
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prompt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt;&amp;gt;&amp;gt; &amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;default&lt;/span&gt;(self, line):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cualquier sentencia la envia a la cola de comandos que consume cocos.&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;put(line)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;do_exit&lt;/span&gt;(self, line):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kill()
        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La clase Cmd permite crear un intérprete de comandos parecido al original de python, incluido el autocompletado con la tecla TAB.&lt;/p&gt;
&lt;h2 id=&#34;hilo-de-cocos&#34;&gt;Hilo de cocos&lt;/h2&gt;
&lt;p&gt;El hilo que muestra la ventana de &lt;a href=&#34;http://cocos2d.org/&#34;&gt;cocos2d&lt;/a&gt; solo tiene que mantener una ventana de la biblioteca visible y actualizar con frecuencia el contexto que ejecuta comandos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Application&lt;/span&gt;(threading&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Thread):

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, queue):
        threading&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(self)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;killed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;queue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; queue

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(self):
        cocos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;director&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;director&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;init(resizable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False, width&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, height&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scene &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cocos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scene&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Scene(cocos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;layer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ColorLayer(&lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;))
        sprite &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cocos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sprite&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Sprite(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cara.png&amp;#39;&lt;/span&gt;)
        sprite&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scale &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        sprite&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;
        sprite&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scene&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(sprite)

        &lt;span style=&#34;color:#75715e&#34;&gt;# Genera el entorno de la session, y le pasa datos que puede&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# manipular.&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; environment(queue, sprite)
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environment&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;next()

        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scene&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;schedule_interval(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environment_update, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;)
        cocos&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;director&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;director&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scene)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;environment_update&lt;/span&gt;(self, dt):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mantiene en funcionamiento.&amp;#34;&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environment&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;next()

    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;kill&lt;/span&gt;(self):
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;killed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
        pyglet&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;un-entorno-donde-viven-las-referencias&#34;&gt;Un entorno donde viven las referencias&lt;/h2&gt;
&lt;p&gt;La parte mas importante del sistema es la que se encarga de ejecutar el código que escribimos en consola.&lt;/p&gt;
&lt;p&gt;Para ello he creado un generador, que conoce la cola de donde lee los mensajes que escribimos y los pone en funcionamiento.&lt;/p&gt;
&lt;p&gt;Y dado que se trata de un generador, todo lo que se ejecuta dentro de él se mantiene en la memoria local, representando de alguna manera el contexto o espacio de nombres que buscamos conservar.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;environment&lt;/span&gt;(queue, sprite):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Representa la session y las variables locales de la instancia interactiva.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Este entorno funciona como un generador, con la intension de guardar
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    el estado de todas las variables locales y acceder a los comandos desde
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    la cola.&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; True:

        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            last &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_nowait()

            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; last:
                &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;exec&lt;/span&gt;(last)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error al ejecutar&amp;#34;&lt;/span&gt;, last

        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; Queue&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Empty:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

        &lt;span style=&#34;color:#66d9ef&#34;&gt;yield&lt;/span&gt; None
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nota: Un enfoque similar usan las aplicaciones REPL, donde incluso existe la funcionalidad de reiniciar el contexto cuando hemos hecho algo mal.&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Python ofrece una gran flexibilidad, y si bien creo que la solución al problema planteado se puede mejorar, actualmente puede ser de utilidad para otras personas.&lt;/p&gt;
&lt;p&gt;Personalmente, lo encuentro útil para explicar algunos conceptos de programación mediante un enfoque práctico. Ideas como abstracción, encapsulación o polimorfismo quedan mas claras si se las puede reflejar con un ejemplo visible.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/87/</guid>
      <description>&lt;h1 id=&#34;write-code-like-you-just-learned-how-to-program&#34;&gt;Write Code Like You Just Learned How to Program&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído desde:
&lt;a href=&#34;https://prog21.dadgum.com/87.html&#34;&gt;https://prog21.dadgum.com/87.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m reading &lt;a href=&#34;http://www.amazon.com/Do-More-Faster-TechStars-Accelerate/dp/0470929839&#34;&gt;Do More
Faster&lt;/a&gt;,
which is more than a bit of an advertisement for the TechStars start-up
incubator, but it&amp;rsquo;s a good read nonetheless. What struck me is that
several of the people who went through the program, successfully enough
to at least get initial funding, didn&amp;rsquo;t know how to program. They
learned it so they could implement their start-up ideas.&lt;/p&gt;
&lt;p&gt;Think about that. It&amp;rsquo;s like having a song idea and learning to play an
instrument so you can make it real. I suspect that the learning process
in this case would horrify most professional musicians, but that horror
doesn&amp;rsquo;t necessarily mean that it&amp;rsquo;s a bad idea, or that the end result
won&amp;rsquo;t be successful. After all, look at how many bands find success
without the benefit of a degree in music theory.&lt;/p&gt;
&lt;p&gt;I already knew how to program when I took an &amp;ldquo;Intro to BASIC&amp;rdquo; class in
high school. One project was to make a visual demo using the
sixteen-color, low-res mode of the Apple II. I quickly put together
something algorithmic, looping across the screen coordinates and drawing
lines and changing colors. It took me about half an hour to write and
tweak, and I was done.&lt;/p&gt;
&lt;p&gt;I seriously underestimated what people would create.&lt;/p&gt;
&lt;p&gt;One guy presented this amazing demo full of animation and shaded images.
I&amp;rsquo;m talking crazy stuff, like a skull that dripped blood from its eye
into a rising pool at the bottom of the screen. And that was just one
segment of his project. I was stunned. Clearly I wasn&amp;rsquo;t the hotshot
programmer I thought was.&lt;/p&gt;
&lt;p&gt;I eventually saw the BASIC listing for his program. It was hundreds and
hundreds of lines of statements to change colors and draw points and
lines. There were no loops or variables. To animate the blood he drew a
red pixel, waited, then drew another red pixel below it. All the
coordinates were hard-coded. How did he keep track of where to draw
stuff? He had a piece of graph paper that he updated as he went.&lt;/p&gt;
&lt;p&gt;My prior experience hurt me in this case. I was thinking about the
&lt;em&gt;program&lt;/em&gt;, and how I could write something that was concise and clean.
The guy who wrote the skull demo wasn&amp;rsquo;t worried about any of that. He
didn&amp;rsquo;t care about what the program looked like or how maintainable it
was. He just wanted a way to present his vision.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a lesson there that&amp;rsquo;s easy to forget&amp;ndash;or ignore. It&amp;rsquo;s extremely
difficult to be simultaneously concerned with the end-user experience of
whatever it is that you&amp;rsquo;re building and the architecture of the program
that delivers that experience. Maybe impossible. I think the only way to
pull it off is to simply not care about the latter. Write comically
straightforward code, as if you just learned to program, and go out of
your way avoid wearing any kind of software engineering hat&amp;ndash;unless what
you really want to be is a software engineer, and not the designer of an
experience.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/advice-from-an-old-programmer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/advice-from-an-old-programmer/</guid>
      <description>&lt;h1 id=&#34;advice-from-an-old-programmer&#34;&gt;Advice from an Old Programmer&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído del libro:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learnpythonthehardway.org/python3/&#34;&gt;Learn Python the hard way de Zed Shaw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You’ve finished this book and have decided to continue with programming. Maybe
it will be a career for you, or maybe it will be a hobby. You’ll need some
advice to make sure you continue on the right path and get the most enjoyment
out of your newly chosen activity.&lt;/p&gt;
&lt;p&gt;I’ve been programming for a very long time. So long that it’s incredibly boring
to me. At the time that I wrote this book, I knew about 20 programming
languages and could learn new ones in about a day to a week depending on how
weird they were. Eventually, though, this just became boring and couldn’t hold
my interest anymore. This doesn’t mean I think programming is boring, or that
you will think it’s boring, only that I find it uninteresting at this point in
my journey.&lt;/p&gt;
&lt;p&gt;What I discovered after this journey of learning is that it’s not the languages
that matter but what you do with them. Actually, I always knew that, but I’d
get distracted by the languages and forget it periodically.  Now I never forget
it, and neither should you.&lt;/p&gt;
&lt;p&gt;Which programming language you learn and use doesn’t matter. Do not get sucked
into the religion surrounding programming languages as that will only blind you
to their true purpose of being your tool for doing interesting things.&lt;/p&gt;
&lt;p&gt;Programming as an intellectual activity is the only art form that allows you to
create interactive art. You can create projects that other people can play
with, and you can talk to them indirectly. No other art form is quite this
interactive. Movies flow to the audience in one direction. Paintings do not
move. Code goes both ways.&lt;/p&gt;
&lt;p&gt;Programming as a profession is only moderately interesting. It can be a good
job, but you could make about the same money and be happier running a fast food
joint. You’re much better off using code as your secret weapon in another
profession.&lt;/p&gt;
&lt;p&gt;People who can code in the world of technology companies are a dime a dozen and
get no respect.  People who can code in biology, medicine, government,
sociology, physics, history, and mathematics are respected and can do
amazing things to advance those disciplines.&lt;/p&gt;
&lt;p&gt;Of course, all of this advice is pointless. If you liked learning to write
software with this book, you should try to use it to improve your life any way
you can. Go out and explore this weird, wonderful, new intellectual pursuit
that barely anyone in the last 50 years has been able to explore. Might as well
enjoy it while you can.&lt;/p&gt;
&lt;p&gt;Finally, I’ll say that learning to create software changes you and makes you
different. Not better or worse, just different. You may find that people treat
you harshly because you can create software, maybe using words like “nerd.”
Maybe you’ll find that because you can dissect their logic they hate arguing
with you. You may even find that simply knowing how a computer works makes you
annoying and weird to them.&lt;/p&gt;
&lt;p&gt;To this I have just one piece of advice: they can go to hell. The world needs
more weird people who know how things work and who love to figure it all out.
When they treat you like this, just remember that this is your journey, not
theirs. Being different is not a crime, and people who tell you it is are just
jealous that you’ve picked up a skill they never in their wildest dreams could
acquire.  You can code.&lt;/p&gt;
&lt;p&gt;They cannot. That is pretty damn cool.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/all-time-learning-to-program/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/all-time-learning-to-program/</guid>
      <description>&lt;h1 id=&#34;this-is-why-you-spent-all-that-time-learning-to-program&#34;&gt;This is Why You Spent All that Time Learning to Program&lt;/h1&gt;
&lt;p&gt;There&amp;rsquo;s a standard format for local TV news broadcasts that&amp;rsquo;s easy to
criticize. (By &amp;ldquo;local,&amp;rdquo; I mean any American town large enough to have
its own television station.)&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s an initial shock-value teaser to keep you watching. News stories
are read in a dramatic, sensationalist fashion by attractive people who
fill most of the screen. There&amp;rsquo;s an inset image over the shoulder of the
reader. Periodically there&amp;rsquo;s a cutaway to a reporter in the field; it&amp;rsquo;s
often followed-up with side-by-side images of the newscaster and
reporter while the former asks a few token questions to latter. There&amp;rsquo;s
pretend banter between newscasters after a feel-good story.&lt;/p&gt;
&lt;p&gt;You get the idea. Now what if I wanted to change this entrenched
structure?&lt;/p&gt;
&lt;p&gt;I could get a degree in journalism and try to get a job at the local TV
station. I&amp;rsquo;d be the new guy with no experience, so it&amp;rsquo;s not likely I
could just step-in and make sweeping reforms. All the other people there
have been doing this for years or decades, and they&amp;rsquo;ve got a established
routines. I can&amp;rsquo;t make dozens of people change their schedules and
habits because I think I&amp;rsquo;m so smart. To be perfectly fair, a drastic
reworking of the news would result in people who had no issues with old
presentation getting annoyed and switching to one of the other channels
that does things the old way.&lt;/p&gt;
&lt;p&gt;When I sit down to work on a personal project at home, it&amp;rsquo;s much
simpler.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t have to follow the familiar standards of whatever kind of app
I&amp;rsquo;m building. I don&amp;rsquo;t have to use an existing application as a model. I
can disregard history. I can develop solutions without people saying
&amp;ldquo;That&amp;rsquo;s not how it&amp;rsquo;s supposed to work!&amp;rdquo;&lt;/p&gt;
&lt;p&gt;That freedom is &lt;em&gt;huge&lt;/em&gt;. There are so many issues in the world that
people complain about, and there&amp;rsquo;s little chance of fixing the system in
a significant way. Even something as simple as reworking the local news
is out of reach. But if you&amp;rsquo;re writing an iOS game, an HTML 5 web app, a
utility that automates work so you can focus on the creative fun stuff,
then you don&amp;rsquo;t have to fall back on the existing, comfortable solutions
that developers before you chose simply because they too were trapped by
the patterns of the solutions that came before them.&lt;/p&gt;
&lt;p&gt;You can fix things. You can make new and amazing things. Don&amp;rsquo;t take that
ability lightly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/disparar-y-avanzar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/disparar-y-avanzar/</guid>
      <description>&lt;h1 id=&#34;disparar-y-avanzar&#34;&gt;Disparar y avanzar&lt;/h1&gt;
&lt;h3 id=&#34;from-the-joel-on-software-translation-project&#34;&gt;From The Joel on Software Translation Project&lt;/h3&gt;
&lt;p&gt;Artículo original:
&lt;a href=&#34;https://web.archive.org/web/20160629045135/http://www.joelonsoftware.com/articles/fog0000000339.html&#34; class=&#34;external text&#34;&gt;Fire And Motion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hay veces en las que no me sale nada.&lt;/p&gt;
&lt;p&gt;Fijo. Llego a la oficina, doy un par de vueltas, veo si hay correo cada
diez segundos, navego por la red y tal vez haga algunas tareas tontas
como pagar la factura de la American Express. Pero lo de volver a
escribir código con fluidez no ocurre.&lt;/p&gt;
&lt;p&gt;Estas lagunas de improductividad por lo general duran uno o dos días,
pero ha habido veces en mi carrera como desarrollador que me ha pasado
semanas enteras sin ser capaz de hacer nada. Como se suele decir, no
estás inspirado. No estás en lo que estás. No estás en ningún sitio.&lt;/p&gt;
&lt;p&gt;Todos tenemos cambios de estado de ánimo. Para algunos, son suaves, pero
en otras personas pueden ser más pronunciados, incluso patológicos. Y
los periodos improductivos parecen estar relacionados con los estados de
ánimo más abatidos.&lt;/p&gt;
&lt;p&gt;Esto me recuerda a los investigadores que afirman que, básicamente, la
gente no puede controlar lo que come, de manera que cualquier intento de
hacer una dieta está condenado a ser efímero y siempre terminan
rebotando hasta volver a su peso natural. Tal vez no puedo, como
desarrollador de software, controlar cuándo soy productivo: simplemente
he de asumir las épocas espesas con las épocas de rápido avance y
esperar que, en término medio, pueda escribir suficientes líneas de
código como para hacer que quieran contar con mis servicios.&lt;/p&gt;
&lt;p&gt;Lo que me inquieta es que desde mi primer trabajo me he dado cuenta de
que, como desarrollador, en término medio sólo puedo escribir código
productivamente durante dos o tres horas al día. Cuando tuve una beca de
verano en Microsoft, un compañero becario me dijo que en realidad sólo
iba a trabajar de doce a cinco. Cinco horas (menos el almuerzo) y aún
así su equipo lo veneraba porque aún se las apañaba para hacer mucho más
que la media de los demás. Y yo creo que así ha de ser. Me siento un
poco culpable cuando veo cómo los demás trabajan tanto y yo sólo tengo
dos o tres horas de calidad al día y aún así siempre he sido uno de los
miembros más productivos del equipo. Quizá por eso, cuando Peopleware y
XP (Extreme Programming) insisten en eliminar las horas extras y las
jornadas de 40 horas semanales lo hacen con la completa seguridad de que
esto no implica una reducción en el rendimiento del equipo.&lt;/p&gt;
&lt;p&gt;Pero los días que me preocupan no son en los que &amp;ldquo;sólo&amp;rdquo; trabajo dos o
tres horas. Son aquellos días en los que no puedo rendir nada.&lt;/p&gt;
&lt;p&gt;Le he dado muchas vueltas a esto. He tratado de recordar cuál ha sido la
vez en mi carrera que más trabajo he sacado adelante. Probablemente fue
cuando Microsoft me cambió a un nuevo y bonito despacho enmoquetado con
grandes ventanas que dominaban un lindo patio empedrado, lleno de
cerezos en flor. Todo latía. Durante meses trabajé sin parar,
despachando la especificación detallada de Excel Basic: una montaña de
papeles que abarcaban un gigantesco modelo de objetos y todo un entorno
de programación. Literalmente: no podía parar. Cuando tuve que ir a
Boston al MacWorld me llevé un portátil y documenté las clases de
Windows sentado en una agradable terraza en el HBS [Harvard Business
School].&lt;/p&gt;
&lt;p&gt;Una vez que te pones manos a la obra no es tan difícil seguir a buen
ritmo. Muchos de mis días transcurren de esta manera: (1) ir al trabajo
(2) leer el correo, navegar por la red, etc. (3) decidir que voy a ir a
almorzar antes de ponerme a trabajar (4) volver de la comida (5) leer el
correo, navegar por la red, etc. (6) decidir por fin que debería empezar
(7) leer el correo, navegar por la red, etc. (8) decidir otra vez que
debería ponerme a trabajar (9) lanzar el maldito editor y (10) escribir
código casi sin parar hasta que no me doy ni cuenta de que ya son las 7
y media de la tarde.&lt;/p&gt;
&lt;p&gt;En alguna parte entre los pasos 8 y 9 parece haber un bug, porque no
siempre puedo dar ese salto.&lt;/p&gt;
&lt;p&gt;Para mí, ponerme manos a la obra es lo único difícil: un objeto
en reposo tenderá a permanecer en reposo. Hay en mi cerebro algo que
pesa muchísimo y es difícil hacer que alcance la velocidad de crucero;
pero una vez que la alcanza no cuesta ningún trabajo hacer que siga.
Como una bicicleta preparada para atravesar un país entero: cuando
comienzas a pedalear en una bici con todo ese material es difícil de
creer cuánto cuesta arrancar, pero luego es tan sencillo como ir con una
bicicleta sin carga alguna.&lt;/p&gt;
&lt;p&gt;Quizá sea esta la clave de la productividad: ponerse en marcha. Tal vez
cuando la programación por parejas funciona es porque cuando organizas
una sesión de programación en pareja con tu compañero, ambos os estáis
forzando a poneros en marcha.&lt;/p&gt;
&lt;p&gt;Cuando fui paracaidista en el ejército israelí un general nos dió un
pequeño discurso acerca de la estrategia. En las batallas de infantería,
según nos contó, sólo hay una única estrategia: Disparar y Avanzar. Uno
se mueve hacia el enemigo mientras a la vez dispara sus armas. El fuego
obliga al enemigo a agachar la cabeza de modo que no puede dispararte
(eso es lo que quieren decir los soldados cuando gritan &amp;ldquo;¡cubridme!&amp;rdquo;,
que significa: &amp;ldquo;Dispárale al enemigo de forma que se tenga que esconder
y no pueda dispararme mientras cruzo la calle&amp;rdquo;. Y funciona). El avance
te permite capturar territorio y acercarte a tu enemigo, donde es más
probable que tus disparos den en el blanco. Si no avanzas, el enemigo
decide lo que ocurre, lo cual no es bueno. Si no disparas el enemigo te
disparará, teniendo un objetivo fácil.&lt;/p&gt;
&lt;p&gt;Recordé esto durante mucho tiempo. Me di cuenta de que casi todas las
estrategias militares, desde los combates aéreos a las maniobras navales
a gran escala, están basadas en la idea de Disparar y Avanzar. Tardé
otros quince años en darme cuenta de que el principio de Disparar y
Avanzar es la forma en que se hacen las cosas en esta vida. Tienes que
avanzar un poquito cada día. No importa si tu código está mal escrito y
tiene errores y nadie lo quiere. Si avanzas, escribiendo código y
arreglando los errores continuamente, el tiempo está de tu parte. Presta
atención cuando la competencia te dispara. ¿No querrán mantenerte
ocupado, reaccionando a sus boleas, de forma que no puedas avanzar?
Recordemos la historia de las estrategias de acceso a bases de datos que
han surgido de Microsoft. ODBC, RDO, DAO, ADO, OLEDB, y ahora ADO.NET
¡Todas novísimas! ¿Acaso todas son imperativos tecnológicos? ¿O son el
resultado de un grupo de diseño incompetente que necesita reinventar el
acceso a base de datos cada año? (Es probable que, en realidad, sea esto
último) Pero el resultado final es que únicamente se trata de fuego de
cobertura. La competencia no tiene otra opción que perder todo su tiempo
portando y manteniéndose al día, tiempo que no pueden dedicar a
desarrollar nuevas prestaciones. Examinemos de cerca el panorama del
software. Las compañías que funcionan son las que dependen menos de
compañías grandes y no tienen que perder todos sus ciclos de desarrollo
poniéndose al día, reimplementando y arreglando errores que sólo se
manifiestan bajo Windows XP. Las compañías que se tambalean son las que
pasan demasiado tiempo leyendo hojas de té para vaticinar el próximo
movimiento de Microsoft. La gente se preocupa por .NET y decide
re-escribir todo su código porque creen que tienen que hacerlo.
Microsoft te dispara, y sólo es fuego de cobertura de forma que ellos
puedan avanzar y tú no, porque así es como se juega a este juego,
muchachos. ¿Vas a añadir soporte para Hailstorm? ¿SOAP? ¿RDF? Lo vas a
soportar porque tus clientes lo necesitan, o porque alguien te está
disparando y te sientes obligado a responder? Los equipos comerciales de
las grandes compañías, que conocen lo que es el fuego de cobertura, van
a sus clientes y les dicen: &amp;ldquo;Está bien, no tienes que comprarnos a
nosotros. Cómprale al mejor vendedor. Pero asegúrate de que compras un
producto que soporta (XML / SOAP / CDE /J2EE) porque si no estarás
atrapado en el software propietario&amp;rdquo; Luego, cuando las compañías
pequeñas intentan venderle algo a ese cliente, se encuentran con
gerentes obedientes que repiten como cotorras: &amp;ldquo;¿Tienes J2EE?&amp;rdquo; Y lo
único que hacen es perder todo el tiempo desarrollando con J2EE incluso
aunque eso no te de más ventas, y no les da ninguna oportunidad para
diferenciarse de los demás. Es una prestación de catálogo; la
implementas porque necesitas el recuadro que dice que lo tienes, pero
nadie la va a usar ni la necesita. Y es fuego de cobertura.&lt;/p&gt;
&lt;p&gt;Para las compañías pequeñas como la mía disparar y avanzar significa dos
cosas. Tienes que tener el tiempo de tu parte y tienes que avanzar cada
día. Tarde o temprano ganarás. Lo único que logré hacer ayer fue mejorar
un poquitín el esquema de colores de FogBUGZ. Eso está bien. Está
mejorando continuamente. Cada día nuestro software es mejor y mejor y
tenemos más y más clientes, eso es todo lo que nos importa. Hasta que
seamos una compañía tan grande como Oracle, no tenemos que pensar en
grandes estrategias. Únicamente hay que venir cada mañana y, de algún
modo, arrancar el editor.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/everything-is-fine-with-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/everything-is-fine-with-javascript/</guid>
      <description>&lt;h1 id=&#34;everything-is-fine-with-javascript&#34;&gt;Everything is fine with JavaScript&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído desde:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://macwright.com/2016/10/04/everything-is-fine-with-javascript.html&#34;&gt;https://macwright.com/2016/10/04/everything-is-fine-with-javascript.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/link-files/everything-is-fine-with-javascript-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;this is the only paper that’s willing to tell the truth: that
everything is just fine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There’s a sort of blog post you’ve probably read - a sarcastic stab at
JavaScript and &lt;code&gt;npm&lt;/code&gt; and frameworks. There are too many, it’ll say, and
it’s confusing, and how did we make such complicated things? It’ll grab
names from the ecosystem and present them as equal choices in a comic
attempt to construct decision paralysis. Everything moves too fast, and
there is too much of it.&lt;/p&gt;
&lt;p&gt;I think it’s a decent time to review some principles&lt;/p&gt;
&lt;h2 id=&#34;obsession-with-shiny-things-is-a-personal-problem-and-something-you-can-avoid&#34;&gt;Obsession with shiny things is a personal problem and something you can avoid&lt;/h2&gt;
&lt;p&gt;I occasionally hang out on guitar forums. They have a name for this
thing: &lt;strong&gt;Gear Acquisition Syndrome&lt;/strong&gt;, or GAS. It is what it sounds like&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when you’re more concerned with getting an OCD Fuzz pedal to round out
your rig than you are with learning how to play the instrument.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GAS with guitars works the same way as with programming: you start
asking whether you’re using the &lt;em&gt;best possible&lt;/em&gt; distortion pedal, start
your research, and a few weeks later you own $2,000 worth of distortion
pedals.&lt;/p&gt;
&lt;p&gt;Coding is a craft, for which you need tools. Some of them are shiny,
some are new, some are old. They all basically work. Change your tools
if they aren’t working for you, and otherwise don’t. Heck, for many
startups and almost all early-stage startups, &lt;a href=&#34;https://www.codingvc.com/why-startup-technical-diligence-is-a-waste-of-time/&#34;&gt;the choice of technology
stack really doesn’t
matter&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;you-have-to-use-different-tools-for-different-problems&#34;&gt;You have to use different tools for different problems&lt;/h2&gt;
&lt;p&gt;Creating a data visualization? Probably use d3. An application? React
and Redux. A library? You might not need any framework.&lt;/p&gt;
&lt;p&gt;This is pinned on the JavaScript ecosystem, somehow. If you look at the
context, though, it’s what you have to do when you create literally
anything. If you’re a Python developer, do you use Twisted or asyncio?
If you’re an architect, do you use wood or brick? Do you use pen or
pencil?&lt;/p&gt;
&lt;p&gt;Sometimes materials are best-in-class for what they do: now that there’s
&lt;a href=&#34;https://lodash.com/&#34;&gt;lodash&lt;/a&gt;, there are relatively few reasons to use
&lt;a href=&#34;https://underscorejs.org/&#34;&gt;underscore&lt;/a&gt;. Other times they’re still
duking it out to see what’s best - browserify or webpack, for example,
fix the same problem. But a lot of the time they’re clearly for
different purposes: I, for instance, use React when writing a large
application like Mapbox Studio, but don’t use a framework writing
libraries that need to be small.&lt;/p&gt;
&lt;p&gt;As you learn and grow, you’ll acquire a go-to list of technology for
each task. It isn’t the same as an exhaustive list: at most you might
know 5 systems thoroughly. You mainly become capable by mastering these
systems, not by tinkering with every alternative.&lt;/p&gt;
&lt;h2 id=&#34;if-someone-is-holier-than-thou-about-technology-choices-theyre-wrong-and-you-should-ignore-them&#34;&gt;If someone is holier-than-thou about technology choices, they’re wrong and you should ignore them&lt;/h2&gt;
&lt;p&gt;If you read the snark, it sounds like you’re required to switch
frameworks as soon as a new one accrues more stars on GitHub. Or that
you &lt;em&gt;must&lt;/em&gt; use functional programming. This may be the case in San
Francisco - I don’t live there - but in the rest of the world, that’s
nonsense. There are successful companies using every stack, from PHP to
Haskell.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;So enjoy the rants, if you do, but when you read &lt;a href=&#34;https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.ima7p0eob&#34;&gt;How it feels to learn
JavaScript in
2016&lt;/a&gt;,
ask yourself: is the problem with the technology, or is it the unnamed
antagonist with that judgmental snark? Or is it that the conversation is
never driven by a problem that needs to be solved, but instead organized
as a grand tour of all possible tools?&lt;/p&gt;
&lt;p&gt;October 4, 2016 
&lt;a href=&#34;https://twitter.com/intent/follow?screen_name=tmcw&amp;amp;user_id=1458271&#34; title=&#34;Follow me on Twitter&#34;&gt;@tmcw&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/iam-boring-programmer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/iam-boring-programmer/</guid>
      <description>&lt;h1 id=&#34;im-a-boring-programmer-and-proud-of-it&#34;&gt;I’m a boring programmer (and proud of it)&lt;/h1&gt;
&lt;p&gt;I have a confession to make — I’m not a rock star programmer. Nor am I a
hacker. I don’t know ninjutsu. Nobody has ever called me a wizard.&lt;/p&gt;
&lt;p&gt;Still, I take pride in the fact that I’m a good, solid programmer. One
who works hard at his craft and really enjoys it, even without the fancy
labels.&lt;/p&gt;
&lt;p&gt;Yet every week I see a call for ninja programmers, who I assume slice
lines of code with incredible precision. I read about tech rock stars,
who I imagine write functions as beautiful as the “Stairway to Heaven”
solo. I hear people throw around the word hacker (and the associated
hack, hackfest, and hackathon) as if haphazardly chopping something into
little bits or prying your way into an unauthorized system is a good
thing.&lt;/p&gt;
&lt;p&gt;And lest we forget about those amazing wizards, who can turn nothing
into something with their…&lt;/p&gt;
&lt;p&gt;With such cool sounding names and implied mystical skills, it sure
sounds like these are the archetypes that all programmers should model
themselves after.&lt;/p&gt;
&lt;p&gt;But what if, like me, you don’t relate to these labels at all? If you
don’t share the sensibilities of a rock star-ninja-hacker-wizard, you
must be doing something wrong, right? Nope.&lt;/p&gt;
&lt;h4 id=&#34;real-role-models-the-boringones&#34;&gt;Real role models (the “boring” ones)&lt;/h4&gt;
&lt;p&gt;I’ll admit it — instead of ego-filled, high-risk, thrill-seeking
badasses who can conjure up magical solutions, I have much lower key
role models. I’m more akin to a librarian, scientist, artist, and
carpenter.&lt;/p&gt;
&lt;p&gt;Compared to a rock star-ninja-hacker-wizard, those labels do sound a
little boring. But you know what? There’s absolutely nothing wrong with
that.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because when it comes to programming and building great products, I
don’t want a rock star-ninja-hacker-wizard lifestyle. I don’t need the
spotlight or fame. I don’t want to stay up until 4 a.m. every night
and burn
out.
There are no magical spells to cure my code’s ills.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead, like a librarian I enjoy quiet and order. When code is well
organized, things are easy to find and less likely to break, avoiding a
bunch of noise and heartache.&lt;/p&gt;
&lt;p&gt;Like a scientist I enjoy analyzing problems, trying different angles to
solve them, and then sharing my findings. I want to understand how
things work, and I want others to benefit from that understanding.&lt;/p&gt;
&lt;p&gt;Like an artist I need to occasionally think outside the box, tap my
creativity, and be able to see in abstracts. I want to embrace
imperfection.&lt;/p&gt;
&lt;p&gt;And like a carpenter, I really enjoy building things. Sometimes that
means following a specific plan, and other times you just work with what
you’ve got.&lt;/p&gt;
&lt;p&gt;I bet there are a lot of you out there who’ve thought along the same
lines. You see these silly terms used so casually — they make no sense,
yet are often used to describe seemingly attractive job postings. Part
of you scoffs, wondering how the use of this lingo ever got started. But
a small part of you wonders why you can’t relate to being a rock
star-ninja-hacker-wizard.&lt;/p&gt;
&lt;p&gt;For those of you who feel that way, I say this — don’t listen to it.
Ignore it. If you see a job posting with those words, run away fast and
far. Relish the fact that you’re &lt;strong&gt;not&lt;/strong&gt; a rock
star-ninja-hacker-wizard. You’re probably already a great programmer
doing great work, just without all the unnecessary glitz and glamour.&lt;/p&gt;
&lt;p&gt;And whether you know it or not, everyone around you appreciates how much
of a quiet badass you really are.🤘&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/own-the-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/own-the-tools/</guid>
      <description>&lt;h1 id=&#34;own-the-tools&#34;&gt;Own the Tools&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído desde:
&lt;a href=&#34;https://www.raptitude.com/2020/12/own-the-tools&#34;&gt;https://www.raptitude.com/2020/12/own-the-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When I need to look up a word, most of the time I do it in a paper
dictionary.&lt;/p&gt;
&lt;p&gt;I’m pretty quick at flipping to the right place, and I try to get quicker each
time. However, it will never be as quick as typing the word into Google.&lt;/p&gt;
&lt;p&gt;My switch back to paper wasn’t motivated by cantankerousness. It wasn’t a
romantic thing or a hipster thing, or an “I love the smell of books” thing. I
just found that after years of relying on online dictionaries, a real one
offers a better experience in every way except the speed.&lt;/p&gt;
&lt;p&gt;The whole experience is cleaner and more purposeful. A paper dictionary
contains complete answers for almost any conceivable “What does this word mean”
problem — and nothing else. No matter which word has you puzzled, the real
dictionary has inside it a small patch of print that will perfectly solve your
issue. It exists only to deliver this solution, and has no ulterior motives.&lt;/p&gt;
&lt;p&gt;While using this tool, you will not accidentally start responding to political
hot takes, or adjusting your fantasy football lineup. The paper dictionary,
like a decent pen or an oven mitt, was designed to deliver only what you
need in the moment you access it – knowledge of what “obtuse” or
“dysphoria” mean — so that you can carry on with your work.&lt;/p&gt;
&lt;p&gt;Its services align with your needs because you paid for it and now own it. Thus
its role in your life remains clean and uncomplicated — the opposite of any
tool you access through a web browser. You paid for it in the simple,
transparent way we used to pay for everything: as singular purchases of
single-purpose tools that aren’t trying to take anything more from you.&lt;/p&gt;
&lt;p&gt;A Dictionary.com page is happy to provide a free definition, but it will also
suggest, with half its surface area, that you consider financing a Nissan
Murano this holiday season. It secretly hopes that when you open it you don’t
only learn what “veritable” means, as you intended, but that you also sign up
for a free trial of Adobe Creative Cloud. Its aims do not align with your own.
Its loyalty, if it has any, is not to you, because unlike the stout paper
dictionary on your shelf, you are not its owner.&lt;/p&gt;
&lt;p&gt;I’ve rejected this maladaptive arrangement in favor of a real dictionary, which
is better in every way except that it takes fifteen seconds to find the word
instead of three.&lt;/p&gt;
&lt;p&gt;My only regret is not realizing sooner how much I value qualities other than
speed in my dictionarying – cleanliness, transparency, loyalty to my best
interests, not to mention the refreshing physicality of the whole thing. I
didn’t realize how much I’d given up by using the web instead, and how little
was gained.&lt;/p&gt;
&lt;p&gt;This little insight suggests a principle that we 21st-century wanderers might
want to write down: whenever you can, own the tools, or you never stop paying
for them.&lt;/p&gt;
&lt;p&gt;Tool ownership is a great way to use gift cards you receive during the
holidays. Instead of blowing it on something ephemeral, get a good, solid tool
that will serve you for life and ask nothing in return.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/programmings-dirtiest-little-secret/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/programmings-dirtiest-little-secret/</guid>
      <description>&lt;h1 id=&#34;programmings-dirtiest-little-secret&#34;&gt;Programming&amp;rsquo;s Dirtiest Little Secret&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Archivo descargado desde: &lt;a href=&#34;https://steve-yegge.blogspot.com/2008/09/programmings-dirtiest-little-secret.html&#34;&gt;steve-yegge.blogspot.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is another one I&amp;rsquo;ve wanted to write forever. Man, I&amp;rsquo;ve tried a
bunch of times. No ruck. Not Rucky. Once again I&amp;rsquo;m stuck feeling so
strongly about something that I&amp;rsquo;m tripping over myself trying to get my
point across.&lt;/p&gt;
&lt;p&gt;So! Only one thing left to try: bust open a bottle of wine and see if
that gets the ol&#39; creative juices flowing all over my keyboard. Rather
than top-down, which is boring, let&amp;rsquo;s go bottoms-up.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Once upon a time&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;hellip;in, uh, let&amp;rsquo;s see&amp;hellip; it was about 1982. Yeah. A looooong time ago.
This is practically a fairy tale.&lt;/p&gt;
&lt;p&gt;Once upon a time in &amp;lsquo;82, there was this completely hypothetical
fictitious made-up dorky 12-year-old kid named Yeev Staigey, who was
enduring his sophomore year at Paradise High School in Paradise,
California. Yeev had skipped 3rd, 7th and 8th grades and entered high
school at age 11, in a heroic and largely successful effort to become
socially inept for the rest of his life.&lt;/p&gt;
&lt;p&gt;Boy, I could tell you all sorts of stories about little Yeev at that
age. He was even lamer and more pathetic than you&amp;rsquo;re probably already
imagining.&lt;/p&gt;
&lt;p&gt;However, our story today concerns Yeev&amp;rsquo;s need to take a, um, an&amp;hellip;
elective of some sort. I&amp;rsquo;m not sure what they called it, but at Yeev&amp;rsquo;s
school, you couldn&amp;rsquo;t just take math and science and languages and
history and all that boring stuff. No! Yeev was being educated in the
United States of America, so he had to take &amp;ldquo;electives&amp;rdquo;, which were
loosely defined as &amp;ldquo;Classes Taught by the Football Coach because Some
Law Said that Football Coaches Had to Teach A Course Other Than
Football.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;These &amp;ldquo;electives&amp;rdquo; (which you could &amp;ldquo;elect&amp;rdquo; not to take, in which case
they would &amp;ldquo;elect&amp;rdquo; not to graduate you) were the kinds of courses that
put the &amp;ldquo;Red&amp;rdquo; in Red-Blooded American. These were courses like Wood
Shop, Metal Shop, Auto Shop, and of course that perennial favorite, Just
Chop Your Hand Off For Five Credits Shop.&lt;/p&gt;
&lt;p&gt;At the time our story begins, our pathetic hero Yeev is peering through
his giant scratched bifocal goggles at the electives list, trying to
find one that doesn&amp;rsquo;t involve grease and sparks and teachers screaming
for a medic, can anyone here make a tourniquet, help help help oh god my
pension, and all that manly American stuff you find in Shop class.&lt;/p&gt;
&lt;p&gt;Yeev noticed that one of the electives, surely placed there by mistake,
was Typing. Like, on a typewriter. Yeev thought this seemed, in the
grand scheme of things, relatively harmless. The worst that could happen
was maybe getting your fingers jammed in an electric typewriter just as
lightning hit the building, causing you to jerk wildly in such a way
that your pants accidentally fall down around your ankles and everyone
laughs loudly at the Mervyn&amp;rsquo;s white briefs your mom bought you. That
would be mildly embarrassing, yes, but in a few years almost nobody
would remember, except when they saw you.&lt;/p&gt;
&lt;p&gt;Despite this potential pitfall, Typing definitely sounded more appealing
than Tourniquet Shop.&lt;/p&gt;
&lt;p&gt;Yeev checked, and sure enough, the school&amp;rsquo;s football coach was actually
teaching the class. For real. Seeing as this was going to be the closest
Yeev would ever get to a football field during his educational career,
Yeev decided to go for it.&lt;/p&gt;
&lt;p&gt;Yeev didn&amp;rsquo;t know it at the time, but they say coaches make the best
teachers. You know. &amp;ldquo;Them.&amp;rdquo; &amp;ldquo;They&amp;rdquo; say it. It&amp;rsquo;s got some truth to it,
actually. Coaches have to get a bunch of complicated information through
to people with the attention spans of hungry billy goats. That takes mad
skilz, as &amp;ldquo;they&amp;rdquo; also say.&lt;/p&gt;
&lt;p&gt;Have you ever noticed how on NFL Prime Time, the ex-coach commentators
and coached ex-player commentators always have big, beefy hands, and
they wave them at you as they talk, riveting your attention on the
speaker? It&amp;rsquo;s because your reptilian brain is thinking &amp;ldquo;that dude is
about to hit me.&amp;rdquo; Coaches know how to get your attention. They know how
to &lt;em&gt;teach.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So Yeev was pretty fortunate in getting a coach. It wasn&amp;rsquo;t &lt;em&gt;all&lt;/em&gt; roses,
mind you. He was unfortunate in the sense that he was living in 1982, he
had little to no experience with computers, and the school was so
backwards that by 2008 they still wouldn&amp;rsquo;t have a fugging website,
apparently. And back in 1982 they could only afford budget for half the
typerwriters to be electric; the rest were the old, manual, horse-drawn
kind of typewriter.&lt;/p&gt;
&lt;p&gt;It would have been better if Yeev had been learning to type today. Today
they have fast keyboards, and smart programs that can show you your
exact progress, and so on.&lt;/p&gt;
&lt;p&gt;I feel almost jealous of people who need to learn to type today. Don&amp;rsquo;t
you?&lt;/p&gt;
&lt;p&gt;But in 1982, little bifocaled Yeev had no software training programs, so
he had to learn from a football coach.&lt;/p&gt;
&lt;p&gt;And all things considered, this was pretty rucky.&lt;/p&gt;
&lt;p&gt;Let me tell you how it went down&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Learning Licks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Have you ever watched a professional concert musician practicing? I&amp;rsquo;m
talking about those those world-class ones, the kinds of musicians that
were trained in academies in China and Russia and have all the technique
of Japanese robots combined with all the musical soul of, well, Japanese
robots.&lt;/p&gt;
&lt;p&gt;Well, they practice like this: Fast, Slow, Medium. Fast, Slow, Medium.
Over and over.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s how they practice.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s kinda like Goldilocks. You remember her, don&amp;rsquo;t you? That little
girl in the fairy tale that got eaten by bears? Too hot, too cold, just
right. That&amp;rsquo;s how musicians practice.&lt;/p&gt;
&lt;p&gt;In classical music, they call difficult hunks of music &amp;ldquo;passages&amp;rdquo;. In
electric guitar music, they call &amp;lsquo;em &amp;ldquo;licks&amp;rdquo;. But it&amp;rsquo;s pretty much the
same thing. You want to train your fingers to swipe through those notes
like a Cheshire Cat licking its big smile. Llllllick!&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how you train your fingers.&lt;/p&gt;
&lt;p&gt;You start with a passage. Anything at all. At first it&amp;rsquo;ll just be a
single note. Later it&amp;rsquo;ll become a few notes, a phrase, a measure, a
couple of measures. Anything you&amp;rsquo;re having trouble with and you want to
master.&lt;/p&gt;
&lt;p&gt;First you play the lick &lt;strong&gt;as fast as possible&lt;/strong&gt;. You don&amp;rsquo;t care about
making mistakes! The goal of this phase is to loosen your fingers up.
You want them to know what raw speed feels like. The wind should be
rushing through their fingery hair! Yuck!&lt;/p&gt;
&lt;p&gt;Next you play it &lt;strong&gt;as slow as necessary&lt;/strong&gt;. In this pass you should use
proper technique. That basically means &amp;ldquo;as proper as you can&amp;rdquo;, because
state-of-the-art technique is (a) constantly evolving and (b) always
somewhat personal. You pick any discipline, they&amp;rsquo;ve got schools of
thought around technique. There&amp;rsquo;s no right answer, because our bodies
all work a little differently. You just have to pick the technique that
you like best and try to do it right.&lt;/p&gt;
&lt;p&gt;Eventually you can &lt;em&gt;invent&lt;/em&gt; your own technique. Sometimes you&amp;rsquo;re forced
to: I&amp;rsquo;ll tell you about that in a little bit. But at first you should
learn someone else&amp;rsquo;s tried-and-true technique, and after you&amp;rsquo;ve mastered
it, &lt;em&gt;then&lt;/em&gt; decide if you want to change it. Before you go charging off
in your own crazy directions, you need to master your form.&lt;/p&gt;
&lt;p&gt;Form is liberating. Believe it. It&amp;rsquo;s what they say, and they say it for
sound reasons.&lt;/p&gt;
&lt;p&gt;Whatever technique you choose, in the slow pass you don&amp;rsquo;t care about
speed AT ALL. You care about accuracy. Perfect practice makes perfect,
and all that. You want your fingers to know what it feels like to be
&lt;em&gt;correct&lt;/em&gt;. Doesn&amp;rsquo;t matter if it takes you 30 seconds per note. Just get
it right. If you make a mistake, start over from the beginning,
&lt;em&gt;slower&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Finally, you play it &amp;ldquo;at speed&amp;rdquo;. If you&amp;rsquo;re practicing a musical
instrument, you play it at the target tempo. You want your fingers to
feel &lt;em&gt;musical&lt;/em&gt;. Musicians generally agree that you don&amp;rsquo;t want to make
mistakes in this phase, or you&amp;rsquo;re just practicing your mistakes. But
realistically, most musicians are probably willing to make a few minor
sacrifices here in the third pass, as long as the music shines through
beautifully.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s call it 5 sacrifices a minute. That&amp;rsquo;s what you&amp;rsquo;re targeting.&lt;/p&gt;
&lt;p&gt;Fast, Slow, Medium. Over and over. That&amp;rsquo;s what they do. And it works!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Learning to Type&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yeev&amp;rsquo;s football coach was a very wise man. I don&amp;rsquo;t know if he played a
musical instrument, but he sure as heck used classical practice ideas.&lt;/p&gt;
&lt;p&gt;Yeev dutifully attended class once a day. First he had to learn the
basics of typing. There&amp;rsquo;s not much to it, really. You hold your hands in
a certain position on &amp;ldquo;home row&amp;rdquo;. You keep your wrists off the keyboard.
There&amp;rsquo;s a diagram showing which fingers type which keys. You memorize
it. You try each key a few times.&lt;/p&gt;
&lt;p&gt;Think back to kindergarten, when they had you writing the alphabet.
You&amp;rsquo;d fill a line with &amp;ldquo;A&amp;quot;s, and then a line with &amp;ldquo;B&amp;quot;s. Just like
that.&lt;/p&gt;
&lt;p&gt;Within a day or two, you have the keyboard layout memorized, and given
enough time, you can type anything without looking at the keys. Just a
day or two, and you&amp;rsquo;re already touch-typing!&lt;/p&gt;
&lt;p&gt;After the basics, unsurprisingly, Yeev&amp;rsquo;s class played a lot of Typing
Football. This was a game the coach had invented to help making learning
how to type fun. It wasn&amp;rsquo;t too hard, since the coach astutely realized
that not everyone in the class would have the NFL rule book and playbook
memorized. Typing football pretty much involved dividing the class in
half and moving the ball down the field by typing better than the other
half.&lt;/p&gt;
&lt;p&gt;The drills Yeev did in 1982 could be done a lot better today using
software. Heck, today they have software that lets you practice typing
by &lt;a href=&#34;http://en.wikipedia.org/wiki/The_Typing_of_the_Dead&#34;&gt;shooting
zombies&lt;/a&gt;. How cool
is that?&lt;/p&gt;
&lt;p&gt;If there&amp;rsquo;s any secret to learning to type, it&amp;rsquo;s persistence. Yeev&amp;rsquo;s
class kept at it. Every day, five days a week for 12 weeks, they typed.
They didn&amp;rsquo;t have homework, since it wasn&amp;rsquo;t expected that they&amp;rsquo;d have
typewriters. They just came in, played typing football, and did the
fast/slow/medium drills.&lt;/p&gt;
&lt;p&gt;Sure, sure, there were nuances. Sometimes they&amp;rsquo;d practice common letter
groupings in their language of choice, which in Yeev&amp;rsquo;s case was English.
Groups like &amp;ldquo;tion&amp;rdquo;, &amp;ldquo;the&amp;rdquo; and &amp;ldquo;ing&amp;rdquo; had to be practiced until they
rolled out with an effortless flick. Sometimes they&amp;rsquo;d practice stuff
with lots of punctuation, or numbers, or odd spacing.&lt;/p&gt;
&lt;p&gt;That kind of detail is beyond the scope of our story. It&amp;rsquo;s all handled
by typing software these days. You&amp;rsquo;ll see.&lt;/p&gt;
&lt;p&gt;So how did it turn out? Well, by the end of the semester, Yeev was
typing a healthy 60 words per minute. And he wasn&amp;rsquo;t even the best in the
class. It was approximately a 45-day investment of 50 minutes a day.&lt;/p&gt;
&lt;p&gt;And it was fun!&lt;/p&gt;
&lt;p&gt;Realistically, these days, with better software and better keyboards,
learning to type is probably more like a 30-day investment of 30 minutes
a day.&lt;/p&gt;
&lt;p&gt;Today Yeev types about 120 wpm. He entered college still typing around
60-65 wpm, but he decided to practice up after IM&amp;rsquo;ing with a fellow
student named Kelly who typed 120 wpm, using an old Unix program called
&amp;ldquo;talk&amp;rdquo;. Yeev could &lt;em&gt;feel&lt;/em&gt; her impatience as they IM&amp;rsquo;ed. He mentioned it,
and she said: &amp;ldquo;You should see me on a Dvorak keyboard.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Yowza. Yeev was just socially ept enough by then to bite his tongue
really hard, and not type anything at all.&lt;/p&gt;
&lt;p&gt;But enough about Yeev. The guy&amp;rsquo;s made-up anyway.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do you need to learn to type?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, uh&amp;hellip; yeah. You &lt;em&gt;know&lt;/em&gt; you do. That&amp;rsquo;s the thing. Even as you make
excuses, you know deep down that you need to learn. Typing is how we
interact with the whole world today. It doesn&amp;rsquo;t make sense to handicap
yourself.&lt;/p&gt;
&lt;p&gt;Perhaps you&amp;rsquo;re one of those people who declares: &amp;ldquo;I&amp;rsquo;m not rate-limited!
I spend all my time in design and almost none of it entering code!&amp;rdquo; I
hear that all the time.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;re wrong, though. Programmers type all day long, even when they&amp;rsquo;re
designing. &lt;em&gt;Especially&lt;/em&gt; when they&amp;rsquo;re designing, in fact, because they
need to have conversations with remote participants.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the industry&amp;rsquo;s dirty secret:&lt;/p&gt;
&lt;p&gt;Programmers who don&amp;rsquo;t touch-type fit a profile.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re a touch-typist, you know the profile I&amp;rsquo;m talking about. It&amp;rsquo;s
dirty. People don&amp;rsquo;t talk about dirty secrets in polite company.
Illtyperacy is the bastard incest child hiding in the industry&amp;rsquo;s
basement. I swear, people get really uncomfortable talking about it. We
programmers act all enlightened on Reddit, but we can&amp;rsquo;t face our own
biggest socio-cultural dirty secret.&lt;/p&gt;
&lt;p&gt;Well, see, here&amp;rsquo;s how it is: I&amp;rsquo;m gonna air out the laundry, whether you
like the smell or not.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s the profile? The profile is this: &lt;strong&gt;non-touch-typists have to
make sacrifices in order to sustain their productivity.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s just simple arithmetic. If you spend more time hammering out code,
then in order to keep up, you need to spend &lt;em&gt;less&lt;/em&gt; time doing something
else.&lt;/p&gt;
&lt;p&gt;But when it comes to programming, there are only so many things you can
sacrifice! You can cut down on your documentation. You can cut down on
commenting your code. You can cut down on email conversations and
participation in online discussions, preferring group discussions and
hallway conversations.&lt;/p&gt;
&lt;p&gt;And&amp;hellip; well, that&amp;rsquo;s about it.&lt;/p&gt;
&lt;p&gt;So guess what non-touch-typists sacrifice? All of it, man. They
sacrifice all of it.&lt;/p&gt;
&lt;p&gt;Touch typists can spot an illtyperate programmer from a mile away. They
don&amp;rsquo;t even have to be in the same room.&lt;/p&gt;
&lt;p&gt;For starters, non-typists are &lt;em&gt;almost&lt;/em&gt; invisible. They don&amp;rsquo;t leave a
footprint in our online community.&lt;/p&gt;
&lt;p&gt;When you talk to them 1-on-1, sure, they seem smart. They usually &lt;em&gt;are&lt;/em&gt;
smart. But non-typists only ever contribute a sentence or two to any
online design discussion, or style-guide thread, or outright flamewar,
so their online presence is limited.&lt;/p&gt;
&lt;p&gt;Heck, it almost seems like they&amp;rsquo;re standoffish, not interested in
helping develop the engineering culture. Too good for everyone else!&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s the first part of the profile. They&amp;rsquo;re distant. And that&amp;rsquo;s where
their claim that &amp;ldquo;most of their time is spent in design&amp;rdquo; completely
falls apart, because design involves communicating with other people,
and design involves a &lt;em&gt;persistent record&lt;/em&gt; of the decision tree. If
you&amp;rsquo;re not typing as part of your design, then you&amp;rsquo;re not doing design
right.&lt;/p&gt;
&lt;p&gt;Next dead-giveaway: non-typist code is&amp;hellip; minimalist. They don&amp;rsquo;t go the
extra mile to comment things. If their typing skills are really bad,
they may opt to comment the code in a second, optional pass. And the
ones who essentially type with their elbows? They even sacrifice
&lt;em&gt;formatting&lt;/em&gt;, which is truly the most horrible sin a programmer can
commit. Well, actually, no, scratch that. It&amp;rsquo;s the second worst. The
worst is misspelling an identifier, and then not fixing it because it&amp;rsquo;s
too much typing. But shotgun formatting is Right Up There.&lt;/p&gt;
&lt;p&gt;You know. Shotgun formatting? Where you shove all your letters into a
shotgun, point it at the screen, and BLAM! You&amp;rsquo;ve Got Code? I knew a
dude who coded like that. It was horrible. It was even more horrifying
to watch him, because he stared directly downward at his keyboard while
he typed, and he&amp;rsquo;d type with exactly two fingers, whether he needed them
both or not, and about once a minute he&amp;rsquo;d look up at the screen.&lt;/p&gt;
&lt;p&gt;During these brief inspections of his output, one of two things would
happen. The first possibility was that he&amp;rsquo;d reach for his mouse, because
he had been typing into the wrong window for the past 60 seconds, often
with comical results. If he didn&amp;rsquo;t reach for his mouse, he&amp;rsquo;d reach for
the backspace key, which he would press, on average, the same number of
times he had pressed other keys.&lt;/p&gt;
&lt;p&gt;That dude just may have been CPU bound rather than I/O-bound, though, so
I guess I&amp;rsquo;ll cut him some slack.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B-b-b-but REFACTORING *fap* *fap* *fap*&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Yeah, yeah. Refaptoring tools make you feel studly. I hear ya. I&amp;rsquo;ve
heard it &lt;em&gt;plenty&lt;/em&gt; of times. The existence of refactoring tools makes
typing practically obsolete! A thing of the past! You just press menu
buttons all day and collect a paycheck!&lt;/p&gt;
&lt;p&gt;I got it. Really. I hear ya.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the deal: everyone is laughing at you. Or if they&amp;rsquo;re your close
friend, they&amp;rsquo;re just pitying you. Because you suck. If you &lt;em&gt;really&lt;/em&gt;
think refactoring tools are a substitute for typing, it&amp;rsquo;s like you&amp;rsquo;re
telling us that it&amp;rsquo;s OK for you to saw your legs off because you have a
car. We&amp;rsquo;re not fucking buying it.&lt;/p&gt;
&lt;p&gt;If you are a programmer, or an IT professional working with computers in
&lt;em&gt;any&lt;/em&gt; capacity, &lt;strong&gt;you need to learn to type!&lt;/strong&gt; I don&amp;rsquo;t know how to put
it any more clearly than that. If you refuse to take the time, then
you&amp;rsquo;re&amp;hellip; you&amp;rsquo;re&amp;hellip; an adjective interjection adjective noun,
exclamation.&lt;/p&gt;
&lt;p&gt;Yeah, I went ahead and redacted that last sentence a bit. It&amp;rsquo;s better
this way. I want us to remain friends. You just go ahead and madlib that
sucker.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Good News&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the good news, though. Seriously, there&amp;rsquo;s good news. Like, now
that you&amp;rsquo;re finally gonna learn to type, I&amp;rsquo;ve got good news for you.&lt;/p&gt;
&lt;p&gt;And I &lt;em&gt;know&lt;/em&gt; you&amp;rsquo;re gonna learn. You know how I know? I&amp;rsquo;ll tell you:
it&amp;rsquo;s because you&amp;rsquo;ve read this far!&lt;/p&gt;
&lt;p&gt;Seriously. The fact that you can actually read sets you apart.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;d be absolutely astonishedly flabbergasted at how many programmers
don&amp;rsquo;t know how to READ. I&amp;rsquo;m dead serious. You can learn to speed read
even faster than you can learn to type, and yet there are tons of
programmers out there who are unable to even &lt;em&gt;skim&lt;/em&gt; this blog. They try,
but unlike speed readers, these folks don&amp;rsquo;t actually pick up the
content.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s the industry&amp;rsquo;s other dirty little secret.&lt;/p&gt;
&lt;p&gt;So! Given that you&amp;rsquo;ve read this far, you now realize that it&amp;rsquo;s high time
you learned to type. You know you can do it. You even know it&amp;rsquo;s not
going to be that hard. You know you&amp;rsquo;re just going to have to give up a
couple dozen games of Wii Golf, and suddenly you&amp;rsquo;ll be, like, twice as
productive without having had to learn so much as a new data
structure.&lt;/p&gt;
&lt;p&gt;You &lt;em&gt;know&lt;/em&gt;. That&amp;rsquo;s why &lt;em&gt;I know&lt;/em&gt; you&amp;rsquo;re going to learn.&lt;/p&gt;
&lt;p&gt;So I&amp;rsquo;ll tell you the good news: it&amp;rsquo;s frigging easy! Fast, slow, medium!
Get some typing software and just &lt;em&gt;learn&lt;/em&gt;. We&amp;rsquo;re not talking about
dieting here, or quitting smoking. It doesn&amp;rsquo;t matter how old you are,
how set in your ways you are: it&amp;rsquo;s &lt;em&gt;still&lt;/em&gt; easy. You just need to put in
a few dozen hours.&lt;/p&gt;
&lt;p&gt;Hell, if you&amp;rsquo;re having trouble, just email me, and I&amp;rsquo;ll give you a
personalized pep talk. I can afford it. I type pretty fast. Plus your
email will be really short.&lt;/p&gt;
&lt;p&gt;In fact, here&amp;rsquo;s a mini pep talk for ya: I didn&amp;rsquo;t know how to touch-type
numbers until I&amp;rsquo;d been out of college for 3 or 4 years. I finally got
fed up with the fact that every time I had to type a number, I had to
sit up, look down at the keys, and fumble through with a couple of
random fingers.&lt;/p&gt;
&lt;p&gt;So I finally spent 15 minutes a day for, like, 2 weeks. That&amp;rsquo;s it. You
don&amp;rsquo;t have to type numbers very often, as it happens, so after a week or
so, every time I needed to type a number I just &lt;em&gt;slowed down and typed
it right&lt;/em&gt;. After about 2 weeks, I was typing numbers.&lt;/p&gt;
&lt;p&gt;That was 15 years ago! 15! 15! 15! I love being able to type that
without looking! It&amp;rsquo;s &lt;em&gt;empowering&lt;/em&gt;, being able to type almost as fast as
you can think. Why would you want it any other way?&lt;/p&gt;
&lt;p&gt;C&amp;rsquo;mon. It&amp;rsquo;s time to bite the bullet and &lt;em&gt;learn&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Where to start?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, if it were me, I&amp;rsquo;d go online and look for free typing software.
I&amp;rsquo;d search for, oh, an hour or two at most, spread over a week or so.
I&amp;rsquo;d try everything out there. If nothing free seemed to be doing it for
me, I&amp;rsquo;d get Mavis Beacon. It&amp;rsquo;s, like, the brand name for typing
software. I have no idea if it&amp;rsquo;s good, but I imagine it&amp;rsquo;s a hell of a
lot better than a football coach teaching you on an electric
typewriter.&lt;/p&gt;
&lt;p&gt;I dunno, man. I just can&amp;rsquo;t&amp;hellip; I can&amp;rsquo;t &lt;em&gt;understand&lt;/em&gt; why professional
programmers out there allow themselves to have a career without teaching
themselves to type. It doesn&amp;rsquo;t make any sense. It&amp;rsquo;s like being, I dunno,
an actor without knowing how to put your clothes on. It&amp;rsquo;s showing up to
the game unprepared. It&amp;rsquo;s coming to a meeting without your slides. Going
to class without your homework. Swimming in the Olympics wearing a pair
of Eddie Bauer Adventurer Shorts.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s face it: it&amp;rsquo;s &lt;em&gt;lazy&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s just no excuse for it. There are no excuses. I have a friend,
John, who can only use one of his hands. He types 70 wpm. He invented
his own technique for it. He&amp;rsquo;s not making excuses; he&amp;rsquo;s typing circles
around people who &lt;em&gt;are&lt;/em&gt; making excuses.&lt;/p&gt;
&lt;p&gt;Shame on them!&lt;/p&gt;
&lt;p&gt;If you have two hands, then 70 wpm, error-free, is easily within your
reach. Or faster. It ain&amp;rsquo;t as hard as you think. It&amp;rsquo;s a LOT more useful
and liberating than you think.&lt;/p&gt;
&lt;p&gt;And since you&amp;rsquo;re Rucky enough to be learning today, you might as well
learn on a Dvorak layout. It&amp;rsquo;s a free speed boost. Might as well give
yourself a head start!&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s it. That&amp;rsquo;s my article. &lt;em&gt;Please&lt;/em&gt; — learn to type. This should be a
non-issue, NOT one of the industry&amp;rsquo;s dirty secrets that nobody talks
about. Tell your boss you&amp;rsquo;re going to take the time. Get your employer
to pay for the software. Have them send you off to a course, if
necessary, so you can&amp;rsquo;t weasel out of it.&lt;/p&gt;
&lt;p&gt;Do whatever it takes.&lt;/p&gt;
&lt;p&gt;Then let me know how it goes. Believe it or not, I want to hear your
success stories. Send me mail. It&amp;rsquo;ll make my day!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/talk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/talk/</guid>
      <description>&lt;h2 id=&#34;write-like-you-talk&#34;&gt;Write like you talk&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído desde:
&lt;a href=&#34;http://www.paulgraham.com/talk.html&#34;&gt;http://www.paulgraham.com/talk.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;rsquo;s a simple trick for getting more people to read what you write: write in
spoken language.&lt;/p&gt;
&lt;p&gt;Something comes over most people when they start writing. They write in a
different language than they&amp;rsquo;d use if they were talking to a friend. The
sentence structure and even the words are different. No one uses &amp;ldquo;pen&amp;rdquo; as a
verb in spoken English. You&amp;rsquo;d feel like an idiot using &amp;ldquo;pen&amp;rdquo; instead of &amp;ldquo;write&amp;rdquo;
in a conversation with a friend.&lt;/p&gt;
&lt;p&gt;The last straw for me was a sentence I read a couple days ago:&lt;/p&gt;
&lt;p&gt;The mercurial Spaniard himself declared: &amp;ldquo;After Altamira, all is decadence.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s from Neil Oliver&amp;rsquo;s &lt;em&gt;A History of Ancient Britain&lt;/em&gt;. I feel bad
making an example of this book, because it&amp;rsquo;s no worse than lots of others. But
just imagine calling Picasso &amp;ldquo;the mercurial Spaniard&amp;rdquo; when talking to a friend.
Even one sentence of this would raise eyebrows in conversation. And yet people
write whole books of it.&lt;/p&gt;
&lt;p&gt;Ok, so written and spoken language are different. Does that make written
language worse?&lt;/p&gt;
&lt;p&gt;If you want people to read and understand what you write, yes. Written language
is more complex, which makes it more work to read. It&amp;rsquo;s also more formal and
distant, which gives the reader&amp;rsquo;s attention permission to drift. But perhaps
worst of all, the complex sentences and fancy words give you, the writer, the
false impression that you&amp;rsquo;re saying more than you actually are.&lt;/p&gt;
&lt;p&gt;You don&amp;rsquo;t need complex sentences to express complex ideas. When specialists in
some abstruse topic talk to one another about ideas in their field, they don&amp;rsquo;t
use sentences any more complex than they do when talking about what to have for
lunch. They use different words, certainly. But even those they use no more
than necessary. And in my experience, the harder the subject, the more
informally experts speak. Partly, I think, because they have less to prove, and
partly because the harder the ideas you&amp;rsquo;re talking about, the less you can
afford to let language get in the way.&lt;/p&gt;
&lt;p&gt;Informal language is the athletic clothing of ideas.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not saying spoken language always works best. Poetry is as much music as
text, so you can say things you wouldn&amp;rsquo;t say in conversation. And there are a
handful of writers who can get away with using fancy language in prose. And
then of course there are cases where writers don&amp;rsquo;t want to make it easy to
understand what they&amp;rsquo;re saying—in corporate announcements of bad news, for
example, or at the more &lt;em&gt;bugus&lt;/em&gt; end of the humanities. But for nearly
everyone else, spoken language is better.&lt;/p&gt;
&lt;p&gt;It seems to be hard for most people to write in spoken language. So perhaps the
best solution is to write your first draft the way you usually would, then
afterward look at each sentence and ask &amp;ldquo;Is this the way I&amp;rsquo;d say this if I were
talking to a friend?&amp;rdquo; If it isn&amp;rsquo;t, imagine what you would say, and use that
instead. After a while this filter will start to operate as you write. When you
write something you wouldn&amp;rsquo;t say, you&amp;rsquo;ll hear the clank as it hits the page.&lt;/p&gt;
&lt;p&gt;Before I publish a new essay, I read it out loud and fix everything that
doesn&amp;rsquo;t sound like conversation. I even fix bits that are phonetically awkward;
I don&amp;rsquo;t know if that&amp;rsquo;s necessary, but it doesn&amp;rsquo;t cost much.&lt;/p&gt;
&lt;p&gt;This trick may not always be enough. I&amp;rsquo;ve seen writing so far removed from
spoken language that it couldn&amp;rsquo;t be fixed sentence by sentence. For cases like
that there&amp;rsquo;s a more drastic solution. After writing the first draft, try
explaining to a friend what you just wrote. Then replace the draft with what
you said to your friend.&lt;/p&gt;
&lt;p&gt;People often tell me how much my essays sound like me talking. The fact that
this seems worthy of comment shows how rarely people manage to write in spoken
language. Otherwise everyone&amp;rsquo;s writing would sound like them talking.&lt;/p&gt;
&lt;p&gt;If you simply manage to write in spoken language, you&amp;rsquo;ll be ahead of 95% of
writers. And it&amp;rsquo;s so easy to do: just don&amp;rsquo;t let a sentence through unless it&amp;rsquo;s
the way you&amp;rsquo;d say it to a friend.&lt;/p&gt;
&lt;p&gt;Thanks&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/traducciones/advice-from-an-old-programmer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/traducciones/advice-from-an-old-programmer/</guid>
      <description>&lt;h1 id=&#34;consejo-de-un-viejo-programador&#34;&gt;Consejo de un viejo programador&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído del libro:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learnpythonthehardway.org/python3/&#34;&gt;Learn Python the hard way de Zed Shaw&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Traducción por Hugo Ruscitti&lt;/li&gt;
&lt;/ul&gt;
&lt;!--You’ve finished this book and have decided to continue with programming. Maybe--&gt;
&lt;!--it will be a career for you, or maybe it will be a hobby. You’ll need some--&gt;
&lt;!--advice to make sure you continue on the right path and get the most enjoyment--&gt;
&lt;!--out of your newly chosen activity.--&gt;
&lt;p&gt;Has finalizado este libro y has decidido continuar con la programación. Tal vez
esto se convierta en una carrera para vos, o tal vez un hobby. Por ese motivo
te daré un consejo para que puedas continuar por el camino correcto y disfrutar
lo mayor posible de esta nueva habilidad.&lt;/p&gt;
&lt;!--I’ve been programming for a very long time. So long that it’s incredibly boring--&gt;
&lt;!--to me. At the time that I wrote this book, I knew about 20 programming--&gt;
&lt;!--languages and could learn new ones in about a day to a week depending on how--&gt;
&lt;!--weird they were. Eventually, though, this just became boring and couldn’t hold--&gt;
&lt;!--my interest anymore. This doesn’t mean I think programming is boring, or that--&gt;
&lt;!--you will think it’s boring, only that I find it uninteresting at this point in--&gt;
&lt;!--my journey.--&gt;
&lt;p&gt;He programado durante muchos años, tanto tiempo que se volvió increíblemente aburrido
para mí. En este momento sé programar en unos 20 lenguajes de programación
y podría aprender algún otro en una semana o un día dependiendo de cuan raro
sea ese lenguaje. Eventualmente llegué a pensar: esto se volvió aburrido y no
voy a perder interés en esto. Esto no significa que programar sea aburrido, o que
tú puedas llegar a pensar que programar es aburrido, sino que encontré que la
programación se volvió menos interesante para mí en este punto de mi recorrido.&lt;/p&gt;
&lt;!--What I discovered after this journey of learning is that it’s not the languages--&gt;
&lt;!--that matter but what you do with them. Actually, I always knew that, but I’d--&gt;
&lt;!--get distracted by the languages and forget it periodically.  Now I never forget--&gt;
&lt;!--it, and neither should you.--&gt;
&lt;p&gt;Lo que descubrí luego de estos años es que lo que importa no el lenguaje sino lo que
puedas hacer con él. En realidad, siempre supe eso, pero en algún punto comencé a
distraerme por los lenguajes y me olvidé de esta idea. Ahora, nunca me olvido de eso, y
te recomiendo a vos que nunca lo hagas.&lt;/p&gt;
&lt;!--Which programming language you learn and use doesn’t matter. Do not get sucked--&gt;
&lt;!--into the religion surrounding programming languages as that will only blind you--&gt;
&lt;!--to their true purpose of being your tool for doing interesting things.--&gt;
&lt;p&gt;El lenguaje de programación que aprendes y usas realmente no importa. No te dejes
atrapar por esa cultura de lenguajes de programación y sus dogmas, ya que te nublarán
la vista. El verdadero propósito de los lenguajes de programación es el de ser
una herramienta para hacer cosas interesantes.&lt;/p&gt;
&lt;!--Programming as an intellectual activity is the only art form that allows you to--&gt;
&lt;!--create interactive art. You can create projects that other people can play--&gt;
&lt;!--with, and you can talk to them indirectly. No other art form is quite this--&gt;
&lt;!--interactive. Movies flow to the audience in one direction. Paintings do not--&gt;
&lt;!--move. Code goes both ways.--&gt;
&lt;p&gt;La programación, vista como una actividad intelectual, es la única forma de arte
que te permite crear arte interactivo. Puedes crear proyectos que otras personas
pueden usar e interactuar. No hay tantas formas de artes que permitan este tipo
de interactividad. Las películas conducen al público en una dirección. La pintura
no se mueve. El código puede ir en dos direcciones.&lt;/p&gt;
&lt;!--Programming as a profession is only moderately interesting. It can be a good--&gt;
&lt;!--job, but you could make about the same money and be happier running a fast food--&gt;
&lt;!--joint. You’re much better off using code as your secret weapon in another--&gt;
&lt;!--profession.--&gt;
&lt;p&gt;La programación, vista como una profesión, es solamente interesante de manera moderada. Puede
ser un buen trabajo, aunque podrías hacer casi el mismo dinero y ser más feliz articulando
un negocio de comidas rápidas. Lo que sí te puede beneficiar mucho es usar tus habilidades
de programación para potenciar otra profesión.&lt;/p&gt;
&lt;!--People who can code in the world of technology companies are a dime a dozen and--&gt;
&lt;!--get no respect.  People who can code in biology, medicine, government,--&gt;
&lt;!--sociology, physics, history, and mathematics are respected and can do--&gt;
&lt;!--amazing things to advance those disciplines.--&gt;
&lt;p&gt;Las personas que saben programar en el mundo de las compañías de tecnología
valen muy poco y no obtienen mucho respeto. En cambio, las personas que saben
programar en biología, medicina, gobiernos, sociología, física, historia y matemáticas
son respetadas y valoradas, pueden hacer cosas impresionantes y avanzar a grandes
pasos en esas disciplinas.&lt;/p&gt;
&lt;!--Of course, all of this advice is pointless. If you liked learning to write--&gt;
&lt;!--software with this book, you should try to use it to improve your life any way--&gt;
&lt;!--you can. Go out and explore this weird, wonderful, new intellectual pursuit--&gt;
&lt;!--that barely anyone in the last 50 years has been able to explore. Might as well--&gt;
&lt;!--enjoy it while you can.--&gt;
&lt;p&gt;Por su puesto, esta recomendación por si sola no es útil. Si has disfrutado aprender
a escribir software con este libro, deberías intentar usarlo para mejorar tu vida
en todas las formas que puedas. Ve a explorar esta rara y maravillosa habilidad intelectual
que hace pocos años que comenzó a ser explorada.&lt;/p&gt;
&lt;!--Finally, I’ll say that learning to create software changes you and makes you--&gt;
&lt;!--different. Not better or worse, just different. You may find that people treat--&gt;
&lt;!--you harshly because you can create software, maybe using words like “nerd.”--&gt;
&lt;!--Maybe you’ll find that because you can dissect their logic they hate arguing--&gt;
&lt;!--with you. You may even find that simply knowing how a computer works makes you--&gt;
&lt;!--annoying and weird to them.--&gt;
&lt;p&gt;Además, me gustaría decir que aprender a crear software te cambia y hacer que
te veas diferente en una profesión. No digo que te hace mejor o peor, solamente
diferente. Podría suceder que las personas te empiecen a tratar con un poco
de rudeza porque puedes crear software, tal vez usando palabras como &amp;ldquo;nerd&amp;rdquo;. Tal
vez encuentres que te traten así porque disecas sus argumentos en una discusión. O tal
vez encuentres que se deba a que te hace molesto y raro ante ellos que vos simplemente
sepas cómo funciona una computadora.&lt;/p&gt;
&lt;!--To this I have just one piece of advice: they can go to hell. The world needs--&gt;
&lt;!--more weird people who know how things work and who love to figure it all out.--&gt;
&lt;!--When they treat you like this, just remember that this is your journey, not--&gt;
&lt;!--theirs. Being different is not a crime, and people who tell you it is are just--&gt;
&lt;!--jealous that you’ve picked up a skill they never in their wildest dreams could--&gt;
&lt;!--acquire.  You can code.--&gt;
&lt;p&gt;Para esto último, tengo una recomendación adicional: mandalos a la mierda. El mundo
necesita muchas más personas raras que sepan como funcionan las cosas, personas que
amen descubrir cosas. Cuando otras personas te traten con rudeza, recuerda que esta
es tu aventura, no la de ellos. Ser diferente no es un crimen, y las personas que te
digan lo contrario solamente están celosas que has adquirido una habilidad que ellos
en sus más remotos sueños podrían adquirir. Vos podés programar.&lt;/p&gt;
&lt;!--They cannot. That is pretty damn cool.--&gt;
&lt;p&gt;Ellos no, y eso es bastante cool.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/traducciones/everything-is-fine-with-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/traducciones/everything-is-fine-with-javascript/</guid>
      <description>&lt;h1 id=&#34;todo-está-bien-con-javascript&#34;&gt;Todo está bien con JavaScript&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído desde:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://macwright.com/2016/10/04/everything-is-fine-with-javascript.html&#34;&gt;https://macwright.com/2016/10/04/everything-is-fine-with-javascript.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Traducción por Hugo Ruscitti&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.examplelab.com.ar/images/link-files/everything-is-fine-with-javascript-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Este es el único diario dispuesto a decir la verdad: todo está bien.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--There’s a sort of blog post you’ve probably read - a sarcastic stab at--&gt;
&lt;!--JavaScript and `npm` and frameworks. There are too many, it’ll say, and--&gt;
&lt;!--it’s confusing, and how did we make such complicated things? It’ll grab--&gt;
&lt;!--names from the ecosystem and present them as equal choices in a comic--&gt;
&lt;!--attempt to construct decision paralysis. Everything moves too fast, and--&gt;
&lt;!--there is too much of it.--&gt;
&lt;p&gt;Hay una serie de blog posts que seguramente has leído - una puñalada sarcástica
sobre JavaScript, &lt;code&gt;npm&lt;/code&gt; y frameworks. Estos artículos mencionan que hay demasiadas
opciones, que es confuso, y sobre lo complicadas que parecen las cosas. También
toman montones de nombres del ecosistema y los presentan como opciones equivalentes
en un intento cómico por construir un escenario de parálisis de decisión. Todo se
mueve muy rápido y hay demasiado de todo.&lt;/p&gt;
&lt;!--I think it’s a decent time to review some principles--&gt;
&lt;p&gt;Pienso que es tiempo de revisar algunos principios.&lt;/p&gt;
&lt;h2 id=&#34;la-obsesión-con-las-cosas-nuevas-es-un-problema-personal-y-no-tecnológico&#34;&gt;La obsesión con las cosas nuevas es un problema personal y no tecnológico&lt;/h2&gt;
&lt;!--I occasionally hang out on guitar forums. They have a name for this--&gt;
&lt;!--thing: **Gear Acquisition Syndrome**, or GAS. It is what it sounds like--&gt;
&lt;!--- when you’re more concerned with getting an OCD Fuzz pedal to round out--&gt;
&lt;!--your rig than you are with learning how to play the instrument.--&gt;
&lt;p&gt;Ocasionalmente paso el rato en foros sobre guitarras. Ahí, tienen nombre
para esto: &lt;strong&gt;Síndrome de la adquisición de pedal&lt;/strong&gt;, o simplemente &lt;em&gt;GAS&lt;/em&gt;. Y es
como suena, es cuando estás más preocupado por conseguir ese pedal Fuzz OCD para
manipular tus sonidos en lugar de aprender a tocar el instrumento.&lt;/p&gt;
&lt;!--GAS with guitars works the same way as with programming: you start--&gt;
&lt;!--asking whether you’re using the *best possible* distortion pedal, start--&gt;
&lt;!--your research, and a few weeks later you own $2,000 worth of distortion--&gt;
&lt;!--pedals.--&gt;
&lt;p&gt;Esto que sucede con las guitarras funciona de la misma manera con la programación: comienzas
preguntándote si estás usando el &lt;em&gt;mejor pedal de distorsión&lt;/em&gt;, comienzas a investigar, y
unas semanas después tienes un gasto de $2.000 en pedales de distorsión.&lt;/p&gt;
&lt;!--Coding is a craft, for which you need tools. Some of them are shiny,--&gt;
&lt;!--some are new, some are old. They all basically work. Change your tools--&gt;
&lt;!--if they aren’t working for you, and otherwise don’t. Heck, for many--&gt;
&lt;!--startups and almost all early-stage startups, [the choice of technology--&gt;
&lt;!--stack really doesn’t--&gt;
&lt;!--matter](https://www.codingvc.com/why-startup-technical-diligence-is-a-waste-of-time/).--&gt;
&lt;p&gt;Programar es un oficio, para los cuales necesitas herramientas. Algunas de
esas herramientas son relucientes, otras nuevas y algunas viejas. Todas básicamente
funcionan. Solo cambia tus herramientas cuando dejan de funcionarte, si no no las
cambies. Demonios, para muchas startups y casi todas las empresas que recién
comienzan &lt;a href=&#34;https://www.codingvc.com/why-startup-technical-diligence-is-a-waste-of-time/&#34;&gt;la decisión del stack de tecnología ni siquiera importa&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;tienes-que-usar-diferentes-herramientas-para-diferentes-problemas&#34;&gt;Tienes que usar diferentes herramientas para diferentes problemas&lt;/h2&gt;
&lt;!--Creating a data visualization? Probably use d3. An application? React--&gt;
&lt;!--and Redux. A library? You might not need any framework.--&gt;
&lt;p&gt;¿Estás creando una visualización de datos?, probablemente puedas usar
d3. ¿Haces una aplicación?, react y redux. ¿Haces una biblioteca?, tal vez
no necesites ningún framework.&lt;/p&gt;
&lt;!--This is pinned on the JavaScript ecosystem, somehow. If you look at the--&gt;
&lt;!--context, though, it’s what you have to do when you create literally--&gt;
&lt;!--anything. If you’re a Python developer, do you use Twisted or asyncio?--&gt;
&lt;!--If you’re an architect, do you use wood or brick? Do you use pen or--&gt;
&lt;!--pencil?--&gt;
&lt;p&gt;De alguna forma, esto está anclado al ecosistema de JavaScript. Si miras
a través del contexto, esto es algo que tienes que afrontar para crear
casi cualquier cosa. Si eres un desarrollador Python, ¿vas a usar Twisted
o asyncio?. Si eres un arquitecto, ¿usarás madera o ladrillo?, ¿vas a elegir
una lapicera o un lápiz?.&lt;/p&gt;
&lt;!--Sometimes materials are best-in-class for what they do: now that there’s--&gt;
&lt;!--[lodash](https://lodash.com/), there are relatively few reasons to use--&gt;
&lt;!--[underscore](https://underscorejs.org/). Other times they’re still--&gt;
&lt;!--duking it out to see what’s best - browserify or webpack, for example,--&gt;
&lt;!--fix the same problem. But a lot of the time they’re clearly for--&gt;
&lt;!--different purposes: I, for instance, use React when writing a large--&gt;
&lt;!--application like Mapbox Studio, but don’t use a framework writing--&gt;
&lt;!--libraries that need to be small.--&gt;
&lt;p&gt;Algunos materiales son mejores que otros en ciertas áreas: ahora
que existe &lt;a href=&#34;https://lodash.com/&#34;&gt;lodash&lt;/a&gt; hay muy pocas razones
para usar &lt;a href=&#34;https://underscorejs.org/&#34;&gt;underscore&lt;/a&gt;. Otras veces hay
que sumergirse para ver cuál es la mejor. Webpack o browserify es un
ejemplo de dos herramientas que intentan solucionar el mismo problema. Pero
muchas veces las herramientas están claramente resolviendo diferentes
propósitos: Yo, por ejemplo, uso React cuando escribo una aplicación
grande como Mapbox Studio, sin embargo no uso ningún framework cuando
escribo bibliotecas que necesito que sean pequeñas.&lt;/p&gt;
&lt;!--As you learn and grow, you’ll acquire a go-to list of technology for--&gt;
&lt;!--each task. It isn’t the same as an exhaustive list: at most you might--&gt;
&lt;!--know 5 systems thoroughly. You mainly become capable by mastering these--&gt;
&lt;!--systems, not by tinkering with every alternative.--&gt;
&lt;p&gt;A medida que aprendes, vas adquiriendo una lista de tecnologías para resolver
cada tarea. Esta no es una lista exhaustiva de herramientas, como mucho puede
que conozcas 5 sistemas por completo. Posiblemente te vuelvas productivo
conociendo estos sistemas, no por juguetear con cada alternativa.&lt;/p&gt;
&lt;h2 id=&#34;si-alguien-es-más-apasionado-que-vos-sobre-decisiones-tecnológias-está-equivocado-y-deberías-ignorarlo&#34;&gt;Si alguien es más apasionado que vos sobre decisiones tecnológias, está equivocado y deberías ignorarlo&lt;/h2&gt;
&lt;!--If you read the snark, it sounds like you’re required to switch--&gt;
&lt;!--frameworks as soon as a new one accrues more stars on GitHub. Or that--&gt;
&lt;!--you *must* use functional programming. This may be the case in San--&gt;
&lt;!--Francisco - I don’t live there - but in the rest of the world, that’s--&gt;
&lt;!--nonsense. There are successful companies using every stack, from PHP to--&gt;
&lt;!--Haskell.--&gt;
&lt;p&gt;Si lees entre líneas, suena como si tuvieras que cambiar de framework
cada vez que surge una nueva herramienta que consigue más estrellas
en GitHub. O cambiar porque ahora muchos dicen que &lt;em&gt;tienes&lt;/em&gt; que usar programación
funcional. Tal vez ese sea el caso en San Francisco, pero yo no vivo ahí, y
sé que en el resto del mundo es un sin-sentido cambiar de herramientas así.
Además, hay modelos de empresas exitosas en cada stack, desde PHP hasta
Haskell.&lt;/p&gt;
&lt;hr&gt;
&lt;!--So enjoy the rants, if you do, but when you read [How it feels to learn--&gt;
&lt;!--JavaScript in--&gt;
&lt;!--2016](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.ima7p0eob),--&gt;
&lt;!--ask yourself: is the problem with the technology, or is it the unnamed--&gt;
&lt;!--antagonist with that judgmental snark? Or is it that the conversation is--&gt;
&lt;!--never driven by a problem that needs to be solved, but instead organized--&gt;
&lt;!--as a grand tour of all possible tools?--&gt;
&lt;p&gt;Así que disfruta leyendo cómo las personas despotrican contra todas las opciones
que existen, pero cuando leas
&lt;a href=&#34;https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.ima7p0eob&#34;&gt;Cómo se siente aprender JavaScript en 2016&lt;/a&gt;
pregúntate a vos mismo: ¿este es un problema de la tecnología?, ¿es acaso
el hecho de que existen tantas opciones? ¿o en realidad el problema es que este
tipo de miradas nunca está dirigida por un problema concreto a resolver?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/traducciones/own-the-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/traducciones/own-the-tools/</guid>
      <description>&lt;h1 id=&#34;sé-dueño-de-las-herramientas&#34;&gt;Sé dueño de las herramientas&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído desde:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raptitude.com/2020/12/own-the-tools&#34;&gt;https://www.raptitude.com/2020/12/own-the-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Traducción por Hugo Ruscitti&lt;/li&gt;
&lt;/ul&gt;
&lt;!--When I need to look up a word, most of the time I do it in a paper--&gt;
&lt;!--dictionary. --&gt;
&lt;p&gt;Cuando necesito consultar una palabra, casi siempre lo hago en un diccionario
de papel.&lt;/p&gt;
&lt;!--I’m pretty quick at flipping to the right place, and I try to get quicker each--&gt;
&lt;!--time. However, it will never be as quick as typing the word into Google.--&gt;
&lt;p&gt;Soy muy rápido buscando la página exacta, y trato que volverme cada vez más
rápido con la práctica. De todas formas, nunca va a ser más rápido que escribir
la palabra en Google.&lt;/p&gt;
&lt;!--My switch back to paper wasn’t motivated by cantankerousness. It wasn’t a--&gt;
&lt;!--romantic thing or a hipster thing, or an “I love the smell of books” thing. I--&gt;
&lt;!--just found that after years of relying on online dictionaries, a real one--&gt;
&lt;!--offers a better experience in every way except the speed.--&gt;
&lt;p&gt;Usar un diccionario físico no es de cascarrabias. Tampoco es una cuestión romántica
con el papel ni una cosa hipster, o algo como &amp;ldquo;Amo como huelen los libros&amp;rdquo;. Si no
que encontré que un diccionario real ofrece una mejor experiencia que un diccionario
online en todos los aspectos (excepto en la velocidad).&lt;/p&gt;
&lt;!--The whole experience is cleaner and more purposeful. A paper dictionary--&gt;
&lt;!--contains complete answers for almost any conceivable “What does this word mean”--&gt;
&lt;!--problem — and nothing else. No matter which word has you puzzled, the real--&gt;
&lt;!--dictionary has inside it a small patch of print that will perfectly solve your--&gt;
&lt;!--issue. It exists only to deliver this solution, and has no ulterior motives.--&gt;
&lt;p&gt;La experiencia completa es limpia y más significativa. Un diccionario de papel
contiene respuestas completas para casi cualquier problema del tipo &amp;ldquo;¿Qué significa
esta palabra?&amp;rdquo;. Y nada más. No importa que palabra que ha desconcertado, el diccionario
tiene dentro un pequeño texto que resolverá perfectamente tu inquietud. Y solo existe
para entregarte esa solución, sin ninguna otra motivación.&lt;/p&gt;
&lt;!--While using this tool, you will not accidentally start responding to political--&gt;
&lt;!--hot takes, or adjusting your fantasy football lineup. The paper dictionary,--&gt;
&lt;!--like a decent pen or an oven mitt, was designed to deliver only what you--&gt;
&lt;!--need in the moment you access it – knowledge of what “obtuse” or--&gt;
&lt;!--“dysphoria” mean — so that you can carry on with your work.--&gt;
&lt;p&gt;Cuando usas esta herramienta, no vas a encontrarte accidentalmente viendo un titular
de política provocativo, ni ajustando una alineación futbolística de fantasía. El diccionario
de papel, al igual que una lapicera o una manopla para tomar bandejas calientes del
horno, fue diseñado exclusivamente para realizar la tarea que solicita en el momento
justo: saber qué significa &amp;ldquo;obtuso&amp;rdquo; o &amp;ldquo;disfonía&amp;rdquo; en ese momento y seguir con tu trabajo.&lt;/p&gt;
&lt;!--Its services align with your needs because you paid for it and now own it. Thus--&gt;
&lt;!--its role in your life remains clean and uncomplicated — the opposite of any--&gt;
&lt;!--tool you access through a web browser. You paid for it in the simple,--&gt;
&lt;!--transparent way we used to pay for everything: as singular purchases of--&gt;
&lt;!--single-purpose tools that aren’t trying to take anything more from you.--&gt;
&lt;p&gt;El diccionario está alineado con nuestras necesidades porque lo compramos y
nos pertenece. Además, su rol en nuestra vida permanece claro y simple, todo
lo contrario a lo que sucede con las herramientas a las que accedemos
a través de un navegador web. Compraste el diccionario físico en la
forma más simple y transparente en la que compramos el resto de las
cosas: mediante una compra, pagando dinero por herramientas de un solo
propósito que no intentan obtener nada más de vos.&lt;/p&gt;
&lt;!--A Dictionary.com page is happy to provide a free definition, but it will also--&gt;
&lt;!--suggest, with half its surface area, that you consider financing a Nissan--&gt;
&lt;!--Murano this holiday season. It secretly hopes that when you open it you don’t--&gt;
&lt;!--only learn what “veritable” means, as you intended, but that you also sign up--&gt;
&lt;!--for a free trial of Adobe Creative Cloud. Its aims do not align with your own.--&gt;
&lt;!--Its loyalty, if it has any, is not to you, because unlike the stout paper--&gt;
&lt;!--dictionary on your shelf, you are not its owner.--&gt;
&lt;p&gt;Un diccionario online seguramente estará feliz de proveerte definiciones de
forma gratuita, pero también estará dispuesto a sugerirte que consideres
comprar un auto Nissan Murano. Secretamente deseará que cuando consultes su
base de datos no solo quieras aprender qué significa &amp;ldquo;genuino&amp;rdquo;, sino que también
te suscribas a un periodo de pruebas de Adobe Creative Cloud. Sus intenciones
no están alineadas con las tuyas. Su lealtad, si es que la tiene, no es con
vos, porque a diferencia del diccionario físico, no eres su dueño.&lt;/p&gt;
&lt;!--I’ve rejected this maladaptive arrangement in favor of a real dictionary, which--&gt;
&lt;!--is better in every way except that it takes fifteen seconds to find the word--&gt;
&lt;!--instead of three.--&gt;
&lt;p&gt;He rechazado este acuerdo extraño en favor de un diccionario real, que es mejor
en todos los aspectos excepto en que me toma quince segundos encontrar la
palabra en lugar de tres.&lt;/p&gt;
&lt;!--My only regret is not realizing sooner how much I value qualities other than--&gt;
&lt;!--speed in my dictionarying – cleanliness, transparency, loyalty to my best--&gt;
&lt;!--interests, not to mention the refreshing physicality of the whole thing. I--&gt;
&lt;!--didn’t realize how much I’d given up by using the web instead, and how little--&gt;
&lt;!--was gained.--&gt;
&lt;p&gt;Mi único arrepentimiento es no darme cuenta antes de lo mucho que valoro otras
cualidades diferentes a la velocidad: claridad, transparencia, lealtad a mis
intereses, sin mencionar el carácter físico de toda la experiencia. No me había
dado cuenta todo lo que relegué por usar la web en lugar de un
diccionario físico y lo poco que gané a cambio.&lt;/p&gt;
&lt;!--This little insight suggests a principle that we 21st-century wanderers might--&gt;
&lt;!--want to write down: whenever you can, own the tools, or you never stop paying--&gt;
&lt;!--for them.--&gt;
&lt;p&gt;Esta pequeña idea sugiere un principio que nosotros, los vagabundos del siglo 21
podríamos escribir así: Siempre que puedas, sé dueño de las herramientas, o nunca
vas a terminar de pagar por ellas.&lt;/p&gt;
&lt;!--Tool ownership is a great way to use gift cards you receive during the--&gt;
&lt;!--holidays. Instead of blowing it on something ephemeral, get a good, solid tool--&gt;
&lt;!--that will serve you for life and ask nothing in return.--&gt;
&lt;p&gt;La adquisición de las herramientas es una muy buena forma de usar las tarjetas
de regalos. En lugar de desperdiciarlas en algo efímero, conseguí una herramienta
sólida y buena que te sirva en la vida sin pedir nada a cambio.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.examplelab.com.ar/links-files/writing-to-remember/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links-files/writing-to-remember/</guid>
      <description>&lt;h2 id=&#34;writing-to-remember&#34;&gt;Writing to Remember&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Artículo extraído desde:
&lt;a href=&#34;https://cognition.happycog.com/article/writing-to-remember&#34;&gt;https://cognition.happycog.com/article/writing-to-remember&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the last 5 ½ years, I’ve worked from home. So except for the
occasional on-site meeting, almost all of my meetings have been done on
the phone. If you
were a fly on the wall in my office during a phone meeting, you’d see me
with my head down scribbling notes while listening, scribbling notes
while talking, and even asking for a moment so I can take more notes.&lt;/p&gt;
&lt;p&gt;During in-person meetings, I also try to take as many notes as possible.
I often scribble notes while others are talking, and if I’m the one
doing the talking—or if the discussion is a fast paced back-and-forth—I
try to jot down as much as I can during breaks in the conversation.
Sometimes I’m able to pen a few keywords in the middle of conversations
that I can go back to later (during a break, perhaps) and elaborate on
so as to not forget the most salient information.&lt;/p&gt;
&lt;p&gt;But I hardly reference the notes later. I write down the notes to help
me process the meeting as it happens.&lt;/p&gt;
&lt;p&gt;Why do I do this? It’s not because I’m a bad listener. I’m just not good
at retaining most of the information I hear. I can process information I
hear on the spot and provide feedback and responses that make sense, but
for deeper analytical thoughts and responses, I need to write the
information I’m hearing down in order to properly process it.&lt;/p&gt;
&lt;p&gt;I don’t know if I am predisposed to this type of behavior through the
gene lottery or if it was a learned behavior while in school. When I
didn’t take notes, I quickly fell behind in a class or lost focus as my
mind wandered off to other places. In graduate school, I found myself
taking detailed notes just to keep up. It became a survival mechanism
for me.&lt;/p&gt;
&lt;p&gt;My note-taking habits remind me of the tagline from the &lt;em&gt;Field
Notes&lt;/em&gt; notebooks by our friends at Coudal
Partners:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“I’m not writing it down to remember it later, I’m writing it down to
remember it now.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;drucker-on-learning&#34;&gt;Drucker on Learning&lt;/h3&gt;
&lt;p&gt;Back in July, I &lt;a href=&#34;http://ryanirelan.com/articles/absence-of-failure/&#34;&gt;briefly
mused&lt;/a&gt; on my
personal site about an essay by Peter F. Drucker called &lt;em&gt;Managing
Oneself&lt;/em&gt;. I was surprised by how intriguing I found the 55-page treatise
on self-awareness and self-acknowledgment of our own strengths and
weaknesses. Here’s my quick summary of the essay from that post:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Drucker touches on many topics throughout the book about managing your
own career, knowing yourself and your co-workers. He draws contrasts
between the working life now and how it was before we had a vast
majority of the workforce as knowledge workers. There are a few good
suggestions on working in teams (the book would be a great team
building exercise) and learning to work with your co-workers instead
of just alongside them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;An important part about knowing yourself, according to Drucker, is
awareness of how you perform and learn. Some people perform better in
situations where they process information through listening. Others
learn and perform better by reading.&lt;/p&gt;
&lt;p&gt;Drucker also talked about how writers learn. Because I’ve worked
remotely for years with both co-workers and clients, I spend a large
part of my day writing emails, Basecamp messages and, yes, even code.
Outside of writing an essay or a book, a lot of my daily routine
involves writing. So, am I writer? Yes.&lt;/p&gt;
&lt;p&gt;Unsurprisingly, writers learn and retain information best when they
write it down. It’s not just about recording the information for later
reference. Writing it down is a hack of sorts to help remember, and
perhaps process and analyze, the information that is being discussed.&lt;/p&gt;
&lt;p&gt;Drucker has a great anecdote about the composer Beethoven:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some people learn by taking copious notes. Beethoven, for example,
left behind an enormous number of sketchbooks, yet he said he never
actually looked at them when he composed. Asked why he kept them, he
is reported to have replied: “If I don’t write it down immediately, I
forget it right away. If I put it in a sketchbook, I never forget it
and I never have to look it up again.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Do you have that same experience?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acerca de este sitio</title>
      <link>https://www.examplelab.com.ar/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/about/</guid>
      <description>&lt;p&gt;Este es mi blog personal, en donde escribo sobre cosas que voy
aprendiendo sobre desarrollo de software, gestión personal y
otros proyectos que me parecen interesantes.&lt;/p&gt;
&lt;div class=&#34;tc&#34;&gt;
  &lt;img src=&#34;https://www.examplelab.com.ar/images/avatar.png&#34; width=&#34;128&#34; height=&#34;128&#34; class=&#34;br-100 dib&#34;&gt;
&lt;/div&gt;
&lt;p&gt;Si queres conversar conmigo, enviame un mail a la dirección de mail que aparece
en &lt;a href=&#34;https://github.com/hugoruscitti&#34;&gt;mi perfil de github&lt;/a&gt; o dejame
un mensaje en mi canal de &lt;a href=&#34;https://www.youtube.com/user/hugoruscitti/videos&#34;&gt;youtube&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Link y artículos</title>
      <link>https://www.examplelab.com.ar/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/links/</guid>
      <description>&lt;p&gt;En esta sección vas a encontrar una serie de artículos
que me parecen muy recomendables, algunos de estos lo
pude traducir, otros no, pero lo que sí hice con todos
es preservarlos, guardando copias por si algún día
desparecen de Internet.&lt;/p&gt;
&lt;p&gt;Expliqué mi motivación al realizar este archivo de artículos
&lt;a href=&#34;https://www.examplelab.com.ar/posts/2021-01-29-coleccionando-articulos/&#34;&gt;en este otro post&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;tc&#34;&gt;
  &lt;img src=&#34;https://www.examplelab.com.ar/images/links.png&#34; width=&#34;100&#34; height=&#34;100&#34; class=&#34;br-100 dib&#34;&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/programmings-dirtiest-little-secret&#34;&gt;Programming&amp;rsquo;s Dirtiest Little Secret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/iam-boring-programmer&#34;&gt;I’m a boring programmer (and proud of it)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/disparar-y-avanzar&#34;&gt;Disparar y avanzar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/all-time-learning-to-program&#34;&gt;This is Why You Spent All that Time Learning to Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/87&#34;&gt;Write Code Like You Just Learned How to Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/own-the-tools&#34;&gt;Own the Tools&lt;/a&gt; - &lt;a href=&#34;https://www.examplelab.com.ar/links-files/traducciones/own-the-tools/&#34;&gt;🇦🇷 traducción&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/everything-is-fine-with-javascript&#34;&gt;Everything is fine with JavaScript&lt;/a&gt; - &lt;a href=&#34;https://www.examplelab.com.ar/links-files/traducciones/everything-is-fine-with-javascript/&#34;&gt;🇦🇷 traducción&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/advice-from-an-old-programmer&#34;&gt;Advice from an Old Programmer&lt;/a&gt; - &lt;a href=&#34;https://www.examplelab.com.ar/links-files/traducciones/advice-from-an-old-programmer/&#34;&gt;🇦🇷 traducción&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/writing-to-remember&#34;&gt;Writing to Remember&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.examplelab.com.ar/links-files/talk&#34;&gt;Write Like You Talk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Posts Archive</title>
      <link>https://www.examplelab.com.ar/archivo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.examplelab.com.ar/archivo/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
